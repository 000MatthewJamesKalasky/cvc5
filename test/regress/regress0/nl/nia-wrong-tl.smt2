; COMMAND-LINE: --nl-alg
; EXPECT: sat
(set-logic QF_NIA)
(set-info :status sat)
(set-info :source |
     Constraint systems stating that a matrix interpretation is
     compatible with a rewriting system (weakly compatible with
     all rules, strictly compatible with at least one).

     Contributed by Johannes Waldmann at HTKW Leipzig.
   |)
(declare-fun n0 () Int)
(declare-fun n1 () Int)
(declare-fun n2 () Int)
(declare-fun n3 () Int)
(declare-fun n4 () Int)
(declare-fun n5 () Int)
(declare-fun n6 () Int)
(declare-fun n7 () Int)
(declare-fun n8 () Int)
(declare-fun n9 () Int)
(declare-fun n10 () Int)
(declare-fun n11 () Int)
(declare-fun n12 () Int)
(declare-fun n13 () Int)
(declare-fun n14 () Int)
(declare-fun n15 () Int)
(declare-fun n16 () Int)
(declare-fun n17 () Int)
(declare-fun n18 () Int)
(declare-fun n19 () Int)
(declare-fun n20 () Int)
(declare-fun n21 () Int)
(declare-fun n22 () Int)
(declare-fun n23 () Int)
(declare-fun n24 () Int)
(declare-fun n25 () Int)
(declare-fun n26 () Int)
(declare-fun n27 () Int)
(declare-fun n28 () Int)
(declare-fun n29 () Int)
(declare-fun n30 () Int)
(declare-fun n31 () Int)
(declare-fun n32 () Int)
(declare-fun n33 () Int)
(declare-fun n34 () Int)
(declare-fun n35 () Int)
(declare-fun n36 () Int)
(declare-fun n37 () Int)
(declare-fun n38 () Int)
(declare-fun n39 () Int)
(declare-fun n40 () Int)

;(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ n1 (* (- 1) n7)) 1))) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n7))) 0)))))
(check-sat)
(exit)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (not (>= (+ n1 (* (- 1) n7)) 1))) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n7))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ n1 (* (- 1) n21)) 0))) (not (>= (+ (* n1 n21) (* (- 1) (* n21 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ n1 (* (- 1) n3)) 1))) (>= (+ n5 (* (- 1) (* n1 n5)) (* n3 n5)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (not (>= (+ n1 (* (- 1) n3)) 1))) (>= (+ n7 (* (- 1) (* n1 n7)) (* n3 n7)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (= n1 n3)) (= (* n1 n5 n7) (* n3 n5 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n7) 1) (= n1 n3)) (= (* n1 n7 n7) (* n3 n7 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n12 1) (= n1 n3)) (= (* n1 n12) (* n3 n12)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ n3 (* (- 1) n21)) 1))) (not (>= (+ (* n3 n21) (* (- 1) (* n21 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7 n21) 1) (not (>= (+ n1 (* (- 1) n5)) 0))) (not (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n36) 1) (not (>= (+ n1 (* (- 1) n5)) 0))) (not (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n5 n5 n5 n36))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7 n21) 1) (not (>= (+ n3 (* (- 1) n5)) 0))) (not (>= (+ (* n3 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n36) 1) (not (>= (+ n3 (* (- 1) n5)) 0))) (not (>= (+ (* n3 n5 n36) (* (- 1) (* n5 n5 n36))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n36) 1) (not (>= (+ n3 (* (- 1) n5)) 0))) (not (>= (+ (* n3 n5 n5 n36) (* (- 1) (* n5 n5 n5 n36))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7 n21) 1) (= n5 n7)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7 n21) 1) (= n5 n7)) (= (* n5 n5 n5 n7 n21) (* n5 n5 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n36) 1) (= n5 n7)) (= (* n5 n5 n36) (* n5 n7 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n36) 1) (= n5 n7)) (= (* n5 n5 n5 n36) (* n5 n5 n7 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n7 n21) 1) (= n5 n7)) (= (* n1 n5 n7 n21) (* n1 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n36) 1) (= n5 n7)) (= (* n1 n5 n36) (* n1 n7 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n5) 1) (= n5 n7)) (= (* n1 n5 n5) (* n1 n5 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7 n21) 1) (>= (+ n5 (* (- 1) n9)) 1)) (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n36) 1) (>= (+ n5 (* (- 1) n9)) 1)) (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n9 n36))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n36) 1) (>= (+ n5 (* (- 1) n9)) 1)) (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n9 n36))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ n5 (* (- 1) n12)) 0))) (not (>= (+ (* n5 n21) (* (- 1) (* n12 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n5) 1) (not (>= (+ n5 (* (- 1) n12)) 0))) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n12))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (not (>= (+ n5 (* (- 1) n12)) 0))) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n12))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n3 n7) 1) (not (>= (+ n5 (* (- 1) n12)) 0))) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n7 n12))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7 n21) 1) (= n5 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7 n21) 1) (= n5 n21)) (= (* n5 n5 n5 n7 n21) (* n5 n5 n7 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (= n5 n21)) (= (* n5 n21) (* n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (= n5 n21)) (= (* n5 n36) (* n21 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n36) 1) (= n5 n21)) (= (* n5 n5 n36) (* n5 n21 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n36) 1) (= n5 n21)) (= (* n5 n5 n5 n36) (* n5 n5 n21 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n7 n21) 1) (= n5 n21)) (= (* n1 n5 n7 n21) (* n1 n7 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n36) 1) (= n5 n21)) (= (* n1 n5 n36) (* n1 n21 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n5) 1) (= n5 n21)) (= (* n1 n5 n5) (* n1 n5 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n3 n7) 1) (= n5 n21)) (= (* n3 n5 n7) (* n3 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ n5 (* (- 1) n21)) 1))) (>= (+ n21 (* (- 1) (* n5 n21)) (* n21 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n3 n7) 1) (not (>= (+ n5 (* (- 1) n21)) 1))) (>= (+ (* n3 n7) (* (- 1) (* n3 n5 n7)) (* n3 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n36) 1) (not (>= (+ n3 (* (- 1) n5)) 1))) (>= (+ (* n5 n5 n36) (* (- 1) (* n3 n5 n5 n36)) (* n5 n5 n5 n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n36) 1) (not (>= (+ n1 (* (- 1) n5)) 1))) (>= (+ (* n5 n5 n36) (* (- 1) (* n1 n5 n5 n36)) (* n5 n5 n5 n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (>= (+ n5 (* (- 1) n9)) 1)) (not (>= (+ (* n7 n21) (* (- 1) (* n5 n7 n21)) (* n7 n9 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7 n21) 1) (>= (+ n5 (* (- 1) n9)) 1)) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n5 n5 n7 n21)) (* n5 n7 n9 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7 n21) 1) (>= (+ n5 (* (- 1) n9)) 1)) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n7 n9 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n21) 1) (>= (+ n5 (* (- 1) n9)) 1)) (not (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n21)) (* n5 n9 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (>= (+ n5 (* (- 1) n9)) 1)) (not (>= (+ n36 (* (- 1) (* n5 n36)) (* n9 n36)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n36) 1) (>= (+ n5 (* (- 1) n9)) 1)) (not (>= (+ (* n5 n36) (* (- 1) (* n5 n5 n36)) (* n5 n9 n36)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n36) 1) (>= (+ n5 (* (- 1) n9)) 1)) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n9 n36)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n7 n21) 1) (>= (+ n5 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n5 n7 n21)) (* n1 n7 n9 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n36) 1) (>= (+ n5 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n36)) (* n1 n9 n36)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n36) 1) (not (>= (+ n1 (* (- 1) n7)) 0))) (not (>= (+ (* n1 n7 n36) (* (- 1) (* n7 n7 n36))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n21) 1) (not (>= (+ n1 (* (- 1) n7)) 0))) (not (>= (+ (* n1 n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n36) 1) (not (>= (+ n3 (* (- 1) n7)) 0))) (not (>= (+ (* n3 n7 n36) (* (- 1) (* n7 n7 n36))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n21) 1) (not (>= (+ n3 (* (- 1) n7)) 0))) (not (>= (+ (* n3 n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n7 n21) 1) (= n5 n7)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n36) 1) (= n5 n7)) (= (* n5 n7 n36) (* n7 n7 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n5 n21) 1) (= n5 n7)) (= (* n1 n5 n5 n21) (* n1 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n21) 1) (= n5 n7)) (= (* n1 n5 n21) (* n1 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n3 n5) 1) (= n5 n7)) (= (* n3 n5 n5) (* n3 n5 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n21) 1) (= n5 n7)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n21) 1) (= n5 n7)) (= (* n5 n5 n5 n5 n21) (* n5 n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n36) 1) (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ (* n7 n7 n36) (* (- 1) (* n7 n9 n36))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n21) 1) (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ n7 (* (- 1) n12)) 0))) (not (>= (+ (* n7 n21) (* (- 1) (* n12 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n21) 1) (not (>= (+ n7 (* (- 1) n12)) 0))) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n12 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (not (>= (+ n7 (* (- 1) n12)) 0))) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n12))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n3 n5) 1) (not (>= (+ n7 (* (- 1) n12)) 0))) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n12))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n3 n7) 1) (not (>= (+ n7 (* (- 1) n12)) 0))) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n7 n12))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (= n7 n21)) (= (* n7 n21) (* n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n7 n21) 1) (= n7 n21)) (= (* n7 n7 n7 n21) (* n7 n7 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (= n7 n21)) (= (* n7 n36) (* n21 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n36) 1) (= n7 n21)) (= (* n7 n7 n36) (* n7 n21 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n5 n21) 1) (= n7 n21)) (= (* n1 n5 n7 n21) (* n1 n5 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n21) 1) (= n7 n21)) (= (* n1 n7 n21) (* n1 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n3 n5) 1) (= n7 n21)) (= (* n3 n5 n7) (* n3 n5 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n3 n7) 1) (= n7 n21)) (= (* n3 n7 n7) (* n3 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n21) 1) (= n7 n21)) (= (* n5 n5 n7 n21) (* n5 n5 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n21) 1) (= n7 n21)) (= (* n5 n5 n5 n7 n21) (* n5 n5 n5 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n21) 1) (>= n7 2)) (not (>= (+ (* 2 (* n5 n5 n5 n21)) (* (- 1) (* n5 n5 n5 n7 n21))) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ n7 (* (- 1) n21)) 1))) (>= (+ n21 (* (- 1) (* n7 n21)) (* n21 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n3 n5) 1) (not (>= (+ n7 (* (- 1) n21)) 1))) (>= (+ (* n3 n5) (* (- 1) (* n3 n5 n7)) (* n3 n5 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n3 n7) 1) (not (>= (+ n7 (* (- 1) n21)) 1))) (>= (+ (* n3 n7) (* (- 1) (* n3 n7 n7)) (* n3 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n36) 1) (not (>= (+ n5 (* (- 1) n7)) 1))) (>= (+ (* n7 n36) (* (- 1) (* n5 n7 n36)) (* n7 n7 n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n21) 1) (not (>= (+ n5 (* (- 1) n7)) 1))) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n5 n21)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n7 n21) (* (- 1) (* n7 n7 n21)) (* n7 n9 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n7 n21) 1) (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n7 n7 n7 n21)) (* n7 n7 n9 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n36 (* (- 1) (* n7 n36)) (* n9 n36)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n36) 1) (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n36)) (* n7 n9 n36)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n21) 1) (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n5 n21) (* (- 1) (* n5 n7 n21)) (* n5 n9 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n21) 1) (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n5 n7 n21)) (* n5 n5 n9 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n21) 1) (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n7) 1) (not (>= (+ n1 (* (- 1) n21)) 0))) (not (>= (+ (* n1 n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n7) 1) (not (>= (+ n3 (* (- 1) n21)) 0))) (not (>= (+ (* n3 n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n5 n7) 1) (= n5 n21)) (= (* n1 n5 n5 n7) (* n1 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n7) 1) (= n5 n21)) (= (* n1 n5 n7) (* n1 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n3 1) (= n5 n21)) (= (* n3 n5) (* n3 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7) 1) (= n5 n21)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n7) 1) (= n5 n21)) (= (* n5 n5 n5 n5 n7) (* n5 n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= n5 n21)) (= (* n5 n5) (* n5 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= n5 n21)) (= (* n5 n7) (* n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n7 n7) 1) (= n5 n21)) (= (* n5 n7 n7 n7) (* n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n5 n7) 1) (= n7 n21)) (= (* n1 n5 n7 n7) (* n1 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n7) 1) (= n7 n21)) (= (* n1 n7 n7) (* n1 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n3 1) (= n7 n21)) (= (* n3 n7) (* n3 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7) 1) (= n7 n21)) (= (* n5 n5 n7 n7) (* n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n7) 1) (= n7 n21)) (= (* n5 n5 n5 n7 n7) (* n5 n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= n7 n21)) (= (* n5 n7) (* n5 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= n7 n21)) (= (* n7 n7) (* n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n7 n7) 1) (= n7 n21)) (= (* n7 n7 n7 n7) (* n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n7) 1) (>= (+ n12 (* (- 1) n21)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n1 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (>= (+ n12 (* (- 1) n21)) 0)) (>= (+ (* n1 n12) (* (- 1) (* n1 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (>= (+ n12 (* (- 1) n21)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n5 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (>= (+ n12 (* (- 1) n21)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n7) 1) (>= n21 2)) (not (>= (+ (* 2 (* n5 n5 n5 n7)) (* (- 1) (* n5 n5 n5 n7 n21))) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n7) 1) (not (>= (+ n7 (* (- 1) n21)) 1))) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n7 n7)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5 n7) 1) (not (>= (+ n5 (* (- 1) n21)) 1))) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n5 n7)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n5 n7) 1) (>= (+ n12 (* (- 1) n21)) 1)) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n5 n7 n12)) (* n1 n5 n7 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n7) 1) (>= (+ n12 (* (- 1) n21)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n7 n12)) (* n1 n7 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (>= (+ n12 (* (- 1) n21)) 1)) (not (>= (+ n1 (* (- 1) (* n1 n12)) (* n1 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (>= (+ n12 (* (- 1) n21)) 1)) (not (>= (+ n5 (* (- 1) (* n5 n12)) (* n5 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (>= (+ n12 (* (- 1) n21)) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ (* n1 n7) (* (- 1) (* n3 n12))) 0))) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n12 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (= (* n1 n5) (* n1 n7))) (= (* n1 n5 n21) (* n1 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n21) 1) (= (* n1 n5) (* n1 n7))) (= (* n1 n5 n5 n21) (* n1 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (= (* n1 n7) (* n1 n21))) (= (* n1 n7 n21) (* n1 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n21) 1) (= (* n1 n7) (* n1 n21))) (= (* n1 n5 n7 n21) (* n1 n5 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 1))) (>= (+ n21 (* (- 1) (* n1 n7 n21)) (* n3 n21 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ (* n1 n5) (* (- 1) (* n3 n12))) 0))) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n12))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (>= (+ (* n1 n5) (* (- 1) (* n3 n21))) 0)) (>= (+ (* n1 n5 n36) (* (- 1) (* n3 n21 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (= (* n1 n5) (* n1 n7))) (= (* n1 n5 n7 n21) (* n1 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (= (* n1 n5) (* n1 n7))) (= (* n1 n5 n36) (* n1 n7 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= (* n1 n5) (* n1 n7))) (= (* n1 n5 n5) (* n1 n5 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (= (* n1 n5) (* n1 n21))) (= (* n1 n5 n7 n21) (* n1 n7 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (= (* n1 n5) (* n1 n21))) (= (* n1 n5 n36) (* n1 n21 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= (* n1 n5) (* n1 n21))) (= (* n1 n5 n5) (* n1 n5 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ (* n1 n5) (* (- 1) (* n3 n21))) 1))) (>= (+ n5 (* (- 1) (* n1 n5 n5)) (* n3 n5 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (>= (+ (* n1 n5) (* (- 1) (* n1 n9))) 1)) (not (>= (+ n36 (* (- 1) (* n1 n5 n36)) (* n1 n9 n36)) 1)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n7))) 1))) (>= (+ n5 (* (- 1) (* n1 n5 n5)) (* n1 n5 n7)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n21))) 1))) (>= (+ n5 (* (- 1) (* n1 n5 n5)) (* n1 n5 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (= (* n5 n21) (* n7 n21))) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5) 1) (= (* n5 n21) (* n7 n21))) (= (* n5 n5 n5 n5 n21) (* n5 n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (= (* n5 n21) (* n7 n21))) (= (* n1 n5 n21) (* n1 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n5) 1) (= (* n5 n21) (* n7 n21))) (= (* n1 n5 n5 n21) (* n1 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n7) 1) (= (* n5 n21) (* n7 n21))) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n5) 1) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1))) (>= (+ (* n5 n5 n5) (* (- 2) (* n5 n5 n5 n7)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n12))) 0))) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n7 n12))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (= (* n1 n21) (* n3 n21))) (= (* n1 n5 n7 n21) (* n3 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= (* n1 n21) (* n3 n21))) (= (* n1 n7 n21) (* n3 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (= (* n1 n7) (* n1 n21))) (= (* n1 n5 n7 n7) (* n1 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= (* n1 n7) (* n1 n21))) (= (* n1 n7 n7) (* n1 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (= (* n1 n5) (* n1 n21))) (= (* n1 n5 n5 n7) (* n1 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= (* n1 n5) (* n1 n21))) (= (* n1 n5 n7) (* n1 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1))) (>= (+ n7 (* (- 1) (* n1 n7 n21)) (* n3 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= (* n5 n36) (* n7 n36))) (= (* n5 n5 n36) (* n5 n7 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (= (* n5 n36) (* n7 n36))) (= (* n5 n5 n5 n36) (* n5 n5 n7 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (= (* n5 n36) (* n7 n36))) (= (* n1 n5 n36) (* n1 n7 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 0))) (not (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n5 n5 n5 n36))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 1))) (>= (+ (* n5 n5) (* (- 1) (* n1 n5 n5 n36)) (* n5 n5 n5 n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 0))) (not (>= (+ (* n3 n5 n7 n12) (* (- 1) (* n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7) 1) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 0))) (not (>= (+ (* n3 n5 n5 n7 n12) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7) 1) (not (>= (+ (* n3 n21) (* (- 1) (* n5 n21))) 0))) (not (>= (+ (* n3 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7) 1) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n21))) 0))) (not (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (= (* n5 n21) (* n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7) 1) (= (* n5 n21) (* n7 n21))) (= (* n5 n5 n5 n7 n21) (* n5 n5 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n1 n7) 1) (= (* n5 n21) (* n7 n21))) (= (* n1 n5 n7 n21) (* n1 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7) 1) (not (>= (+ (* n1 n21) (* (- 1) (* n5 n21))) 0))) (not (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7) 1) (not (>= (+ (* n3 n21) (* (- 1) (* n5 n21))) 1))) (>= (+ (* n5 n5 n7) (* (- 1) (* n3 n5 n5 n7 n21)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7) 1) (not (>= (+ (* n1 n21) (* (- 1) (* n5 n21))) 1))) (>= (+ (* n5 n5 n7) (* (- 1) (* n1 n5 n5 n7 n21)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7) 1) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n21))) 1))) (>= (+ (* n5 n5 n7) (* (- 1) (* n1 n5 n5 n7 n7)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1))) (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n7 n12)) (* n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7) 1) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1))) (>= (+ (* n5 n5 n7) (* (- 1) (* n3 n5 n5 n7 n12)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5 n7) 1) (not (>= (+ (* 2 n5) (* (- 1) (* n5 n21))) 1))) (>= (+ (* n5 n5 n7) (* (- 2) (* n5 n5 n5 n7)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= (* n5 n36) (* n7 n36))) (= (* n5 n7 n36) (* n7 n7 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (not (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0))) (not (>= (+ (* n1 n7 n36) (* (- 1) (* n7 n7 n36))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (not (>= (+ (* n5 n36) (* (- 1) (* n7 n36))) 1))) (>= (+ n7 (* (- 1) (* n5 n7 n36)) (* n7 n7 n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n5 n21))) 0))) (not (>= (+ (* n1 n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n21))) 0))) (not (>= (+ (* n3 n5 n7 n7 n7) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= (* n5 n5 n5) (* n5 n5 n21))) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (= (* n5 n5 n5) (* n5 n5 n21))) (= (* n5 n5 n5 n5 n7) (* n5 n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n21))) 0))) (not (>= (+ (* n3 n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= (* n5 n5 n21) (* n5 n7 n7))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (= (* n5 n5 n21) (* n5 n7 n7))) (= (* n5 n5 n5 n7 n21) (* n5 n5 n7 n7 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= (* n5 n5 n21) (* n7 n7 n7))) (= (* n5 n5 n7 n21) (* n7 n7 n7 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (= (* n5 n5 n21) (* n7 n7 n7))) (= (* n5 n5 n5 n7 n21) (* n5 n7 n7 n7 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= (* n5 n5 n21) (* n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (= (* n5 n5 n21) (* n5 n7 n21))) (= (* n5 n5 n5 n7 n21) (* n5 n5 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (= (* n5 n5 n21) (* n7 n7 n21))) (= (* n5 n5 n5 n7 n21) (* n5 n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n21))) 0))) (not (>= (+ (* n1 n5 n7 n7 n21) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n5 n21))) 1))) (>= (+ (* n5 n7) (* (- 1) (* n1 n5 n5 n5 n7)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1))) (>= (+ n7 (* (- 1) (* n5 n5 n5 n7)) (* n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1))) (>= (+ (* n5 n7) (* (- 1) (* n5 n5 n5 n5 n7)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n21))) 1))) (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n7 n7 n7)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n7) 1) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n21))) 1))) (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n5 n7 n7)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n5))) 0))) (not (>= (+ (* n3 n7 n7 n7 n21) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n5))) 0))) (not (>= (+ (* n3 n7 n7 n36) (* (- 1) (* n5 n5 n5 n36))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (= (* n5 n5 n5) (* n5 n5 n21))) (= (* n5 n5 n5 n7 n21) (* n5 n5 n7 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (= (* n5 n5 n5) (* n5 n5 n21))) (= (* n5 n5 n5 n36) (* n5 n5 n21 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n5))) 0))) (not (>= (+ (* n3 n5 n7 n7 n21) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n5))) 0))) (not (>= (+ (* n3 n5 n7 n36) (* (- 1) (* n5 n5 n5 n36))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (= (* n5 n5 n5) (* n5 n7 n7))) (= (* n5 n5 n5 n7 n21) (* n5 n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (= (* n5 n5 n5) (* n5 n7 n7))) (= (* n5 n5 n5 n36) (* n5 n7 n7 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0)) (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0)) (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n7 n7 n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (= (* n5 n5 n5) (* n5 n7 n21))) (= (* n5 n5 n5 n7 n21) (* n5 n7 n7 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (= (* n5 n5 n5) (* n5 n7 n21))) (= (* n5 n5 n5 n36) (* n5 n7 n21 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (= (* n5 n5 n5) (* n7 n7 n21))) (= (* n5 n5 n5 n7 n21) (* n7 n7 n7 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (= (* n5 n5 n5) (* n7 n7 n21))) (= (* n5 n5 n5 n36) (* n7 n7 n21 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 0))) (not (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 0))) (not (>= (+ (* n1 n36 n36) (* (- 1) (* n5 n5 n5 n36))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 0))) (not (>= (+ (* n1 n7 n7 n21 n21) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 0))) (not (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n5 n5 n5 n36))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1))) (>= (+ (* n7 n21) (* (- 1) (* n1 n7 n21 n36)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1))) (>= (+ n36 (* (- 1) (* n1 n36 n36)) (* n5 n5 n5 n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n5))) 1))) (>= (+ (* n7 n21) (* (- 1) (* n3 n7 n7 n7 n21)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n5))) 1))) (>= (+ n36 (* (- 1) (* n3 n7 n7 n36)) (* n5 n5 n5 n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1))) (>= (+ (* n7 n21) (* (- 1) (* n1 n7 n7 n21 n21)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1))) (>= (+ n36 (* (- 1) (* n1 n7 n21 n36)) (* n5 n5 n5 n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n7 n21) 1) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n5))) 1))) (>= (+ (* n7 n21) (* (- 1) (* n3 n5 n7 n7 n21)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n36 1) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n5))) 1))) (>= (+ n36 (* (- 1) (* n3 n5 n7 n36)) (* n5 n5 n5 n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (= (* n5 n5 n21) (* n7 n7 n7))) (= (* n5 n5 n21 n21) (* n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (= (* n5 n7 n7) (* n7 n7 n7))) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (= (* n5 n7 n21) (* n7 n7 n7))) (= (* n5 n7 n21 n21) (* n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (= (* n7 n7 n7) (* n7 n7 n21))) (= (* n7 n7 n7 n21) (* n7 n7 n21 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ (* n1 n36) (* (- 1) (* n7 n7 n7))) 0))) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n7 n7 n7))) 1))) (>= (+ n21 (* (- 1) (* n5 n7 n21 n21)) (* n7 n7 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n7))) 1))) (>= (+ n21 (* (- 1) (* n5 n5 n21 n21)) (* n7 n7 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ (* n1 n36) (* (- 1) (* n7 n7 n7))) 1))) (>= (+ n21 (* (- 1) (* n1 n21 n36)) (* n7 n7 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 1))) (>= (+ n21 (* (- 1) (* n5 n5 n5 n21)) (* n7 n7 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n21 1) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n7 n7 n7))) 1))) (>= (+ n21 (* (- 1) (* n5 n7 n7 n21)) (* n7 n7 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n7 n21))) 0))) (not (>= (+ (* n1 n5 n5 n5 n5) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n7 n21))) 0))) (not (>= (+ (* n3 n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= (* n5 n5 n21) (* n5 n7 n21))) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (= (* n5 n5 n21) (* n5 n7 n21))) (= (* n5 n5 n5 n5 n21) (* n5 n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (= (* n5 n5 n21) (* n5 n7 n21))) (= (* n1 n5 n5 n21) (* n1 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= (* n5 n5 n5) (* n5 n7 n21))) (= (* n5 n5 n5 n5) (* n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (= (* n5 n5 n5) (* n5 n7 n21))) (= (* n5 n5 n5 n5 n5) (* n5 n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (= (* n5 n5 n5) (* n5 n7 n21))) (= (* n1 n5 n5 n5) (* n1 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n7 n21))) 0))) (not (>= (+ (* n3 n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= (* n5 n7 n7) (* n5 n7 n21))) (= (* n5 n5 n7 n7) (* n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (= (* n5 n7 n7) (* n5 n7 n21))) (= (* n5 n5 n5 n7 n7) (* n5 n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (= (* n5 n7 n7) (* n5 n7 n21))) (= (* n1 n5 n7 n7) (* n1 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= (* n5 n7 n21) (* n7 n7 n7))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (= (* n5 n7 n21) (* n7 n7 n7))) (= (* n5 n5 n5 n7 n21) (* n5 n5 n7 n7 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (= (* n5 n7 n21) (* n7 n7 n7))) (= (* n1 n5 n7 n21) (* n1 n7 n7 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= (* n5 n7 n21) (* n7 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (= (* n5 n7 n21) (* n7 n7 n21))) (= (* n5 n5 n5 n7 n21) (* n5 n5 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (= (* n5 n7 n21) (* n7 n7 n21))) (= (* n1 n5 n7 n21) (* n1 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n7 n21))) 0))) (not (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n7 n21))) 1))) (>= (+ n5 (* (- 1) (* n5 n5 n5 n21)) (* n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n7 n21))) 1))) (>= (+ (* n5 n5) (* (- 1) (* n5 n5 n5 n5 n21)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n7 n21))) 1))) (>= (+ (* n5 n5) (* (- 1) (* n1 n5 n5 n5 n5)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n7 n7 n7))) 1))) (>= (+ n1 (* (- 1) (* n1 n5 n7 n21)) (* n1 n7 n7 n7)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n21))) 1))) (>= (+ n5 (* (- 1) (* n5 n5 n5 n5)) (* n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n21))) 1))) (>= (+ (* n5 n5) (* (- 1) (* n5 n5 n5 n5 n5)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1))) (>= (+ n5 (* (- 1) (* n5 n5 n7 n7)) (* n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1))) (>= (+ (* n5 n5) (* (- 1) (* n5 n5 n5 n7 n7)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n7 n21))) 1))) (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n5 n7 n7)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n7 n21))) 1))) (>= (+ (* n5 n5) (* (- 1) (* n1 n5 n5 n7 n21)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= (* n5 n5) 1) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n7 n21))) 1))) (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n5 n5 n7)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n7 n7 n21))) 1))) (>= (+ n1 (* (- 1) (* n1 n5 n7 n21)) (* n1 n7 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= (* n5 n5 n36) (* n7 n7 n36))) (= (* n5 n5 n5 n36) (* n5 n7 n7 n36)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ (* n1 n5 n36) (* (- 1) (* n5 n5 n36))) 0))) (not (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n5 n5 n5 n36))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ (* n1 n5 n36) (* (- 1) (* n5 n5 n36))) 1))) (>= (+ n5 (* (- 1) (* n1 n5 n5 n36)) (* n5 n5 n5 n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= (* n5 n5 n5) (* n7 n7 n21))) (= (* n5 n5 n5 n7) (* n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= (* n5 n7 n7) (* n7 n7 n21))) (= (* n5 n7 n7 n7) (* n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= (* n7 n7 n7) (* n7 n7 n21))) (= (* n7 n7 n7 n7) (* n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= (* n5 n7 n21) (* n7 n7 n21))) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n7 n7 n21))) 1))) (>= (+ n7 (* (- 1) (* n5 n7 n7 n21)) (* n7 n7 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21))))) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n21))) 1))) (>= (+ n7 (* (- 1) (* n5 n5 n5 n7)) (* n7 n7 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n7 n7 n21))) 1))) (>= (+ n7 (* (- 1) (* n7 n7 n7 n7)) (* n7 n7 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n7 n7 n21))) 1))) (>= (+ n7 (* (- 1) (* n5 n7 n7 n7)) (* n7 n7 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= (* n1 n5 n5) (* n1 n7 n21))) (= (* n1 n5 n5 n5) (* n1 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= (* n1 n7 n21) (* n3 n7 n7))) (= (* n1 n5 n7 n21) (* n3 n5 n7 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= (* n1 n7 n21) (* n3 n5 n7))) (= (* n1 n5 n7 n21) (* n3 n5 n5 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n7 n7))) 1))) (>= (+ n5 (* (- 1) (* n1 n5 n7 n21)) (* n3 n5 n7 n7)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n7))) 1))) (>= (+ n5 (* (- 1) (* n1 n5 n7 n21)) (* n3 n5 n5 n7)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= (* n5 n5 n7 n21) (* n7 n7 n7 n21))) (= (* n5 n5 n5 n7 n21) (* n5 n7 n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n5 n5 n7 n21))) 0))) (not (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n5 n5 n7 n21))) 1))) (>= (+ n5 (* (- 1) (* n1 n5 n5 n7 n21)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21)))) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n7 n21) (* n21 n21)) (= (* n5 n21) (* n21 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n5 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n36) (* n7 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (>= n9 2) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) n12)) 0)) (>= (+ n5 (* (- 1) n7)) 0) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ n5 (* (- 1) n21)) 0) (not (>= (+ n5 (* (- 1) n21)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ n12 (* (- 1) n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= n7 n21) (>= n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n5 (* (- 1) n7)) 0) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ n5 (* (- 1) n21)) 0) (not (>= (+ n5 (* (- 1) n21)) 1)) (not (= n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n5 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (>= n9 2) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7) (* n5 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n9 1) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n5 (* (- 1) n21)) 0) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n21) (* n21 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n7 n21) (* n21 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n21)) 0)) (= n7 n21) (>= (+ n5 (* (- 1) n7)) 0) (not (>= (+ n5 (* (- 1) n7)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n5 n21) (not (>= (+ n5 (* (- 1) n21)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n5 n7 n7) (* n7 n7 n7)) (>= (* n5 n7 n7) (* n7 n7 n7)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n7) (- 1)) (>= (* n5 n5 n5) 2) (= (* n5 n7 n7) (* (- 1) (* n7 n7 n7))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n7) (- 1)) (= (* n5 n7 n7) (* (- 1) (* n7 n7 n7))) (>= (* n7 n7 n7) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n7) (- 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 1) (not (>= (+ n1 (* (- 1) n5)) 1)) (= (* n5 n7 n7) (* (- 1) (* n7 n7 n7))) (not (>= (+ n7 (* (- 1) (* n7 n7 n7))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n5 n7 n7) (* (- 1) (* n7 n7 n7))) (>= (* n5 n7 n7) (* (- 1) (* n7 n7 n7))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n5 (* (- 1) n9)) 1) (>= (+ n5 (* (- 1) n7)) 0) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ n7 (* (- 1) n9)) 0) (not (>= (+ n7 (* (- 1) n9)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ n1 (* (- 1) n3)) 1)) (>= n1 0) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n3 (* (- 1) (* n3 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (= (* n1 n21) (* n3 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n7))) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n1 n5) (* n1 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n7))) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n1 n5) (* n3 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n1 n7) (* n3 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (* n1 n21) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n1 n21) (* n3 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n15 (* (- 1) n18) (* n3 n12)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (* n3 n21) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (not (>= (+ n1 (* (- 1) n3)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (>= n1 1) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n3) (* (- 1) (* n3 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 1) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n1) (* (- 1) (* n1 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n1 n21) (* n3 n21)) (>= n1 0) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n1 (* (- 1) (* n1 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 (- 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n1 n7))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n7) (* n5 n21)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (= (* n1 n21) (* n3 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n1 n21) (* n5 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n1 n5) (* n1 n7)) (not (>= n36 2)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 (- 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (>= n1 2) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 1)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n1 n7) (* (- 1) (* n1 n9))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (* n1 n7) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n7))) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n1 n5) (* n1 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n1 n7) (* n5 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (>= n1 2) (= (* n1 n5) (* n1 n7)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n1 n5) (* (- 1) (* n1 n9))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n1 n5) (* n1 n7)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (* n1 n5) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n1 n21) (* n3 n21)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= n36 2)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= n1 0) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n21 (* (- 1) (* n1 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n21 (* (- 1) (* n3 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (not (>= (+ n7 (* (- 1) n36)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (>= n1 1) (not (>= (+ n1 (* (- 1) n36)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n9 (* (- 1) n36)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n5 n21) (* n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 1)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n5) (* (- 1) (* n5 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (* n5 n21) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (* n5 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 (- 1)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n5 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (* n7 n21) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 (- 1)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n36 2)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= n1 (- 1)) (>= (+ (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n1 n5) (* n1 n7)) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n5))) 0)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (* n5 n5) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n5 n5 n5) (* n5 n7 n21)) (>= (* n5 n5 n5) (* n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n21))) 0) (not (= (* n5 n5 n5) (* n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (= (* n5 n5 n5) (* (- 1) (* n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n7 n7 n7) (* n7 n7 n21)) (>= (* n7 n7 n7) (* n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ (* n7 n7 n7) (* (- 1) (* n7 n7 n21))) 0) (not (= (* n7 n7 n7) (* n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (= (* n7 n7 n7) (* (- 1) (* n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 1)) (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (= (* n1 n5 n5) (* n1 n7 n21)) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 0) (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (= (* n1 n5 n5) (* n1 n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (= (* n1 n5 n5) (* n1 n7 n21)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 1)) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n5))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n5))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= (* n1 n5 n5) (* n1 n7 n21)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 1)) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n7 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (= (* n5 n5 n5) (* n5 n7 n7)) (= (* n1 n5 n5) (* n1 n7 n21)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 1)) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n7 n7))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= (* n1 n5 n5) (* n1 n7 n21)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 1)) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n7 n7 n7))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n7 n21))) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n7 n21))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (= (* n1 n5 n5) (* n1 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n7 n21))) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n5 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (= (* n1 n5 n5) (* n1 n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (= (* n1 n5 n5) (* n1 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n7 n21))) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n7 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n7 n21))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n7 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n7 n21))) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n7 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5))) 1) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n7 n21))) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n7 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 1) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 1) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n7))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 1) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n5 n36) (* (- 1) (* n7 n7 n7))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 1) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n5 n36) (* (- 1) (* n5 n5 n5))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 1) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ (* n7 n36) (* (- 1) (* n5 n5 n5))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 1) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ (* n7 n36) (* (- 1) (* n5 n7 n7))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 1) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n5 n36) (* (- 1) (* n5 n7 n7))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 1) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n5 n36) (* (- 1) (* n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 1) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ (* n7 n36) (* (- 1) (* n5 n5 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 1) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ (* n5 n36) (* (- 1) (* n5 n5 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 1) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ (* n7 n36) (* (- 1) (* n5 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 1) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n36 (* (- 1) (* n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n36) (* n7 n36)) (>= n1 2) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n1 (* (- 1) n5)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n36 (* (- 1) (* n7 n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n36 (* n1 n5 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n1 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n3 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n5) (* n1 n5 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n5 n5 n5)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n5 n5 n5)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n5 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n5 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* (- 1) (* n5 n7 n36)) (* n7 n7 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n5 n5 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n7 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n7 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n7 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n1 n5) (* n1 n7)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n1 n5) (* n1 n7)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n7 n36) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n1 n5 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 1) (not (>= (+ n1 (* (- 1) n5)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 0) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n1 (* (- 1) (* n1 n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n1 n5 n36) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* 7 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n5 n36) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n1 n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n1 n5) (* n1 n7)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n3 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n3 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n1 n5 n5)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n1 n5 n5)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n3 n5 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n1 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n5 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n1 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (= (* n1 n5) (* n1 n7)) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n7 n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n7) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n5 n7) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n5) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n7 n7) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n7 n21) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n5) (* n5 n5 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n5 n5 n36) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n7 (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n7 n36))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n7 n7 n36) (- 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n36) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n7 n7 n36))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 1) (not (>= (+ n1 (* (- 1) n5)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n1 n5 n7 n21) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n36) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n36) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n7 n7) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ n5 (* (- 1) n7)) 0) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n7 (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n5 (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n7 n21) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n21) (* n3 n21)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= n1 2) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n21) (* n3 n21)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= n1 2) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (= (* n1 n5) (* n1 n7)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n5) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n1 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n21) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n21) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n21) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n24 (* (- 1) n36)) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n21) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n21) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n21) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n21) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n21) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n21) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n5 n5 n7 n21) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n7 n21) (* n5 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n7 n21) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 1) (not (>= (+ n1 (* (- 1) n5)) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n5 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (= (* n1 n5) (* n1 n7)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n7 n7) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n7 n7 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n7 n7 n7 n21) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n7 n21) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n7 n7) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 1) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n7 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n21) (* n3 n21)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n7 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n21) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n21) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n36) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n36) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= n36 (- 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n36 (* (- 1) (* n1 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= n1 0) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n21 (* (- 1) n36)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= n1 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= n1 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n7 n36)) (* n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n5 n7 n21))) 0) (not (= (* n5 n5 n36) (* n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n36) (* (- 1) (* n5 n5 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n1 n36) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) n36)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n5 (* (- 1) n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n1 (* (- 1) n36)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n5 n36) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n1 (* (- 1) n3)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n3 (* (- 1) n36)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n9 n36) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n9 (* (- 1) n36)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n21 n36) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n1 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n1 n5 n5)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n7 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n1 n36) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n1 (* n1 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n1 (* (- 1) (* n1 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n5 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n5 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n5 n5 n5)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n7) (* n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n3 n12))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n5 n7 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n21) (* n5 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n7) (* n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n7) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n7) (* n7 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n5 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n7 n21) (* n5 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n5) (* n5 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n7 n7) (* n5 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n5 n7) (* n5 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n7 (* n5 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n5 (* n5 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n5 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n5 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n5 n5 n5) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n7 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n7 n7 n7) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n5 n5 n5))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n7 n21) (* n5 n5 n5)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n7 n7) (* n5 n5 n5)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n5 n7) (* n5 n5 n5)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n5 (* n5 n5 n5)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* 2 (* n7 n21)) (* (- 1) (* n1 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n5 n5))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n5 n5 n5))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n7 n21) (* n7 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n5 n7) (* n7 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n7 n7) (* n7 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n7 (* n7 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= (* n1 n5) (* n1 n7)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n7 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n7) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n21) (* n7 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n5 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n5 n7) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n5 n7) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n3 n5 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n5 n7) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n7 n36) (* (- 1) (* n5 n5 n36))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n36))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n36 (* n5 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n36 (* n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n7) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n7) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n7) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n21 (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n1 n5 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n5 n36) (* (- 1) (* n7 n7 n36))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n7) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n7) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n21 (* (- 1) (* n7 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n5 (* n5 n5 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n7 (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n5 n5 n21) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n21) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n5 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n5 n5 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n5) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n5) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n5 n7) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n5 n7) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n7 n21) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n7 n7) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n7 n7) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n5 n7 n21) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n21) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n5 n7) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n7 n7) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n5) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n7 n21) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n7 n7 n21) (- 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n7 (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n7 n21) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n7 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n7) (* n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n7 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n12) (* n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n12) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n12) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n7) (* n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n7) (* n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n5 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n7 n21) (* (- 1) (* n7 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n3 n5 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n3 n5 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n3 n5 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n5) (* n1 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n7 n21) (* n3 n5 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n7 (* n1 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (= (* n1 n5 n5) (* n1 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n7 n21) (* n3 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (* n1 n7 n21) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n5 n21) (* (- 1) (* n1 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n1 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n7) (* n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n1 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n12) (* n1 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (= (* n3 n7 n7) 0)) (>= (* n3 n7 n7) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n7 (* n3 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (= (* n5 n7) (* n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n1 (* (- 1) (* n3 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n3)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ n3 (* (- 1) (* n1 n5 n5))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n5 n5))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n3 n5 n7) (* n3 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n5) (* n3 n5 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n5) (* n3 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n1 n5 n5))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (= (* n1 n5 n5) 0)) (>= (* n1 n5 n5) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 0) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n3 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (= (* n5 n7) (* n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n5) (* n1 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5))) 1) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n5 n21)) (>= n1 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* 2 (* n1 n7)) (* (- 1) (* n1 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n5 n7) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (= (* n1 n5 n5) (* n1 n5 n7)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 (- 1)) (= (* n5 n7) (* n7 n21)) (= (* n1 n5 n5) (* n1 n7 n21)) (not (>= (+ (* 2 (* n7 n21)) (* (- 1) (* n1 n7 n21))) 1)) (not (>= (* n1 n5 n7) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 0) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (* n5 n5 n5 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (= (* n5 n5 n5 n5 n21) (* n5 n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 0) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n5 n21)) (* n5 n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0) (not (>= (+ (* n5 n36) (* (- 1) (* n7 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 0)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (>= (+ (* n7 n36) (* (- 1) (* n5 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 0)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (>= (+ (* n5 n36) (* (- 1) (* n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 0)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (>= (+ (* n7 n36) (* (- 1) (* n5 n5 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 0)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (>= (+ (* n5 n36) (* (- 1) (* n5 n5 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 0)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n7))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n5 n36) (* (- 1) (* n7 n7 n7))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n5 n36) (* (- 1) (* n5 n5 n5))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n7 n36) (* (- 1) (* n5 n5 n5))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n7 n36) (* (- 1) (* n5 n7 n7))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0) (= (* n5 n5 n5) (* n5 n7 n7)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (>= (+ (* n5 n36) (* (- 1) (* n5 n7 n7))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ (* n1 n36) (* (- 1) (* n7 n36))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 0)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n7 n7) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (= (* n1 n21) (* n3 n21)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n7))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n5 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n24 (* (- 1) n36)) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n21) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n21) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n5 n36) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n7 n21) (* (- 1) (* n7 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) n9)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n36 (* (- 1) (* n7 n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n21 (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n21 (* (- 1) (* n7 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n1 n5) (* n1 n7)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n5 (* n5 n5 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n7 (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n5 n5 n21) (- 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n21) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n5 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n5 n5 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n5 n5 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n21) (* n5 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n7) (* n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n21) (* n7 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n21) (* n7 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n21) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n21) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 1) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n21) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 1) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n21) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 1) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n21) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 1) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n21) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n21) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n21) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n21) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n7) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n7) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n21) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n7 n7 n21) (- 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n7 (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n7 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n7 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n3 n12) (* n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n3 n12) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n3 n12) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n5 n5 n5)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n5 n5 n5)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n5 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n5 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* (- 1) (* n5 n7 n36)) (* n7 n7 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n7 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n7 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n7 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (= (* n1 n5) (* n1 n7)) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (= (* n1 n5) (* n1 n7)) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n7 n36) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n1 n5 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n1 n5 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* 7 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n5 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n36 (* n5 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n36 (* n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n21) (* n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n7 n7 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n7 n7 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n5 n5 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n36) (* n5 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n36) (* n5 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n5 n7 n21) (- 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n5 n5 n7 n21) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n7) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n7) (* n5 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n5 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n7) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n7) (* n5 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n36 (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n5 n7 n7) (* n5 n5 n5 n7 n21)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n7 n7)) (* n5 n5 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n5 n5 n7) (* n5 n5 n5 n7 n21)) (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n5 n7)) (* n5 n5 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n36) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n36) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n7 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n7 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n7 n7 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n7 n7 n7 n21) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n7 n7 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n5 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n7 n21) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (>= (* n5 n5 n5 n21) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n7 n21) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n7 n21) (* n5 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n5 n5 n21) (* n5 n5 n5 n7 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n5 n21)) (* n5 n5 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n36) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n36) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n7 n7 n36))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n36) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n7 n7 n36) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 1) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n7 (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n5 n5 n36) 1) (not (= (* n5 n5 n36) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n7) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n5 n5 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n7) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n7 n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 2) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n7 n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 2) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n5 n5 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n5 n5 n7) (* n5 n5 n7 n21)) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n5 n5 n5 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n7) (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n7) (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n5 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n7 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n7 (* n7 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n7 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n7 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n5 n5 n5)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n5 n5 n5))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n5 n5))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n5 n5))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n5 (* n5 n5 n5)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n5 n5 n5))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n7 n7 n7) (- 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n7 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n5 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n5 n5 n5) (- 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n5 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n5) (* n5 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n5 (* n5 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n7 (* n5 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n5 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n5) (* n5 n7 n7)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 0) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n7 n7) (* n7 n7 n7)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n5) (* n5 n7 n7)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n5 n7 n7) (- 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n7 n36) (* (- 1) (* n5 n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n5 n36) (* (- 1) (* n7 n7 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n1 n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n1 n5 n7 n21) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n1 n5 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n36 (* n1 n5 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 1) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n1 (* (- 1) (* n1 n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n1 n5 n36) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (= (* n1 n5) (* n1 n7)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n5 n36) (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (>= n1 1) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n1 (* (- 1) (* n1 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n5 (* (- 1) n7)) 0) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n7 (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n5 (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n1 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n1 n5) (* n1 n7)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n5 n7 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n1 n5 n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n7 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n36 (* (- 1) (* n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= n36 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n36) (* n7 n36)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n21 n36) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n9 (* (- 1) n36)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n9 n36) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n1 (* (- 1) n3)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n3 (* (- 1) n36)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n5 n36) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n7 n36) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n1 (* (- 1) n36)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n5 (* (- 1) n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (>= n1 2) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) n36)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (>= (+ n1 (* (- 1) n3)) 0) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n3 n36) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n1 n36) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n36) (* (- 1) (* n5 n5 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n5 n7 n21))) 0) (not (= (* n5 n5 n36) (* n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n7 n36)) (* n5 n5 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n21 (* (- 1) n36)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (= (* n5 n7) (* n5 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n36 (* (- 1) (* n1 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* 7 n36) (* (- 1) (* n1 n36))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n36 (* n1 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (* n1 n36) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ n1 (* n1 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 1)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ n1 (* (- 1) (* n1 n36))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n5 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n5 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n9) (* (- 1) (* n1 n36))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* n3 n12)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (= (* n1 n5) (* n1 n7)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ n18 (* (- 1) n33)) 1)) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n15 (* (- 1) n27)) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n7 n21)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n36))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n21)) (* n5 n5 n5 n9 n21)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (not (>= (+ n7 (* (- 1) n9)) 1)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (>= (+ (* n1 n36) (* (- 1) (* n3 n12))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n7 n7 n36) (* (- 1) (* n7 n9 n36))) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (not (>= (+ n7 (* (- 1) n9)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n36)) (* n7 n9 n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* 2 (* n7 n21)) (* (- 1) (* n1 n7 n21))) 1)) (= (* n1 n5 n21) (* n1 n7 n21)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 1) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (* n1 n5 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n9 n36))) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n5 n5))) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n1 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1)) (not (>= (+ (* 2 (* n5 n36)) (* (- 1) (* n1 n5 n36))) 1)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n7 n7 n7 n21))) 0)) (= (* n1 n5 n36) (* n1 n21 n36)) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n9 n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (not (= n5 0)) (>= n36 1)) (>= (* n1 n5 n5 n36) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n3 1) (>= n5 1) (>= n7 1)) (>= (* n3 n5 n5 n5 n7) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n3 1) (not (= n5 0)) (not (= n7 0))) (>= (* n3 n5 n5 n7 n7) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (not (= n5 0))) (>= (* n1 n5 n5 n5 n5) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n3 1) (>= n5 1) (>= n7 1) (>= n36 1)) (>= (* n3 n5 n7 n36) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n3 1) (>= n5 1) (not (= n7 0)) (>= n21 1)) (>= (* n3 n5 n7 n7 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (>= n7 1) (>= n21 1) (>= n36 1)) (>= (* n1 n7 n21 n36) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (not (= n7 0)) (not (= n21 0))) (>= (* n1 n7 n7 n21 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n3 1) (not (= n7 0)) (>= n36 1)) (>= (* n3 n7 n7 n36) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (not (= n36 0))) (>= (* n1 n36 n36) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (>= n36 1)) (>= (* n7 n7 n7 n36) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (not (= n7 0)) (>= n21 1)) (>= (* n7 n7 n7 n7 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n3 1) (>= n5 1) (>= n7 1)) (>= (* n3 n5 n7 n7 n7) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (>= n5 1) (>= n7 1)) (>= (* n1 n5 n5 n5 n7) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (>= n5 1) (not (= n7 0)) (>= n21 1)) (>= (* n1 n5 n7 n7 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (not (= n5 0)) (>= n7 1)) (>= (* n5 n5 n7) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n3 1) (>= n5 1) (>= n7 1) (>= n12 1)) (>= (* n3 n5 n7 n12) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (>= n9 1) (>= n36 1)) (>= (* n1 n9 n36) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n3 1) (>= n21 1) (>= n36 1)) (>= (* n3 n21 n36) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (not (= n5 0)) (>= n9 1) (>= n21 1)) (>= (* n5 n5 n9 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (>= n9 1) (>= n21 1)) (>= (* n5 n9 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n9 1) (>= n36 1)) (>= (* n9 n36) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (not (= n7 0)) (>= n9 1) (>= n21 1)) (>= (* n7 n7 n9 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n7 1) (>= n9 1) (>= n21 1)) (>= (* n7 n9 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (not (= n21 0))) (>= (* n5 n5 n5 n21 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n3 1) (>= n5 1) (>= n21 1)) (>= (* n3 n5 n5 n5 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n3 1) (>= n7 1) (>= n36 1)) (>= (* n3 n7 n36) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (>= n5 1) (>= n21 1)) (>= (* n1 n5 n5 n5 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n1 1) (>= n7 1) (>= n9 1) (>= n21 1)) (>= (* n1 n7 n9 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (>= n9 1) (>= n36 1)) (>= (* n5 n9 n36) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (not (= n5 0)) (>= n7 1) (>= n9 1) (>= n21 1)) (>= (* n5 n5 n7 n9 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n5 1) (>= n7 1) (>= n9 1) (>= n21 1)) (>= (* n5 n7 n9 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (>= n3 1) (not (= n5 0)) (>= n36 1)) (>= (* n3 n5 n5 n36) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n1 (* (- 1) n3)) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (>= n1 2) (not (>= (+ n3 (* (- 1) (* n3 n12)) (* n3 n21)) 1)) (>= (+ (* n3 n21) (* (- 1) (* n5 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7) (* (- 1) (* n5 n21))) 0) (= (* n1 n21) (* n3 n21)) (= (* n1 n5) (* n1 n7)) (not (>= (+ n1 (* (- 1) n3)) 1)) (not (>= (+ n3 (* (- 1) (* n3 n12)) (* n3 n21)) 1)) (>= n1 1) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (= (* n1 n5) (* n1 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7) (* (- 1) (* n5 n21))) 0) (= (* n1 n5) (* n1 n7)) (not (>= (+ n1 (* (- 1) n3)) 1)) (not (>= (+ n3 (* (- 1) (* n3 n12)) (* n3 n21)) 1)) (>= n1 1) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n1 n5) (* (- 1) (* n3 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7) (* (- 1) (* n5 n21))) 0) (= (* n1 n5) (* n1 n7)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n1 n5) (* (- 1) (* n3 n12))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7) (* (- 1) (* n5 n21))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n3 n12))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n1 n12) (* n3 n12)) (>= (+ (* n1 n7) (* (- 1) (* n5 n21))) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n12))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n7) (* n5 n21)) (>= (+ (* n1 n7) (* (- 1) (* n5 n21))) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7) (* (- 1) (* n5 n21))) 0) (= (* n1 n5) (* n1 n7)) (= (* n5 n7) (* n5 n21)) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n7))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (>= n1 2) (not (>= (+ n3 (* (- 1) (* n3 n12)) (* n3 n21)) 1)) (not (>= (+ n1 (* (- 1) n3)) 1)) (>= (+ (* n1 n21) (* (- 1) (* n5 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (>= (* n1 n5 n5 n36) 2) (not (>= (* n1 n5 n5 n36) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (>= (* n3 n5 n5 n5 n7) 2) (not (>= (* n3 n5 n5 n5 n7) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (>= (* n3 n5 n5 n7 n7) 2) (not (>= (* n3 n5 n5 n7 n7) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (>= (* n1 n5 n5 n5 n5) 2) (not (>= (* n1 n5 n5 n5 n5) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (>= (* n3 n5 n7 n36) 2) (not (>= (* n3 n5 n7 n36) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (>= (* n3 n5 n7 n7 n21) 2) (not (>= (* n3 n5 n7 n7 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (>= (* n1 n7 n21 n36) 2) (not (>= (* n1 n7 n21 n36) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (>= (* n1 n7 n7 n21 n21) 2) (not (>= (* n1 n7 n7 n21 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (>= (* n3 n7 n7 n36) 2) (not (>= (* n3 n7 n7 n36) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (>= (* n1 n36 n36) 2) (not (>= (* n1 n36 n36) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (>= (* n7 n7 n7 n36) 2) (not (>= (* n7 n7 n7 n36) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (>= (* n7 n7 n7 n7 n21) 2) (not (>= (* n7 n7 n7 n7 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (>= (* n3 n5 n7 n7 n7) 2) (not (>= (* n3 n5 n7 n7 n7) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (>= (* n1 n5 n5 n5 n7) 2) (not (>= (* n1 n5 n5 n5 n7) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (>= (* n1 n5 n7 n7 n21) 2) (not (>= (* n1 n5 n7 n7 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (>= (* n5 n5 n7) 2) (not (>= (* n5 n5 n7) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (>= n12 2) (not (>= n12 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (>= (* n3 n5 n7 n12) 2) (not (>= (* n3 n5 n7 n12) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (>= (* n1 n9 n36) 2) (not (>= (* n1 n9 n36) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (>= (* n3 n21 n36) 2) (not (>= (* n3 n21 n36) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (>= (* n5 n5 n9 n21) 2) (not (>= (* n5 n5 n9 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (>= (* n5 n9 n21) 2) (not (>= (* n5 n9 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n9 0))) (ite (>= (* n9 n36) 0) (>= (* n9 n36) 2) (not (>= (* n9 n36) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (>= (* n7 n7 n9 n21) 2) (not (>= (* n7 n7 n9 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (>= (* n7 n9 n21) 2) (not (>= (* n7 n9 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (>= (* n5 n5 n5 n21 n21) 2) (not (>= (* n5 n5 n5 n21 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (>= (* n3 n5 n5 n5 n21) 2) (not (>= (* n3 n5 n5 n5 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (>= (* n3 n7 n36) 2) (not (>= (* n3 n7 n36) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (>= (* n1 n5 n5 n5 n21) 2) (not (>= (* n1 n5 n5 n5 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (>= (* n1 n7 n9 n21) 2) (not (>= (* n1 n7 n9 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (>= (* n5 n9 n36) 2) (not (>= (* n5 n9 n36) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (>= (* n5 n5 n7 n9 n21) 2) (not (>= (* n5 n5 n7 n9 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (>= (* n5 n7 n9 n21) 2) (not (>= (* n5 n7 n9 n21) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (>= (* n3 n5 n5 n36) 2) (not (>= (* n3 n5 n5 n36) (- 1)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n3 n5 n5 n7 n7) (- 1))) (>= (* n3 n5 n5 n7 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 2) (= (* n5 n36) (* n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= n12 2))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n3 n5 n7 n7 n7) 0)) (>= (* n3 n5 n7 n7 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n3 n5 n7 n12) (- 1))) (>= (* n3 n5 n7 n12) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n3 n5 n5 n5 n7) 0)) (>= (* n3 n5 n5 n5 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n12 (- 1))) (>= n12 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n5 n7) (- 1))) (>= (* n5 n5 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n1 n5 n5 n5 n7) (- 1))) (>= (* n1 n5 n5 n5 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n3 n5 n7 n7 n7) (- 1))) (>= (* n3 n5 n7 n7 n7) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n1 n5 n5 n5 n5) (- 1))) (>= (* n1 n5 n5 n5 n5) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n3 n5 n5 n5 n7) (- 1))) (>= (* n3 n5 n5 n5 n7) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ n1 (* n1 n5 n5 n36)) 1)) (ite (>= n1 0) (not (>= (+ n1 (* n1 n5 n5 n36)) 0)) (>= (+ n1 (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ n5 (* n1 n5 n5 n36)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n1 n5 n5 n36)) 0)) (>= (+ n5 (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= n36 0) (not (>= (+ n36 (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ n36 (* n1 n5 n5 n36)) 1)) (ite (>= n36 0) (not (>= (+ n36 (* n1 n5 n5 n36)) 0)) (>= (+ n36 (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ n3 (* n3 n5 n5 n5 n7)) 1)) (ite (>= n3 0) (not (>= (+ n3 (* n3 n5 n5 n5 n7)) 0)) (>= (+ n3 (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ n5 (* n3 n5 n5 n5 n7)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n3 n5 n5 n5 n7)) 0)) (>= (+ n5 (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ n7 (* n3 n5 n5 n5 n7)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n3 n5 n5 n5 n7)) 0)) (>= (+ n7 (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ n3 (* n3 n5 n5 n7 n7)) 1)) (ite (>= n3 0) (not (>= (+ n3 (* n3 n5 n5 n7 n7)) 0)) (>= (+ n3 (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ n5 (* n3 n5 n5 n7 n7)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n3 n5 n5 n7 n7)) 0)) (>= (+ n5 (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ n7 (* n3 n5 n5 n7 n7)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n3 n5 n5 n7 n7)) 0)) (>= (+ n7 (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ n1 (* n1 n5 n5 n5 n5)) 1)) (ite (>= n1 0) (not (>= (+ n1 (* n1 n5 n5 n5 n5)) 0)) (>= (+ n1 (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ n5 (* n1 n5 n5 n5 n5)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n1 n5 n5 n5 n5)) 0)) (>= (+ n5 (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ n3 (* n3 n5 n7 n36)) 1)) (ite (>= n3 0) (not (>= (+ n3 (* n3 n5 n7 n36)) 0)) (>= (+ n3 (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ n5 (* n3 n5 n7 n36)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n3 n5 n7 n36)) 0)) (>= (+ n5 (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ n7 (* n3 n5 n7 n36)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n3 n5 n7 n36)) 0)) (>= (+ n7 (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= n36 0) (not (>= (+ n36 (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ n36 (* n3 n5 n7 n36)) 1)) (ite (>= n36 0) (not (>= (+ n36 (* n3 n5 n7 n36)) 0)) (>= (+ n36 (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ n3 (* n3 n5 n7 n7 n21)) 1)) (ite (>= n3 0) (not (>= (+ n3 (* n3 n5 n7 n7 n21)) 0)) (>= (+ n3 (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ n5 (* n3 n5 n7 n7 n21)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n3 n5 n7 n7 n21)) 0)) (>= (+ n5 (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ n7 (* n3 n5 n7 n7 n21)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n3 n5 n7 n7 n21)) 0)) (>= (+ n7 (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ n21 (* n3 n5 n7 n7 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n3 n5 n7 n7 n21)) 0)) (>= (+ n21 (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ n1 (* n1 n7 n21 n36)) 1)) (ite (>= n1 0) (not (>= (+ n1 (* n1 n7 n21 n36)) 0)) (>= (+ n1 (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ n7 (* n1 n7 n21 n36)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n1 n7 n21 n36)) 0)) (>= (+ n7 (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ n21 (* n1 n7 n21 n36)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n1 n7 n21 n36)) 0)) (>= (+ n21 (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= n36 0) (not (>= (+ n36 (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ n36 (* n1 n7 n21 n36)) 1)) (ite (>= n36 0) (not (>= (+ n36 (* n1 n7 n21 n36)) 0)) (>= (+ n36 (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ n1 (* n1 n7 n7 n21 n21)) 1)) (ite (>= n1 0) (not (>= (+ n1 (* n1 n7 n7 n21 n21)) 0)) (>= (+ n1 (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ n7 (* n1 n7 n7 n21 n21)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n1 n7 n7 n21 n21)) 0)) (>= (+ n7 (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ n21 (* n1 n7 n7 n21 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n1 n7 n7 n21 n21)) 0)) (>= (+ n21 (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ n3 (* n3 n7 n7 n36)) 1)) (ite (>= n3 0) (not (>= (+ n3 (* n3 n7 n7 n36)) 0)) (>= (+ n3 (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ n7 (* n3 n7 n7 n36)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n3 n7 n7 n36)) 0)) (>= (+ n7 (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= n36 0) (not (>= (+ n36 (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ n36 (* n3 n7 n7 n36)) 1)) (ite (>= n36 0) (not (>= (+ n36 (* n3 n7 n7 n36)) 0)) (>= (+ n36 (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) (* n1 n36 n36))) 0)) (>= (+ n1 (* n1 n36 n36)) 1)) (ite (>= n1 0) (not (>= (+ n1 (* n1 n36 n36)) 0)) (>= (+ n1 (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= n36 0) (not (>= (+ n36 (* (- 1) (* n1 n36 n36))) 0)) (>= (+ n36 (* n1 n36 n36)) 1)) (ite (>= n36 0) (not (>= (+ n36 (* n1 n36 n36)) 0)) (>= (+ n36 (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ n7 (* n7 n7 n7 n36)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n7 n7 n7 n36)) 0)) (>= (+ n7 (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= n36 0) (not (>= (+ n36 (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ n36 (* n7 n7 n7 n36)) 1)) (ite (>= n36 0) (not (>= (+ n36 (* n7 n7 n7 n36)) 0)) (>= (+ n36 (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ n7 (* n7 n7 n7 n7 n21)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n7 n7 n7 n7 n21)) 0)) (>= (+ n7 (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ n21 (* n7 n7 n7 n7 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n7 n7 n7 n7 n21)) 0)) (>= (+ n21 (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ n3 (* n3 n5 n7 n7 n7)) 1)) (ite (>= n3 0) (not (>= (+ n3 (* n3 n5 n7 n7 n7)) 0)) (>= (+ n3 (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ n5 (* n3 n5 n7 n7 n7)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n3 n5 n7 n7 n7)) 0)) (>= (+ n5 (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ n7 (* n3 n5 n7 n7 n7)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n3 n5 n7 n7 n7)) 0)) (>= (+ n7 (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ n1 (* n1 n5 n5 n5 n7)) 1)) (ite (>= n1 0) (not (>= (+ n1 (* n1 n5 n5 n5 n7)) 0)) (>= (+ n1 (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ n5 (* n1 n5 n5 n5 n7)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n1 n5 n5 n5 n7)) 0)) (>= (+ n5 (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ n7 (* n1 n5 n5 n5 n7)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n1 n5 n5 n5 n7)) 0)) (>= (+ n7 (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ n1 (* n1 n5 n7 n7 n21)) 1)) (ite (>= n1 0) (not (>= (+ n1 (* n1 n5 n7 n7 n21)) 0)) (>= (+ n1 (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ n5 (* n1 n5 n7 n7 n21)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n1 n5 n7 n7 n21)) 0)) (>= (+ n5 (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ n7 (* n1 n5 n7 n7 n21)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n1 n5 n7 n7 n21)) 0)) (>= (+ n7 (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ n21 (* n1 n5 n7 n7 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n1 n5 n7 n7 n21)) 0)) (>= (+ n21 (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n5 n5 n7))) 0)) (>= (+ n5 (* n5 n5 n7)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n5 n5 n7)) 0)) (>= (+ n5 (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n5 n5 n7))) 0)) (>= (+ n7 (* n5 n5 n7)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n5 n5 n7)) 0)) (>= (+ n7 (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (>= n12 2) (not (>= n12 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ n3 (* n3 n5 n7 n12)) 1)) (ite (>= n3 0) (not (>= (+ n3 (* n3 n5 n7 n12)) 0)) (>= (+ n3 (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (>= n12 2) (not (>= n12 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ n5 (* n3 n5 n7 n12)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n3 n5 n7 n12)) 0)) (>= (+ n5 (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (>= n12 2) (not (>= n12 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ n7 (* n3 n5 n7 n12)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n3 n5 n7 n12)) 0)) (>= (+ n7 (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ n12 (* n3 n5 n7 n12)) 1)) (ite (>= n12 0) (not (>= (+ n12 (* n3 n5 n7 n12)) 0)) (>= (+ n12 (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) (* n1 n9 n36))) 0)) (>= (+ n1 (* n1 n9 n36)) 1)) (ite (>= n1 0) (not (>= (+ n1 (* n1 n9 n36)) 0)) (>= (+ n1 (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) (* n1 n9 n36))) 0)) (>= (+ n9 (* n1 n9 n36)) 1)) (ite (>= n9 0) (not (>= (+ n9 (* n1 n9 n36)) 0)) (>= (+ n9 (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= n36 0) (not (>= (+ n36 (* (- 1) (* n1 n9 n36))) 0)) (>= (+ n36 (* n1 n9 n36)) 1)) (ite (>= n36 0) (not (>= (+ n36 (* n1 n9 n36)) 0)) (>= (+ n36 (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) (* n3 n21 n36))) 0)) (>= (+ n3 (* n3 n21 n36)) 1)) (ite (>= n3 0) (not (>= (+ n3 (* n3 n21 n36)) 0)) (>= (+ n3 (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n3 n21 n36))) 0)) (>= (+ n21 (* n3 n21 n36)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n3 n21 n36)) 0)) (>= (+ n21 (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= n36 0) (not (>= (+ n36 (* (- 1) (* n3 n21 n36))) 0)) (>= (+ n36 (* n3 n21 n36)) 1)) (ite (>= n36 0) (not (>= (+ n36 (* n3 n21 n36)) 0)) (>= (+ n36 (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ n5 (* n5 n5 n9 n21)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n5 n5 n9 n21)) 0)) (>= (+ n5 (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ n9 (* n5 n5 n9 n21)) 1)) (ite (>= n9 0) (not (>= (+ n9 (* n5 n5 n9 n21)) 0)) (>= (+ n9 (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ n21 (* n5 n5 n9 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n5 n5 n9 n21)) 0)) (>= (+ n21 (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n5 n9 n21))) 0)) (>= (+ n5 (* n5 n9 n21)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n5 n9 n21)) 0)) (>= (+ n5 (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) (* n5 n9 n21))) 0)) (>= (+ n9 (* n5 n9 n21)) 1)) (ite (>= n9 0) (not (>= (+ n9 (* n5 n9 n21)) 0)) (>= (+ n9 (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n5 n9 n21))) 0)) (>= (+ n21 (* n5 n9 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n5 n9 n21)) 0)) (>= (+ n21 (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (not (= n36 0)) (not (= n9 0))) (ite (>= (* n9 n36) 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) (* n9 n36))) 0)) (>= (+ n9 (* n9 n36)) 1)) (ite (>= n9 0) (not (>= (+ n9 (* n9 n36)) 0)) (>= (+ n9 (* (- 1) (* n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n9 0))) (ite (>= (* n9 n36) 0) (ite (>= n36 0) (not (>= (+ n36 (* (- 1) (* n9 n36))) 0)) (>= (+ n36 (* n9 n36)) 1)) (ite (>= n36 0) (not (>= (+ n36 (* n9 n36)) 0)) (>= (+ n36 (* (- 1) (* n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ n7 (* n7 n7 n9 n21)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n7 n7 n9 n21)) 0)) (>= (+ n7 (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ n9 (* n7 n7 n9 n21)) 1)) (ite (>= n9 0) (not (>= (+ n9 (* n7 n7 n9 n21)) 0)) (>= (+ n9 (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ n21 (* n7 n7 n9 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n7 n7 n9 n21)) 0)) (>= (+ n21 (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n7 n9 n21))) 0)) (>= (+ n7 (* n7 n9 n21)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n7 n9 n21)) 0)) (>= (+ n7 (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) (* n7 n9 n21))) 0)) (>= (+ n9 (* n7 n9 n21)) 1)) (ite (>= n9 0) (not (>= (+ n9 (* n7 n9 n21)) 0)) (>= (+ n9 (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n7 n9 n21))) 0)) (>= (+ n21 (* n7 n9 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n7 n9 n21)) 0)) (>= (+ n21 (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ n5 (* n5 n5 n5 n21 n21)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n5 n5 n5 n21 n21)) 0)) (>= (+ n5 (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ n21 (* n5 n5 n5 n21 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n5 n5 n5 n21 n21)) 0)) (>= (+ n21 (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ n3 (* n3 n5 n5 n5 n21)) 1)) (ite (>= n3 0) (not (>= (+ n3 (* n3 n5 n5 n5 n21)) 0)) (>= (+ n3 (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ n5 (* n3 n5 n5 n5 n21)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n3 n5 n5 n5 n21)) 0)) (>= (+ n5 (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ n21 (* n3 n5 n5 n5 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n3 n5 n5 n5 n21)) 0)) (>= (+ n21 (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) (* n3 n7 n36))) 0)) (>= (+ n3 (* n3 n7 n36)) 1)) (ite (>= n3 0) (not (>= (+ n3 (* n3 n7 n36)) 0)) (>= (+ n3 (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n3 n7 n36))) 0)) (>= (+ n7 (* n3 n7 n36)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n3 n7 n36)) 0)) (>= (+ n7 (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= n36 0) (not (>= (+ n36 (* (- 1) (* n3 n7 n36))) 0)) (>= (+ n36 (* n3 n7 n36)) 1)) (ite (>= n36 0) (not (>= (+ n36 (* n3 n7 n36)) 0)) (>= (+ n36 (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ n1 (* n1 n5 n5 n5 n21)) 1)) (ite (>= n1 0) (not (>= (+ n1 (* n1 n5 n5 n5 n21)) 0)) (>= (+ n1 (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ n5 (* n1 n5 n5 n5 n21)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n1 n5 n5 n5 n21)) 0)) (>= (+ n5 (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ n21 (* n1 n5 n5 n5 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n1 n5 n5 n5 n21)) 0)) (>= (+ n21 (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ n1 (* n1 n7 n9 n21)) 1)) (ite (>= n1 0) (not (>= (+ n1 (* n1 n7 n9 n21)) 0)) (>= (+ n1 (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ n7 (* n1 n7 n9 n21)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n1 n7 n9 n21)) 0)) (>= (+ n7 (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ n9 (* n1 n7 n9 n21)) 1)) (ite (>= n9 0) (not (>= (+ n9 (* n1 n7 n9 n21)) 0)) (>= (+ n9 (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ n21 (* n1 n7 n9 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n1 n7 n9 n21)) 0)) (>= (+ n21 (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n5 n9 n36))) 0)) (>= (+ n5 (* n5 n9 n36)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n5 n9 n36)) 0)) (>= (+ n5 (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) (* n5 n9 n36))) 0)) (>= (+ n9 (* n5 n9 n36)) 1)) (ite (>= n9 0) (not (>= (+ n9 (* n5 n9 n36)) 0)) (>= (+ n9 (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= n36 0) (not (>= (+ n36 (* (- 1) (* n5 n9 n36))) 0)) (>= (+ n36 (* n5 n9 n36)) 1)) (ite (>= n36 0) (not (>= (+ n36 (* n5 n9 n36)) 0)) (>= (+ n36 (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ n5 (* n5 n5 n7 n9 n21)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n5 n5 n7 n9 n21)) 0)) (>= (+ n5 (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ n7 (* n5 n5 n7 n9 n21)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n5 n5 n7 n9 n21)) 0)) (>= (+ n7 (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ n9 (* n5 n5 n7 n9 n21)) 1)) (ite (>= n9 0) (not (>= (+ n9 (* n5 n5 n7 n9 n21)) 0)) (>= (+ n9 (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ n21 (* n5 n5 n7 n9 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n5 n5 n7 n9 n21)) 0)) (>= (+ n21 (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ n5 (* n5 n7 n9 n21)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n5 n7 n9 n21)) 0)) (>= (+ n5 (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ n7 (* n5 n7 n9 n21)) 1)) (ite (>= n7 0) (not (>= (+ n7 (* n5 n7 n9 n21)) 0)) (>= (+ n7 (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ n9 (* n5 n7 n9 n21)) 1)) (ite (>= n9 0) (not (>= (+ n9 (* n5 n7 n9 n21)) 0)) (>= (+ n9 (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ n21 (* n5 n7 n9 n21)) 1)) (ite (>= n21 0) (not (>= (+ n21 (* n5 n7 n9 n21)) 0)) (>= (+ n21 (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ n3 (* n3 n5 n5 n36)) 1)) (ite (>= n3 0) (not (>= (+ n3 (* n3 n5 n5 n36)) 0)) (>= (+ n3 (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ n5 (* n3 n5 n5 n36)) 1)) (ite (>= n5 0) (not (>= (+ n5 (* n3 n5 n5 n36)) 0)) (>= (+ n5 (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= n36 0) (not (>= (+ n36 (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ n36 (* n3 n5 n5 n36)) 1)) (ite (>= n36 0) (not (>= (+ n36 (* n3 n5 n5 n36)) 0)) (>= (+ n36 (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= n1 2) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n21 (* (- 1) (* n1 n7 n9 n21))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 1)) (not (>= (+ n1 (* n1 n7 n9 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= n1 2) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n21 (* (- 1) (* n1 n5 n5 n5 n21))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 1)) (not (>= (+ n1 (* n1 n5 n5 n5 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) n9)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n3)) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n21 (* (- 1) (* n3 n5 n5 n5 n21))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 1)) (not (>= (+ n3 (* n3 n5 n5 n5 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n3 n12) (* (- 1) (* n5 n21))) 1)) (not (>= (+ n36 (* (- 1) (* n3 n21 n36))) 1)) (>= (+ n12 (* (- 1) n21)) 1) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n7) (* n5 n21)) (= (* n5 n7) (* n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n5)) 1)) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n21 (* n3 n21 n36)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) n9)) 1)) (>= n1 2) (not (>= (+ n1 (* (- 1) n3)) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 0) (not (>= (+ n12 (* (- 1) (* n3 n5 n7 n12))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 1)) (not (>= (+ n3 (* n3 n5 n7 n12)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= n1 2) (not (>= (+ n7 (* (- 1) n9)) 1)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n21 (* (- 1) (* n1 n7 n7 n21 n21))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 1)) (not (>= (+ n1 (* n1 n7 n7 n21 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (not (>= n27 12)) (not (not (>= n27 12))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n7 n9) (>= (+ n18 (* (- 1) (* n3 n12))) 0) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (= (* n1 n21) (* n3 n21)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (>= n1 2) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= n27 12))))
(check-sat)
(pop 1)
(set-info :notes "intvar_15 is is an integer variable created by the dio solver")
(declare-fun intvar_15 () Int)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (not (>= (* n3 n21) 12)) (not (not (>= (* n3 n21) 12))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n7 n9) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (+ n18 (* (- 1) n33)) 1)) (= (* n1 n21) (* n3 n21)) (not (>= (+ (* 2 n9) (* (- 1) (* n1 n9))) 1)) (not (>= (+ n15 (* (- 1) n27)) 1)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (>= n1 2) (not (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7) (* n7 n21)) (= (* n5 n7) (* n5 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 1) (not (>= (+ (* 2 n12) (* (- 1) (* n3 n12))) 1)) (not (>= (* n3 n21) 12))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n1 n7) (* n1 n9)) (= (* n1 n7) (* (- 1) (* n1 n9)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n1 n5) (* n1 n9)) (= (* n1 n5) (* (- 1) (* n1 n9)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n9) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n1 n9) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n1 n9) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n9) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n9) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n9) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n1 n9) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n9) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n9) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n1 n9) (* n5 n5 n7)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n5 n5 n7)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n9) (* n3 n7)) (= (* n1 n9) (* (- 1) (* n3 n7)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n9) (* n3 n5)) (= (* n1 n9) (* (- 1) (* n3 n5)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n9) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n1 n9) (* n5 n9 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n5 n9 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n9) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n1 n9) (* n7 n9 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n7 n9 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n9) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n9) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n9) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n1 n9) (* n1 n7 n9 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n1 n7 n9 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n9) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n9) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n9) 0) (not (>= (+ (* n1 n9) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n9) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n12) 0) (not (>= (+ (* n3 n12) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n3 n12) (* n3 n5 n7 n12)) 1)) (ite (>= (* n3 n12) 0) (not (>= (+ (* n3 n12) (* n3 n5 n7 n12)) 0)) (>= (+ (* n3 n12) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 0)) (>= (+ (* n5 n7 n7) (* n5 n7 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n5 n7 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n21))) 0)) (>= (+ (* n5 n5 n5) (* n5 n7 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n5 n7 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21) 0) (ite (>= (* n7 n7 n7) 0) (>= (+ (* n5 n7 n21) (* (- 1) (* n7 n7 n7))) 1) (>= (+ (* n5 n7 n21) (* n7 n7 n7)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n5 n7 n21) (* n7 n7 n7)) 0)) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n5 n7 n21) (* n1 n5 n5 n36)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n1 n5 n5 n36)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n5 n7 n21) (* n3 n5 n7 n36)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n3 n5 n7 n36)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n5 n7 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n5 n7 n21) (* n3 n7 n7 n36)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n3 n7 n7 n36)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n7 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n5 n7 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n5 n7 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n5 n7 n21) (* n5 n9 n21)) (= (* n5 n7 n21) (* (- 1) (* n5 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n5 n7 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n5 n7 n21) (* n7 n9 n21)) (= (* n5 n7 n21) (* (- 1) (* n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n7 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n7 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n5 n7 n21) (* n1 n7 n9 n21)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n1 n7 n9 n21)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n5 n7 n21) (* n5 n9 n36)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n5 n9 n36)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n5 n7 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n5 n7 n21) (* n3 n5 n5 n36)) 1)) (ite (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n3 n5 n5 n36)) 0)) (>= (+ (* n5 n7 n21) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n5 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n5 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n5 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n5 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n5 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n5 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n5 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n5 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n5 n36) (* n1 n36 n36)) 1)) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* n1 n36 n36)) 0)) (>= (+ (* n5 n36) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* (- 1) (* n1 n9 n36))) 0)) (>= (+ (* n5 n36) (* n1 n9 n36)) 1)) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* n1 n9 n36)) 0)) (>= (+ (* n5 n36) (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n5 n36) (* n3 n21 n36)) 1)) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* n3 n21 n36)) 0)) (>= (+ (* n5 n36) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n5 n36) (* n9 n36)) (= (* n5 n36) (* (- 1) (* n9 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0))) (ite (>= (* n21 n36) 0) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* (- 1) (* n21 n36))) 0)) (>= (+ (* n5 n36) (* n21 n36)) 1)) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* n21 n36)) 0)) (>= (+ (* n5 n36) (* (- 1) (* n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n5 n36) (* n3 n7 n36)) 1)) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* n3 n7 n36)) 0)) (>= (+ (* n5 n36) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n5 n36) (* n5 n9 n36)) 1)) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* n5 n9 n36)) 0)) (>= (+ (* n5 n36) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n5 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n5 n36) 0) (not (>= (+ (* n5 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n5 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n7 n21))) 0)) (>= (+ (* n5 n9) (* n7 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n7 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n7 n21))) 0)) (>= (+ (* n5 n5) (* n7 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n7 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n7 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n7 n21))) 0)) (>= (+ (* n5 n7) (* n7 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n7 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n7 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n7 n21))) 0)) (>= (+ (* n7 n7) (* n7 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n7 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n7 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n7 n21) (* n5 n9 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n5 n9 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n7 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n7 n21) (* n7 n9 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n7 n9 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0))) (ite (>= (* n21 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n21 n21))) 0)) (>= (+ (* n7 n21) (* n21 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n21 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n7 n21) (* n1 n7 n9 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n1 n7 n9 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n7 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n7 n21) 0) (not (>= (+ (* n7 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n7 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n5 n7 n7 n7))) 1) (>= (+ (* n5 n5 n7 n21) (* n5 n7 n7 n7)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n21) (* n5 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n5 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7))) 1) (>= (+ (* n5 n5 n7 n21) (* n7 n7 n7 n7)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n21) (* n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n5 n5 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n5 n5 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n5 n7 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n5 n5 n7 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n5 n5 n7 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n5 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n5 n5 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n5 n5 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n21) (* n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21 n21) 0) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n5 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n21) (* n5 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* n5 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n7 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n5 n7 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n7 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n5 n5 n7 n21) (* n5 n5 n9 n21)) (= (* n5 n5 n7 n21) (* (- 1) (* n5 n5 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9)))) (or (= (* n5 n5 n7 n21) (* n7 n7 n9 n21)) (= (* n5 n5 n7 n21) (* (- 1) (* n7 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n21) (* n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n7 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n7 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n5 n5 n7 n21) (* n5 n7 n9 n21)) (= (* n5 n5 n7 n21) (* (- 1) (* n5 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n5 n5 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n5 n5 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n5 n5 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n5 n5 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n5 n5 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n5 n5 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n5 n5 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n5 n5 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n5 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n5 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9)))) (or (= (* n5 n5 n36) (* n7 n9 n36)) (= (* n5 n5 n36) (* (- 1) (* n7 n9 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n21 n36) 0) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n7 n21 n36))) 0)) (>= (+ (* n5 n5 n36) (* n7 n21 n36)) 1)) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* n7 n21 n36)) 0)) (>= (+ (* n5 n5 n36) (* (- 1) (* n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n36) 0) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n5 n9 n36))) 0)) (>= (+ (* n5 n5 n36) (* n5 n5 n9 n36)) 1)) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* n5 n5 n9 n36)) 0)) (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n5 n5 n36) (* n5 n9 n36)) (= (* n5 n5 n36) (* (- 1) (* n5 n9 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n5 n5 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n5 n5 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n21 n36) 0) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n21 n36))) 0)) (>= (+ (* n5 n5 n36) (* n5 n21 n36)) 1)) (ite (>= (* n5 n5 n36) 0) (not (>= (+ (* n5 n5 n36) (* n5 n21 n36)) 0)) (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0)) (>= (+ (* n5 n9) (* n5 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n5 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n5 n21))) 0)) (>= (+ (* n5 n5) (* n5 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n5 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n5 n21))) 0)) (>= (+ (* n5 n7) (* n5 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n5 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n5 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n21) 0) (ite (>= (* n7 n7) 0) (>= (+ (* n5 n21) (* (- 1) (* n7 n7))) 1) (>= (+ (* n5 n21) (* n7 n7)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n5 n21) (* n7 n7)) 0)) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n5 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n5 n21) (* n5 n9 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n5 n9 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n5 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n5 n21) (* n7 n9 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n7 n9 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0))) (ite (>= (* n21 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n21 n21))) 0)) (>= (+ (* n5 n21) (* n21 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n21 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n5 n21) (* n1 n7 n9 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n1 n7 n9 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n5 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n5 n21) 0) (not (>= (+ (* n5 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n5 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7) (* n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5) (* n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n7 n7 n21))) 0)) (>= (+ (* n7 n7 n7) (* n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n7 n7 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n7 n7 n21) (* n1 n5 n5 n36)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n1 n5 n5 n36)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n7 n7 n21) (* n3 n5 n7 n36)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n3 n5 n7 n36)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n7 n7 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n7 n7 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n7 n7 n21) (* n3 n7 n7 n36)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n3 n7 n7 n36)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n7 n7 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n7 n7 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n7 n7 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9)))) (or (= (* n5 n9 n21) (* n7 n7 n21)) (= (* n5 n9 n21) (* (- 1) (* n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n7 n7 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n7 n7 n21) (* n7 n9 n21)) (= (* n7 n7 n21) (* (- 1) (* n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n7 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n7 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n7 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n7 n7 n21) (* n1 n7 n9 n21)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n1 n7 n9 n21)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n7 n7 n21) 0) (>= (+ (* n5 n9 n36) (* (- 1) (* n7 n7 n21))) 1) (>= (+ (* n5 n9 n36) (* n7 n7 n21)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n5 n9 n36) (* n7 n7 n21)) 0)) (not (>= (+ (* n5 n9 n36) (* (- 1) (* n7 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n7 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n7 n7 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n7 n7 n21) (* n3 n5 n5 n36)) 1)) (ite (>= (* n7 n7 n21) 0) (not (>= (+ (* n7 n7 n21) (* n3 n5 n5 n36)) 0)) (>= (+ (* n7 n7 n21) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n7 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n7 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n7 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n7 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n7 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n7 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n7 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n7 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n7 n36) (* n1 n36 n36)) 1)) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* n1 n36 n36)) 0)) (>= (+ (* n7 n36) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n7 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* (- 1) (* n1 n9 n36))) 0)) (>= (+ (* n7 n36) (* n1 n9 n36)) 1)) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* n1 n9 n36)) 0)) (>= (+ (* n7 n36) (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n7 n36) (* n3 n21 n36)) 1)) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* n3 n21 n36)) 0)) (>= (+ (* n7 n36) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n7 n36) (* n9 n36)) (= (* n7 n36) (* (- 1) (* n9 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0))) (ite (>= (* n21 n36) 0) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* (- 1) (* n21 n36))) 0)) (>= (+ (* n7 n36) (* n21 n36)) 1)) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* n21 n36)) 0)) (>= (+ (* n7 n36) (* (- 1) (* n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n7 n36) (* n3 n7 n36)) 1)) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* n3 n7 n36)) 0)) (>= (+ (* n7 n36) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n7 n36) (* n5 n9 n36)) 1)) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* n5 n9 n36)) 0)) (>= (+ (* n7 n36) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n7 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n7 n36) 0) (not (>= (+ (* n7 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n7 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n5 n7 n21) 0) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* n5 n5 n5 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* n5 n5 n5 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n5 n7 n21) 0) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n5 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n5 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n5 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n21) (* n7 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* n7 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n21) (* n5 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* n5 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n5 n5 n7 n21) (* n7 n7 n7 n7 n21)) (= (* n5 n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n5 n7 n21) 0) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n5 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n5 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n5 n7 n21) 0) (ite (>= (* n5 n7 n7 n7 n7) 0) (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 1) (>= (+ (* n5 n5 n5 n7 n21) (* n5 n7 n7 n7 n7)) 1)) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* n5 n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n5 n7 n21) 0) (ite (>= (* n5 n5 n7 n7 n7) 0) (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n7 n7 n7))) 1) (>= (+ (* n5 n5 n5 n7 n21) (* n5 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* n5 n5 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n5 n5 n5 n7 n21) (* n5 n5 n5 n9 n21)) (= (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n5 n5 n5 n7 n21) (* n5 n5 n7 n9 n21)) (= (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n21) (* n5 n5 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n5 n7 n21) (* n5 n5 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n21) (* (- 1) (* n5 n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21 n36) 0) (ite (>= (* n5 n5 n5 n36) 0) (not (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n7 n7 n21 n36))) 0)) (>= (+ (* n5 n5 n5 n36) (* n7 n7 n21 n36)) 1)) (ite (>= (* n5 n5 n5 n36) 0) (not (>= (+ (* n5 n5 n5 n36) (* n7 n7 n21 n36)) 0)) (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n7 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21 n36) 0) (ite (>= (* n5 n5 n5 n36) 0) (not (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n5 n7 n21 n36))) 0)) (>= (+ (* n5 n5 n5 n36) (* n5 n7 n21 n36)) 1)) (ite (>= (* n5 n5 n5 n36) 0) (not (>= (+ (* n5 n5 n5 n36) (* n5 n7 n21 n36)) 0)) (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n5 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n5 n5 n36) (* n7 n7 n7 n36)) (= (* n5 n5 n5 n36) (* (- 1) (* n7 n7 n7 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n5 n5 n5 n36) (* n5 n5 n9 n36)) (= (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n9 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21 n36) 0) (ite (>= (* n5 n5 n5 n36) 0) (not (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n21 n36))) 0)) (>= (+ (* n5 n5 n5 n36) (* n5 n5 n21 n36)) 1)) (ite (>= (* n5 n5 n5 n36) 0) (not (>= (+ (* n5 n5 n5 n36) (* n5 n5 n21 n36)) 0)) (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21) 0) (ite (>= (* n5 n7 n7) 0) (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n7 n7))) 1) (>= (+ (* n5 n5 n21) (* n5 n7 n7)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n5 n21) (* n5 n7 n7)) 0)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 0)) (>= (+ (* n5 n5 n5) (* n5 n5 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n5 n5 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21) 0) (ite (>= (* n7 n7 n7) 0) (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n7))) 1) (>= (+ (* n5 n5 n21) (* n7 n7 n7)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n5 n5 n21) (* n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n5 n5 n21) (* n1 n5 n5 n36)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n1 n5 n5 n36)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n5 n5 n21) (* n3 n5 n7 n36)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n3 n5 n7 n36)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n5 n5 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n5 n5 n21) (* n3 n7 n7 n36)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n3 n7 n7 n36)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n5 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n5 n5 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n5 n5 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n5 n5 n21) (* n5 n9 n21)) (= (* n5 n5 n21) (* (- 1) (* n5 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9)))) (or (= (* n5 n5 n21) (* n7 n9 n21)) (= (* n5 n5 n21) (* (- 1) (* n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n21) (* n1 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n1 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n5 n5 n21) (* n5 n9 n36)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n5 n9 n36)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n5 n5 n21) (* n3 n5 n5 n36)) 1)) (ite (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n3 n5 n5 n36)) 0)) (>= (+ (* n5 n5 n21) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0)) (>= (+ (* n1 n7) (* n3 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n3 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n3 n21))) 0)) (>= (+ (* n1 n5) (* n3 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n3 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n3 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n3 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n3 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n3 n21))) 0)) (>= (+ (* n3 n7) (* n3 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n3 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n3 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n3 n21))) 0)) (>= (+ (* n3 n5) (* n3 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n3 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n3 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n3 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n3 n21) (* n5 n9 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n5 n9 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n3 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n3 n21) (* n7 n9 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n7 n9 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n3 n21) (* n1 n7 n9 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n1 n7 n9 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n3 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n3 n21) 0) (not (>= (+ (* n3 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n3 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21) 0) (ite (>= (* n3 n5 n7) 0) (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n7))) 1) (>= (+ (* n1 n7 n21) (* n3 n5 n7)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n1 n7 n21) (* n3 n5 n7)) 0)) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n3 n5 n7) (* n1 n5 n5 n36)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n1 n5 n5 n36)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n5 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n3 n5 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n3 n5 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n3 n5 n7) (* n3 n5 n7 n36)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n5 n7 n36)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n3 n5 n7) (* n1 n7 n21 n36)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n1 n7 n21 n36)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n3 n5 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n7) (* n3 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n3 n5 n7) 0) (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n5 n7))) 1) (>= (+ (* n1 n36 n36) (* n3 n5 n7)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n1 n36 n36) (* n3 n5 n7)) 0)) (not (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n5 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n3 n5 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n5 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n3 n5 n7) (* n5 n5 n7)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n5 n5 n7)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (>= n12 2) (not (>= n12 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n3 n5 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n7 n21))) 0)) (>= (+ (* n3 n5 n7) (* n3 n7 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n7 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21) 0) (ite (>= (* n3 n5 n7) 0) (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n7))) 1) (>= (+ (* n1 n5 n21) (* n3 n5 n7)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n1 n5 n21) (* n3 n5 n7)) 0)) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n3 n5 n7) 0) (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n5 n7))) 1) (>= (+ (* n1 n9 n36) (* n3 n5 n7)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n1 n9 n36) (* n3 n5 n7)) 0)) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n5 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n21))) 0)) (>= (+ (* n3 n5 n7) (* n3 n5 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n5 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n3 n5 n7) (* n3 n21 n36)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n21 n36)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n21 n21))) 0)) (>= (+ (* n3 n5 n7) (* n3 n21 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n21 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n3 n5 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n3 n5 n7) (* n5 n9 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n5 n9 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n3 n5 n7) (* n7 n9 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n7 n9 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n5 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21 n21) 0) (ite (>= (* n3 n5 n7) 0) (>= (+ (* n1 n21 n21) (* (- 1) (* n3 n5 n7))) 1) (>= (+ (* n1 n21 n21) (* n3 n5 n7)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n1 n21 n21) (* n3 n5 n7)) 0)) (not (>= (+ (* n1 n21 n21) (* (- 1) (* n3 n5 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n3 n5 n7) (* n3 n7 n36)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n7 n36)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n7) (* n1 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n1 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n3 n5 n7) (* n5 n9 n36)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n5 n9 n36)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n3 n5 n7) (* n3 n5 n5 n36)) 1)) (ite (>= (* n3 n5 n7) 0) (not (>= (+ (* n3 n5 n7) (* n3 n5 n5 n36)) 0)) (>= (+ (* n3 n5 n7) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n7 n21))) 0)) (>= (+ (* n1 n5 n5) (* n1 n7 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n1 n7 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n5) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n5 n5) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n1 n5 n5) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n1 n5 n5) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n5 n5) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n5 n5) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n5) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n5) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n5 n5) (* n1 n36 n36)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n1 n36 n36)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n5) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n1 n5 n5) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n5 n5) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n1 n5 n5) (* n5 n5 n7)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n5 n5 n7)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n12)) 0)) (>= (+ n5 n12) 1)) (ite (>= n5 0) (not (>= (+ n5 n12) 0)) (>= (+ n5 (* (- 1) n12)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n5 n5) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n21))) 0)) (>= (+ (* n1 n5 n5) (* n3 n7 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n7 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n21))) 0)) (>= (+ (* n1 n5 n5) (* n1 n5 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n1 n5 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n9 n36))) 0)) (>= (+ (* n1 n5 n5) (* n1 n9 n36)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n1 n9 n36)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n21))) 0)) (>= (+ (* n1 n5 n5) (* n3 n5 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n5 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n1 n5 n5) (* n3 n21 n36)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n21 n36)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n21 n21))) 0)) (>= (+ (* n1 n5 n5) (* n3 n21 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n21 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n5 n5) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n1 n5 n5) (* n5 n9 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n5 n9 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5) (* n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n5) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n21 n21))) 0)) (>= (+ (* n1 n5 n5) (* n1 n21 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n1 n21 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n5) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n1 n5 n5) (* n3 n7 n36)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n7 n36)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n5) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5) (* n1 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n1 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n1 n5 n5) (* n5 n9 n36)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n5 n9 n36)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n36)) 0)) (>= (+ n1 n36) 1)) (ite (>= n1 0) (not (>= (+ n1 n36) 0)) (>= (+ n1 (* (- 1) n36)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n5) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n5) 0) (not (>= (+ (* n1 n5 n5) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21) 0) (ite (>= (* n3 n7 n7) 0) (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n7 n7))) 1) (>= (+ (* n1 n7 n21) (* n3 n7 n7)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n1 n7 n21) (* n3 n7 n7)) 0)) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n7 n21) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n7 n21) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n7 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n7 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n7 n21) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n7 n21) (* n1 n36 n36)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n1 n36 n36)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n7 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n7 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n7 n21))) 0)) (>= (+ (* n1 n5 n7) (* n1 n7 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n1 n7 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n9 n36))) 0)) (>= (+ (* n1 n7 n21) (* n1 n9 n36)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n1 n9 n36)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n1 n7 n21) (* n3 n21 n36)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n3 n21 n36)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n21 n21))) 0)) (>= (+ (* n1 n7 n21) (* n3 n21 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n3 n21 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n7 n21))) 0)) (>= (+ (* n1 n7 n7) (* n1 n7 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n1 n7 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n7 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n1 n7 n21) (* n5 n9 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n5 n9 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n1 n7 n21) (* n7 n9 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n7 n9 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n21 n21))) 0)) (>= (+ (* n1 n7 n21) (* n1 n21 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n1 n21 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21) 0) (ite (>= (* n3 n5 n5) 0) (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n5))) 1) (>= (+ (* n1 n7 n21) (* n3 n5 n5)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n1 n7 n21) (* n3 n5 n5)) 0)) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n5))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n7 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n1 n7 n21) (* n3 n7 n36)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n3 n7 n36)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n7 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n21) (* n1 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n1 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n1 n7 n21) (* n5 n9 n36)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n5 n9 n36)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n7 n21) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n7 n21) 0) (not (>= (+ (* n1 n7 n21) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n7 n21) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n36) (* n1 n36 n36)) 1)) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* n1 n36 n36)) 0)) (>= (+ (* n1 n36) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n1 n9 n36))) 0)) (>= (+ (* n1 n36) (* n1 n9 n36)) 1)) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* n1 n9 n36)) 0)) (>= (+ (* n1 n36) (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n1 n36) (* n3 n21 n36)) 1)) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* n3 n21 n36)) 0)) (>= (+ (* n1 n36) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n9 0))) (ite (>= (* n9 n36) 0) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n9 n36))) 0)) (>= (+ (* n1 n36) (* n9 n36)) 1)) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* n9 n36)) 0)) (>= (+ (* n1 n36) (* (- 1) (* n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n1 n36) (* n3 n7 n36)) 1)) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* n3 n7 n36)) 0)) (>= (+ (* n1 n36) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n1 n36) (* n5 n9 n36)) 1)) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* n5 n9 n36)) 0)) (>= (+ (* n1 n36) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n36) 0) (not (>= (+ (* n1 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n21))) 0)) (>= (+ (* n1 n7) (* n1 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n1 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n1 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n1 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n1 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n1 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n1 n7) (* n5 n5 n7)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n5 n5 n7)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n12)) 0)) (>= (+ n1 n12) 1)) (ite (>= n1 0) (not (>= (+ n1 n12) 0)) (>= (+ n1 (* (- 1) n12)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n1 n7) (* n5 n9 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n5 n9 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n1 n7) (* n7 n9 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n7 n9 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n1 n7) (* n1 n7 n9 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n1 n7 n9 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n7) 0) (not (>= (+ (* n1 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n3 n7 n7) (* n1 n5 n5 n36)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n1 n5 n5 n36)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n7 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n3 n7 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n3 n7 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n3 n7 n7) (* n3 n5 n7 n36)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n3 n5 n7 n36)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n7 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n3 n7 n7) (* n1 n7 n21 n36)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n1 n7 n21 n36)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n3 n7 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n3 n7 n7) (* n3 n7 n7 n36)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n3 n7 n7 n36)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n3 n7 n7) 0) (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n7 n7))) 1) (>= (+ (* n1 n36 n36) (* n3 n7 n7)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n1 n36 n36) (* n3 n7 n7)) 0)) (not (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n36)) 0)) (>= (+ n3 n36) 1)) (ite (>= n3 0) (not (>= (+ n3 n36) 0)) (>= (+ n3 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n7 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n3 n7 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n7 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n7 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n3 n7 n7) (* n5 n5 n7)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n5 n5 n7)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n12)) 0)) (>= (+ n7 n12) 1)) (ite (>= n7 0) (not (>= (+ n7 n12) 0)) (>= (+ n7 (* (- 1) n12)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n3 n7 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n7 n21))) 0)) (>= (+ (* n3 n7 n7) (* n3 n7 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n3 n7 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21) 0) (ite (>= (* n3 n7 n7) 0) (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n7 n7))) 1) (>= (+ (* n1 n5 n21) (* n3 n7 n7)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n1 n5 n21) (* n3 n7 n7)) 0)) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n3 n7 n7) 0) (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n7 n7))) 1) (>= (+ (* n1 n9 n36) (* n3 n7 n7)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n1 n9 n36) (* n3 n7 n7)) 0)) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n21) 0) (ite (>= (* n3 n7 n7) 0) (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n7 n7))) 1) (>= (+ (* n3 n5 n21) (* n3 n7 n7)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n5 n21) (* n3 n7 n7)) 0)) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n3 n7 n7) (* n3 n21 n36)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n3 n21 n36)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n21 n21))) 0)) (>= (+ (* n3 n7 n7) (* n3 n21 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n3 n21 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n3 n7 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n3 n7 n7) (* n5 n9 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n5 n9 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n3 n7 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n3 n7 n7) (* n7 n9 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n7 n9 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n7 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21 n21) 0) (ite (>= (* n3 n7 n7) 0) (>= (+ (* n1 n21 n21) (* (- 1) (* n3 n7 n7))) 1) (>= (+ (* n1 n21 n21) (* n3 n7 n7)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n1 n21 n21) (* n3 n7 n7)) 0)) (not (>= (+ (* n1 n21 n21) (* (- 1) (* n3 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n7 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n3 n7 n7) (* n3 n7 n36)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n3 n7 n36)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n7 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n3 n7 n7) (* n1 n7 n9 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n1 n7 n9 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n3 n7 n7) (* n5 n9 n36)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n5 n9 n36)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n3 n7 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n3 n7 n7) (* n3 n5 n5 n36)) 1)) (ite (>= (* n3 n7 n7) 0) (not (>= (+ (* n3 n7 n7) (* n3 n5 n5 n36)) 0)) (>= (+ (* n3 n7 n7) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n5 n7))) 1) (>= (+ (* n1 n5 n7 n21) (* n3 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n7 n21) (* n3 n5 n5 n7)) 0)) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n5 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n7 n7))) 1) (>= (+ (* n1 n5 n7 n21) (* n3 n5 n7 n7)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n21) (* n3 n5 n7 n7)) 0)) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n5 n7 n21) 0) (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n1 n5 n7 n21))) 1) (>= (+ (* n1 n5 n5 n36) (* n1 n5 n7 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n36) (* n1 n5 n7 n21)) 0)) (not (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n1 n5 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n7 n7 n7))) 1) (>= (+ (* n1 n5 n7 n21) (* n1 n7 n7 n7)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n21) (* n1 n7 n7 n7)) 0)) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n1 n5 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n1 n5 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n5 n7 n21) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n7 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n5 n7 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n7 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n7 n21) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n7 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n7 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n5 n7 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n1 n5 n7 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n1 n5 n7 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n1 n5 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n1 n5 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n5 n7 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n7 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21 n21) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n7 n21) (* n1 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n1 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n7 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n7 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n1 n5 n7 n21) (* n1 n7 n9 n21)) (= (* n1 n5 n7 n21) (* (- 1) (* n1 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n7 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n7 n21) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n21) 0) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n7 n21) (* n1 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n21) (* n1 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n7 n21) (* (- 1) (* n1 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21 n36) 0) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* (- 1) (* n1 n21 n36))) 0)) (>= (+ (* n1 n5 n36) (* n1 n21 n36)) 1)) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* n1 n21 n36)) 0)) (>= (+ (* n1 n5 n36) (* (- 1) (* n1 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n5 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n5 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n5 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n5 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n5 n36) (* n1 n36 n36)) 1)) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* n1 n36 n36)) 0)) (>= (+ (* n1 n5 n36) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n1 n5 n36) (* n1 n9 n36)) (= (* n1 n5 n36) (* (- 1) (* n1 n9 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n1 n5 n36) (* n3 n21 n36)) 1)) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* n3 n21 n36)) 0)) (>= (+ (* n1 n5 n36) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n36) 0) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* (- 1) (* n7 n9 n36))) 0)) (>= (+ (* n1 n5 n36) (* n7 n9 n36)) 1)) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* n7 n9 n36)) 0)) (>= (+ (* n1 n5 n36) (* (- 1) (* n7 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n5 n36) (* n3 n7 n36)) (= (* n1 n5 n36) (* (- 1) (* n3 n7 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n1 n5 n36) (* n5 n9 n36)) 1)) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* n5 n9 n36)) 0)) (>= (+ (* n1 n5 n36) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n36) 0) (not (>= (+ (* n1 n5 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n21))) 0)) (>= (+ (* n1 n5) (* n1 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n1 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n1 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21) 0) (ite (>= (* n3 n7) 0) (>= (+ (* n1 n21) (* (- 1) (* n3 n7))) 1) (>= (+ (* n1 n21) (* n3 n7)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n1 n21) (* n3 n7)) 0)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21) 0) (ite (>= (* n3 n5) 0) (>= (+ (* n1 n21) (* (- 1) (* n3 n5))) 1) (>= (+ (* n1 n21) (* n3 n5)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n1 n21) (* n3 n5)) 0)) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n5))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n1 n21) (* n5 n9 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n5 n9 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n1 n21) (* n7 n9 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n7 n9 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n1 n21) (* n1 n7 n9 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n1 n7 n9 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n21) 0) (not (>= (+ (* n1 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n5) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n1 n5) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n1 n5) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n1 n5) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n5) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n1 n5) (* n5 n5 n7)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n5 n5 n7)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n12)) 0)) (>= (+ n1 n12) 1)) (ite (>= n1 0) (not (>= (+ n1 n12) 0)) (>= (+ n1 (* (- 1) n12)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n5) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n5) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n1 n5) (* n5 n9 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n5 n9 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n5) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n1 n5) (* n7 n9 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n7 n9 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n1 n5) (* n1 n7 n9 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n1 n7 n9 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5) 0) (not (>= (+ (* n1 n5) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n5 n7 n7) (* n1 n5 n5 n36)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n1 n5 n5 n36)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n7 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n5 n7 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n5 n7 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n5 n7 n7) (* n3 n5 n7 n36)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n3 n5 n7 n36)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n5 n7 n7) (* n1 n7 n21 n36)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n1 n7 n21 n36)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n5 n7 n7) (* n3 n7 n7 n36)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n3 n7 n7 n36)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n7 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n5 n7 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n7 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n5 n7) (* n5 n7 n7)) (= (* n5 n5 n7) (* (- 1) (* n5 n7 n7)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n12)) 0)) (>= (+ n7 n12) 1)) (ite (>= n7 0) (not (>= (+ n7 n12) 0)) (>= (+ n7 (* (- 1) n12)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n5 n7 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n5 n7 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n5 n7 n7) (* n5 n9 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n5 n9 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n5 n7 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n5 n7 n7) (* n7 n9 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n7 n9 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n7 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n7 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n7 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n5 n7 n7) (* n1 n7 n9 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n1 n7 n9 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n5 n7 n7) (* n5 n9 n36)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n5 n9 n36)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n5 n7 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n5 n7 n7) (* n3 n5 n5 n36)) 1)) (ite (>= (* n5 n7 n7) 0) (not (>= (+ (* n5 n7 n7) (* n3 n5 n5 n36)) 0)) (>= (+ (* n5 n7 n7) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n5 n5 n5) (* n1 n5 n5 n36)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n1 n5 n5 n36)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n5 n5) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n5 n5 n5) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n5 n5 n5) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n5 n5 n5) (* n3 n5 n7 n36)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n3 n5 n7 n36)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n5 n5 n5) (* n1 n7 n21 n36)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n1 n7 n21 n36)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n5 n5 n5) (* n3 n7 n7 n36)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n3 n7 n7 n36)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n5 n5) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n5 n5 n5) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n5 n5) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n5 n5) (* n5 n5 n7)) (= (* n5 n5 n5) (* (- 1) (* n5 n5 n7)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n12)) 0)) (>= (+ n5 n12) 1)) (ite (>= n5 0) (not (>= (+ n5 n12) 0)) (>= (+ n5 (* (- 1) n12)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n5 n5 n5) (* n3 n5 n7 n12)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n3 n5 n7 n12)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n5 n5 n5) (* n5 n5 n9 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n5 n5 n9 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n5 n5 n5) (* n5 n9 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n5 n9 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5) (* n7 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n7 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5) (* n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n5) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n5) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n5) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5) (* n1 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n1 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n5 n5 n5) (* n5 n9 n36)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n5 n9 n36)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5) (* n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n5 n5 n5) (* n3 n5 n5 n36)) 1)) (ite (>= (* n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5) (* n3 n5 n5 n36)) 0)) (>= (+ (* n5 n5 n5) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n7 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n7 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n7 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n7 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n7 n7) (* n7 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n7 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21 n21) 0) (ite (>= (* n7 n7 n7 n21) 0) (>= (+ (* n5 n5 n21 n21) (* (- 1) (* n7 n7 n7 n21))) 1) (>= (+ (* n5 n5 n21 n21) (* n7 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n5 n5 n21 n21) (* n7 n7 n7 n21)) 0)) (not (>= (+ (* n5 n5 n21 n21) (* (- 1) (* n7 n7 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21 n21) 0) (ite (>= (* n7 n7 n7 n21) 0) (>= (+ (* n5 n7 n21 n21) (* (- 1) (* n7 n7 n7 n21))) 1) (>= (+ (* n5 n7 n21 n21) (* n7 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n21 n21) (* n7 n7 n7 n21)) 0)) (not (>= (+ (* n5 n7 n21 n21) (* (- 1) (* n7 n7 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n7 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n7 n7 n7 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n7 n7 n7 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n7 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9)))) (or (= (* n5 n5 n9 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n9 n21) (* (- 1) (* n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n7 n7 n7 n21) (* n7 n7 n9 n21)) (= (* n7 n7 n7 n21) (* (- 1) (* n7 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n7 n7 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21 n21) 0) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n7 n7 n21 n21))) 0)) (>= (+ (* n7 n7 n7 n21) (* n7 n7 n21 n21)) 1)) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* n7 n7 n21 n21)) 0)) (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n7 n7 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n7 n7 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n7 n7 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n7 n7 n7 n21) 0) (not (>= (+ (* n7 n7 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n7 n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9)))) (or (= (* n5 n7 n9 n21) (* n7 n7 n7 n21)) (= (* n5 n7 n9 n21) (* (- 1) (* n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n7 n7 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n7 n7 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n7 n7 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n7 n7 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n7 n7 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n7 n7 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n7 n7 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n7 n7 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n7 n7 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n7 n7 n36) (* n7 n9 n36)) (= (* n7 n7 n36) (* (- 1) (* n7 n9 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n21 n36) 0) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* (- 1) (* n7 n21 n36))) 0)) (>= (+ (* n7 n7 n36) (* n7 n21 n36)) 1)) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* n7 n21 n36)) 0)) (>= (+ (* n7 n7 n36) (* (- 1) (* n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n36) 0) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* (- 1) (* n5 n5 n9 n36))) 0)) (>= (+ (* n7 n7 n36) (* n5 n5 n9 n36)) 1)) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* n5 n5 n9 n36)) 0)) (>= (+ (* n7 n7 n36) (* (- 1) (* n5 n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9)))) (or (= (* n5 n9 n36) (* n7 n7 n36)) (= (* n5 n9 n36) (* (- 1) (* n7 n7 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n7 n7 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n7 n7 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n7 n7 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n21 n36) 0) (ite (>= (* n7 n7 n36) 0) (>= (+ (* n5 n21 n36) (* (- 1) (* n7 n7 n36))) 1) (>= (+ (* n5 n21 n36) (* n7 n7 n36)) 1)) (ite (>= (* n7 n7 n36) 0) (not (>= (+ (* n5 n21 n36) (* n7 n7 n36)) 0)) (not (>= (+ (* n5 n21 n36) (* (- 1) (* n7 n7 n36))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n7 n7 n7) (* n1 n5 n5 n36)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n1 n5 n5 n36)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n7 n7 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n7 n7 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n7 n7 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n7 n7 n7) (* n3 n5 n7 n36)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n3 n5 n7 n36)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n7 n7 n7) (* n1 n7 n21 n36)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n1 n7 n21 n36)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n7 n7 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n7 n7 n7) (* n3 n7 n7 n36)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n3 n7 n7 n36)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n7 n7 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n7 n7 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n7 n7 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n5 n7) (* n7 n7 n7)) (= (* n5 n5 n7) (* (- 1) (* n7 n7 n7)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n12)) 0)) (>= (+ n7 n12) 1)) (ite (>= n7 0) (not (>= (+ n7 n12) 0)) (>= (+ n7 (* (- 1) n12)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n7 n7 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n7 n7 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n7 n7 n7) 0) (>= (+ (* n5 n9 n21) (* (- 1) (* n7 n7 n7))) 1) (>= (+ (* n5 n9 n21) (* n7 n7 n7)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n5 n9 n21) (* n7 n7 n7)) 0)) (not (>= (+ (* n5 n9 n21) (* (- 1) (* n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n7 n7 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n7 n7 n7) (* n7 n9 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n7 n9 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n7 n7 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n7 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n7 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n7 n7 n7) (* n1 n7 n9 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n1 n7 n9 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n7 n7 n7) 0) (>= (+ (* n5 n9 n36) (* (- 1) (* n7 n7 n7))) 1) (>= (+ (* n5 n9 n36) (* n7 n7 n7)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n5 n9 n36) (* n7 n7 n7)) 0)) (not (>= (+ (* n5 n9 n36) (* (- 1) (* n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n7 n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n7 n7 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n7 n7 n7) (* n3 n5 n5 n36)) 1)) (ite (>= (* n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7) (* n3 n5 n5 n36)) 0)) (>= (+ (* n7 n7 n7) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n9) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n5 n5) (* n5 n9)) (= (* n5 n5) (* (- 1) (* n5 n9)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n5 n9) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n5 n9) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n9) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n9) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n9) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n5 n7) (* n5 n9)) (= (* n5 n7) (* (- 1) (* n5 n9)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n5 n9) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n9) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n9) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n5 n9) (* n5 n5 n7)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n5 n5 n7)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n12)) 0)) (>= (+ n9 n12) 1)) (ite (>= n9 0) (not (>= (+ n9 n12) 0)) (>= (+ n9 (* (- 1) n12)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n5 n9) (* n3 n5 n7 n12)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n3 n5 n7 n12)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9)))) (or (= (* n5 n9) (* n7 n7)) (= (* n5 n9) (* (- 1) (* n7 n7)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n5 n9) (* n5 n5 n9 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n5 n5 n9 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n5 n9) (* n5 n9 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n5 n9 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n5 n9) (* n7 n7 n9 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n7 n7 n9 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n5 n9) (* n7 n9 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n7 n9 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (not (= n21 0))) (ite (>= (* n21 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n21 n21))) 0)) (>= (+ (* n5 n9) (* n21 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n21 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n9) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n12)) 0)) (>= (+ n5 n12) 1)) (ite (>= n5 0) (not (>= (+ n5 n12) 0)) (>= (+ n5 (* (- 1) n12)) 1))) (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (not (= n12 0)) (not (= n21 0))) (ite (>= (* n12 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n12 n21))) 0)) (>= (+ (* n5 n9) (* n12 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n12 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n12 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n9) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n9) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n5 n9) (* n1 n7 n9 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n1 n7 n9 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n9) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n5 n9) (* n5 n7 n9 n21)) 1)) (ite (>= (* n5 n9) 0) (not (>= (+ (* n5 n9) (* n5 n7 n9 n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n5 n5 n7 n21) (* n3 n5 n7 n7 n21)) (= (* n1 n5 n5 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n7 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n1 n5 n5 n7 n21) (* n1 n5 n7 n7 n21)) (= (* n1 n5 n5 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n12) 0) (ite (>= (* n1 n5 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n3 n5 n5 n7 n12))) 0)) (>= (+ (* n1 n5 n5 n7 n21) (* n3 n5 n5 n7 n12)) 1)) (ite (>= (* n1 n5 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n7 n21) (* n3 n5 n5 n7 n12)) 0)) (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n3 n5 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n7 n21) 0) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n1 n5 n5 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* n1 n5 n5 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* n1 n5 n5 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n1 n5 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n5 n9 n21) 0) (ite (>= (* n1 n5 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n21) (* n5 n5 n5 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n7 n21) (* n5 n5 n5 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n5 n5 n7 n21) (* n3 n5 n5 n5 n21)) (= (* n1 n5 n5 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n1 n5 n5 n5 n21) (* n1 n5 n5 n7 n21)) (= (* n1 n5 n5 n5 n21) (* (- 1) (* n1 n5 n5 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n3 n5 n5 n7) 0) (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n3 n5 n5 n7))) 1) (>= (+ (* n1 n5 n5 n36) (* n3 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n36) (* n3 n5 n5 n7)) 0)) (not (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n3 n5 n5 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n5 n7))) 1) (>= (+ (* n1 n7 n7 n21) (* n3 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n1 n7 n7 n21) (* n3 n5 n5 n7)) 0)) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n5 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n5 n5 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n3 n5 n5 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n3 n5 n5 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n3 n5 n5 n7) (* n3 n5 n7 n36)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n3 n5 n7 n36)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n5 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n5 n5 n7) 0) (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n3 n5 n5 n7))) 1) (>= (+ (* n1 n7 n21 n36) (* n3 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n1 n7 n21 n36) (* n3 n5 n5 n7)) 0)) (not (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n3 n5 n5 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n3 n5 n5 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n5 n7) (* n3 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n3 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n5 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n5 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n3 n5 n5 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n5 n5 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n5 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n12)) 0)) (>= (+ n5 n12) 1)) (ite (>= n5 0) (not (>= (+ n5 n12) 0)) (>= (+ n5 (* (- 1) n12)) 1))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n3 n5 n5 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n3 n5 n5 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n5 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n5 n5 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n3 n5 n5 n7))) 1) (>= (+ (* n1 n5 n21 n21) (* n3 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n21 n21) (* n3 n5 n5 n7)) 0)) (not (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n3 n5 n5 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n5 n7))) 1) (>= (+ (* n1 n5 n5 n21) (* n3 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n21) (* n3 n5 n5 n7)) 0)) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n5 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5 n5 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5 n5 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n3 n5 n5 n7))) 1) (>= (+ (* n1 n7 n9 n21) (* n3 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n1 n7 n9 n21) (* n3 n5 n5 n7)) 0)) (not (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n3 n5 n5 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n5 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n5 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n3 n5 n5 n7) (* n3 n5 n5 n36)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n3 n5 n5 n36)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (>= (+ (* n1 n7 n21 n21) (* (- 1) (* n3 n5 n5 n7))) 1) (>= (+ (* n1 n7 n21 n21) (* n3 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n1 n7 n21 n21) (* n3 n5 n5 n7)) 0)) (not (>= (+ (* n1 n7 n21 n21) (* (- 1) (* n3 n5 n5 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n21) 0) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n7 n21))) 0)) (>= (+ (* n3 n5 n5 n7) (* n3 n5 n7 n21)) 1)) (ite (>= (* n3 n5 n5 n7) 0) (not (>= (+ (* n3 n5 n5 n7) (* n3 n5 n7 n21)) 0)) (>= (+ (* n3 n5 n5 n7) (* (- 1) (* n3 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n3 n5 n7 n7) 0) (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n3 n5 n7 n7))) 1) (>= (+ (* n1 n5 n5 n36) (* n3 n5 n7 n7)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n36) (* n3 n5 n7 n7)) 0)) (not (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n3 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n7 n7))) 1) (>= (+ (* n1 n7 n7 n21) (* n3 n5 n7 n7)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n21) (* n3 n5 n7 n7)) 0)) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n5 n7 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n3 n5 n7 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n3 n5 n7 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n3 n5 n7 n7) (* n3 n5 n7 n36)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n3 n5 n7 n36)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n7 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n5 n7 n7) 0) (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n3 n5 n7 n7))) 1) (>= (+ (* n1 n7 n21 n36) (* n3 n5 n7 n7)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n1 n7 n21 n36) (* n3 n5 n7 n7)) 0)) (not (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n3 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n3 n5 n7 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n7 n7) (* n3 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n3 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n7 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n3 n5 n7 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n5 n7 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n7 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n12)) 0)) (>= (+ n7 n12) 1)) (ite (>= n7 0) (not (>= (+ n7 n12) 0)) (>= (+ n7 (* (- 1) n12)) 1))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n3 n5 n7 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n3 n5 n7 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n7 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n5 n7 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n3 n5 n7 n7))) 1) (>= (+ (* n1 n5 n21 n21) (* n3 n5 n7 n7)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n21 n21) (* n3 n5 n7 n7)) 0)) (not (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n3 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n7 n7))) 1) (>= (+ (* n1 n5 n5 n21) (* n3 n5 n7 n7)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n21) (* n3 n5 n7 n7)) 0)) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5 n7 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5 n7 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n3 n5 n7 n7))) 1) (>= (+ (* n1 n7 n9 n21) (* n3 n5 n7 n7)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n1 n7 n9 n21) (* n3 n5 n7 n7)) 0)) (not (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n3 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n7 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n3 n5 n7 n7) 0) (>= (+ (* n3 n5 n5 n36) (* (- 1) (* n3 n5 n7 n7))) 1) (>= (+ (* n3 n5 n5 n36) (* n3 n5 n7 n7)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n5 n36) (* n3 n5 n7 n7)) 0)) (not (>= (+ (* n3 n5 n5 n36) (* (- 1) (* n3 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (>= (+ (* n1 n7 n21 n21) (* (- 1) (* n3 n5 n7 n7))) 1) (>= (+ (* n1 n7 n21 n21) (* n3 n5 n7 n7)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n1 n7 n21 n21) (* n3 n5 n7 n7)) 0)) (not (>= (+ (* n1 n7 n21 n21) (* (- 1) (* n3 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n21) 0) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n7 n21))) 0)) (>= (+ (* n3 n5 n7 n7) (* n3 n5 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n7) 0) (not (>= (+ (* n3 n5 n7 n7) (* n3 n5 n7 n21)) 0)) (>= (+ (* n3 n5 n7 n7) (* (- 1) (* n3 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n5 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n5 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n7 n7 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n5 n7 n7 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n5 n7 n7 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n7 n7 n7))) 1) (>= (+ (* n5 n5 n5 n21) (* n5 n7 n7 n7)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n21) (* n5 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (>= (+ (* n5 n5 n21 n21) (* (- 1) (* n5 n7 n7 n7))) 1) (>= (+ (* n5 n5 n21 n21) (* n5 n7 n7 n7)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n21 n21) (* n5 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n21 n21) (* (- 1) (* n5 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n5 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n5 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n5 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n7 n7 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n5 n7 n7 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n7 n7 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n5 n7 n7 n7))) 1) (>= (+ (* n5 n5 n9 n21) (* n5 n7 n7 n7)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n9 n21) (* n5 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n5 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n7 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n7 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n7 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n5 n7 n7 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n5 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n5 n7 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7))) 1) (>= (+ (* n5 n7 n7 n21) (* n7 n7 n7 n7)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n21) (* n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n7 n7 n7 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n7 n7 n7 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n7 n7 n7 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n7 n7 n7 n7))) 1) (>= (+ (* n5 n5 n5 n21) (* n7 n7 n7 n7)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n21) (* n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (>= (+ (* n5 n5 n21 n21) (* (- 1) (* n7 n7 n7 n7))) 1) (>= (+ (* n5 n5 n21 n21) (* n7 n7 n7 n7)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n21 n21) (* n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n21 n21) (* (- 1) (* n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (>= (+ (* n5 n7 n21 n21) (* (- 1) (* n7 n7 n7 n7))) 1) (>= (+ (* n5 n7 n21 n21) (* n7 n7 n7 n7)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n21 n21) (* n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n7 n21 n21) (* (- 1) (* n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n7 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n7 n7 n7 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n7 n7 n7 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n7 n7 n7 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n7 n7 n7 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n7 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n7 n7 n7 n7))) 1) (>= (+ (* n5 n5 n9 n21) (* n7 n7 n7 n7)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n9 n21) (* n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n7 n7 n7 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n7 n7 n7 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n7 n7 n21 n21))) 0)) (>= (+ (* n7 n7 n7 n7) (* n7 n7 n21 n21)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n7 n7 n21 n21)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n7 n7 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n7 n7 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n7 n7 n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n7 n7 n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n7 n7 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n7 n7 n7 n7) 0) (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n7 n7 n7 n7))) 1) (>= (+ (* n5 n7 n9 n21) (* n7 n7 n7 n7)) 1)) (ite (>= (* n7 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n9 n21) (* n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n5 n5 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n5 n5 n5 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n5 n5 n5 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n5 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n5 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n5 n5 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n5 n5 n5 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n5 n5 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n7 n12) (* n1 n5 n5 n36)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n1 n5 n5 n36)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n7 n12) (* n3 n5 n7 n36)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n3 n5 n7 n36)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n7 n12) (* n1 n7 n21 n36)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n1 n7 n21 n36)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n7 n12) (* n3 n7 n7 n36)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n3 n7 n7 n36)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n7 n12) (* n1 n36 n36)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n1 n36 n36)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n7 n12) (* n7 n7 n7 n36)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n7 n7 n7 n36)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n7 n12) (* n3 n5 n7 n12)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n3 n5 n7 n12)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n1 n9 n36))) 0)) (>= (+ (* n7 n12) (* n1 n9 n36)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n1 n9 n36)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n7 n12) (* n3 n21 n36)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n3 n21 n36)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n36 0)) (not (= n9 0))) (ite (>= (* n9 n36) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n9 n36))) 0)) (>= (+ (* n7 n12) (* n9 n36)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n9 n36)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n12 0)) (not (= n21 0))) (ite (>= (* n12 n21) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n12 n21))) 0)) (>= (+ (* n7 n12) (* n12 n21)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n12 n21)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n12 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n7 n12) (* n3 n7 n36)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n3 n7 n36)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n7 n12) (* n5 n9 n36)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n5 n9 n36)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n7 n12) (* n3 n5 n5 n36)) 1)) (ite (>= (* n7 n12) 0) (not (>= (+ (* n7 n12) (* n3 n5 n5 n36)) 0)) (>= (+ (* n7 n12) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21 n21) 0) (ite (>= (* n5 n7 n7 n21) 0) (>= (+ (* n5 n5 n21 n21) (* (- 1) (* n5 n7 n7 n21))) 1) (>= (+ (* n5 n5 n21 n21) (* n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n5 n21 n21) (* n5 n7 n7 n21)) 0)) (not (>= (+ (* n5 n5 n21 n21) (* (- 1) (* n5 n7 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21 n21) 0) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n5 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n7 n21) (* n5 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* n5 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n7 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n7 n7 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9)))) (or (= (* n5 n5 n9 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n9 n21) (* (- 1) (* n5 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n5 n7 n7 n21) (* n7 n7 n9 n21)) (= (* n5 n7 n7 n21) (* (- 1) (* n7 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n7 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21 n21) 0) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n7 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n7 n21) (* n7 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* n7 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n7 n7 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n7 n7 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n7 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n5 n7 n7 n21) (* n5 n7 n9 n21)) (= (* n5 n7 n7 n21) (* (- 1) (* n5 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n7 n7 n21) 0) (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n1 n7 n7 n21))) 1) (>= (+ (* n1 n5 n5 n36) (* n1 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n36) (* n1 n7 n7 n21)) 0)) (not (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n1 n7 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n7 n7 n7) 0) (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n1 n7 n7 n7))) 1) (>= (+ (* n1 n5 n5 n36) (* n1 n7 n7 n7)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n36) (* n1 n7 n7 n7)) 0)) (not (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n1 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n5 n5) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n5 n5 n36) 0) (not (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n5 n5 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n5 n5 n36) 0) (not (>= (+ (* n1 n5 n5 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n5 n5 n36) 0) (not (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n5 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n5 n36) 0) (not (>= (+ (* n1 n5 n5 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n5 n7 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n5 n7 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n3 n7 n21) (* n1 n5 n5 n36)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n1 n5 n5 n36)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n3 n7 n12) (* n1 n5 n5 n36)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* n1 n5 n5 n36)) 0)) (>= (+ (* n3 n7 n12) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n21) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n7) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n9 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n9 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n3 n5 n21) (* n1 n5 n5 n36)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n1 n5 n5 n36)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n3 n5 n12) (* n1 n5 n5 n36)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* n1 n5 n5 n36)) 0)) (>= (+ (* n3 n5 n12) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n5 n12) (* n1 n5 n5 n36)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n1 n5 n5 n36)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n7 n12) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n5 n7 n12) 0) (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n1 n5 n7 n12))) 1) (>= (+ (* n1 n5 n5 n36) (* n1 n5 n7 n12)) 1)) (ite (>= (* n1 n5 n7 n12) 0) (not (>= (+ (* n1 n5 n5 n36) (* n1 n5 n7 n12)) 0)) (not (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n1 n5 n7 n12))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n7 n7) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n5 n7 n7) 0) (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n1 n5 n7 n7))) 1) (>= (+ (* n1 n5 n5 n36) (* n1 n5 n7 n7)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n36) (* n1 n5 n7 n7)) 0)) (not (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n1 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n5 n7) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n7 n9 n36) 0) (not (>= (+ (* n7 n9 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n7 n9 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n7 n9 n36) 0) (not (>= (+ (* n7 n9 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n7 n9 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n9 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n9 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n36)) 0)) (>= (+ n3 n36) 1)) (ite (>= n3 0) (not (>= (+ n3 n36) 0)) (>= (+ n3 (* (- 1) n36)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n3 n5 n5) (* n1 n5 n5 n36)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n1 n5 n5 n36)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n5 n21) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n3 n7 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n3 n7 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n7 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n7 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n5 n9 n36) 0) (not (>= (+ (* n5 n9 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n5 n9 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n5 n9 n36) 0) (not (>= (+ (* n5 n9 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n5 n9 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n12) (* n1 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n1 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* (- 1) (* n1 n5 n5 n36))) 0)) (>= (+ (* n3 n5 n36) (* n1 n5 n5 n36)) 1)) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* n1 n5 n5 n36)) 0)) (>= (+ (* n3 n5 n36) (* (- 1) (* n1 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n36) 0) (ite (>= (* n3 n5 n7 n21) 0) (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n3 n5 n7 n21))) 1) (>= (+ (* n1 n5 n5 n36) (* n3 n5 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5 n36) (* n3 n5 n7 n21)) 0)) (not (>= (+ (* n1 n5 n5 n36) (* (- 1) (* n3 n5 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n1 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n1 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n1 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n1 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n7 n7 n21) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n7 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n7 n7 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n7 n7 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n7 n7 n21) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n7 n7 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n7 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n7 n7 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n1 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n1 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n1 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n1 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n7 n7 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n7 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n7 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21 n21) 0) (ite (>= (* n1 n7 n7 n21) 0) (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n1 n7 n7 n21))) 1) (>= (+ (* n1 n5 n21 n21) (* n1 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n5 n21 n21) (* n1 n7 n7 n21)) 0)) (not (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n1 n7 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n7 n7 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n7 n7 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n1 n7 n7 n21) (* n1 n7 n9 n21)) (= (* n1 n7 n7 n21) (* (- 1) (* n1 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n7 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n7 n7 n21) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n21) 0) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n1 n7 n21 n21))) 0)) (>= (+ (* n1 n7 n7 n21) (* n1 n7 n21 n21)) 1)) (ite (>= (* n1 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21) (* n1 n7 n21 n21)) 0)) (>= (+ (* n1 n7 n7 n21) (* (- 1) (* n1 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n5) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n5 n7 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n5 n5 n5) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n7 n7 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n5 n5 n5) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n5 n5 n7) 0) (not (>= (+ (* n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n5 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n5 n7) 0) (not (>= (+ (* n5 n5 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n5 n5 n7 n7) (* n3 n5 n5 n5 n7)) (= (* n1 n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n5 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n7 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n7 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n5 n7 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n5) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n5 n5 n7) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n7) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n5 n5) (* n3 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n5 n5) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n5 n5) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n5 n5) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n5) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n5 n5) (* n5 n5 n7)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n5 n5 n7)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n12)) 0)) (>= (+ n5 n12) 1)) (ite (>= n5 0) (not (>= (+ n5 n12) 0)) (>= (+ n5 (* (- 1) n12)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n5 n5) (* n3 n5 n7 n12)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n3 n5 n7 n12)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n5 n5) (* n5 n5 n9 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n5 n5 n9 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n5 n5) (* n5 n9 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n5 n9 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n5 n5) (* n7 n7 n9 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n7 n7 n9 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n5 n5) (* n7 n9 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n7 n9 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0))) (ite (>= (* n21 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n21 n21))) 0)) (>= (+ (* n5 n5) (* n21 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n21 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n5 n5) (* n1 n7 n9 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n1 n7 n9 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5) (* n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5) 0) (not (>= (+ (* n5 n5) (* n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n5 n5 n7 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n5 n5 n5 n5) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n1 n7 n7 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n1 n5 n5 n5) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n5 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n5 n5 n7) 0) (not (>= (+ (* n5 n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n5 n5 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n5 n5 n7) 0) (not (>= (+ (* n5 n5 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n5 n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n1 n3) (= n1 (* (- 1) n3))) (or (= (* n1 n5 n5 n7 n7) (* n3 n5 n5 n7 n7)) (= (* n1 n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n1 n5 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n7 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n3 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n1 n7 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n1 n5 n7 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n3 n5) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n1 n5 n5 n7) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n7) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 0)) (>= (+ (* n3 n5 n5) (* n3 n5 n5 n7 n7)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n5 n5 n7 n7)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n5 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n5 n7 n7) 0) (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n7))) 1) (>= (+ (* n5 n5 n5 n5 n21) (* n5 n5 n5 n7 n7)) 1)) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n21) (* n5 n5 n5 n7 n7)) 0)) (not (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n7 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* n7 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* n7 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n7 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* n5 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* n5 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* n5 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* n5 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n5 n9 n21) 0) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* n5 n5 n5 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* n5 n5 n5 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n5 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* n5 n5 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* n5 n5 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* n5 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n7 n7) (* n5 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n7 n7) (* (- 1) (* n5 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n5 n5 n7 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n7 n7))) 1) (>= (+ (* n5 n5 n5 n21) (* n5 n5 n7 n7)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n21) (* n5 n5 n7 n7)) 0)) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n5 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n5 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n5 n7 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n5 n5 n7 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n5 n7 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n7 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n7 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* n7 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* n7 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n7 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* n5 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* n5 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* n5 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* n5 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n5 n9 n21) 0) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n5 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n5 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n5 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5 n5) (* n5 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n5) (* (- 1) (* n5 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n5 n5 n5 n5) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n5 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n5 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n5 n5 n5) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n5 n5 n5 n5) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n5 n5 n5) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n5 n5 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n5 n5 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n7 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n7 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n5) (* n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n5) 0) (not (>= (+ (* n5 n5 n5 n5) (* n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n5) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n1 n7 n7 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n7 n7 n7) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n7 n7 n7) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n7 n7 n7) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n36)) 0)) (>= (+ n1 n36) 1)) (ite (>= n1 0) (not (>= (+ n1 n36) 0)) (>= (+ n1 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n7 n7 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n1 n7 n7 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n7 n7 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n12)) 0)) (>= (+ n7 n12) 1)) (ite (>= n7 0) (not (>= (+ n7 n12) 0)) (>= (+ n7 (* (- 1) n12)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n7 n7 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n1 n7 n7 n7))) 1) (>= (+ (* n1 n5 n21 n21) (* n1 n7 n7 n7)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n5 n21 n21) (* n1 n7 n7 n7)) 0)) (not (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n1 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n7 n7 n7))) 1) (>= (+ (* n1 n5 n5 n21) (* n1 n7 n7 n7)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n21) (* n1 n7 n7 n7)) 0)) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n1 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n1 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n7 n7 n7) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n7 n21 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n1 n7 n21 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n1 n7 n21 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n1 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n21) 0) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n7 n21))) 0)) (>= (+ (* n1 n7 n7 n7) (* n3 n5 n7 n21)) 1)) (ite (>= (* n1 n7 n7 n7) 0) (not (>= (+ (* n1 n7 n7 n7) (* n3 n5 n7 n21)) 0)) (>= (+ (* n1 n7 n7 n7) (* (- 1) (* n3 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n1 n5 n5 n5) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n5 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n5 n5 n7) 0) (not (>= (+ (* n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n5 n5 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n5 n5 n7) 0) (not (>= (+ (* n5 n5 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n1 n5 n5 n5 n5) (* n1 n5 n5 n7 n7)) (= (* n1 n5 n5 n5 n5) (* (- 1) (* n1 n5 n5 n7 n7)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n1 n5 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n7 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n3 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n1 n7 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n1 n5 n7 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n3 n5) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n1 n5 n5 n7) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n5) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 0)) (>= (+ (* n3 n5 n5) (* n1 n5 n5 n5 n5)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n1 n5 n5 n5 n5)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n5 n5 n5 n5))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n7 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n21) (* n7 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n5 n21) (* n7 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n7 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n21) (* n5 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n5 n21) (* n5 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n5 n5 n5 n21) (* n7 n7 n7 n7 n21)) (= (* n5 n5 n5 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n5 n21) 0) (ite (>= (* n5 n7 n7 n7 n7) 0) (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 1) (>= (+ (* n5 n5 n5 n5 n21) (* n5 n7 n7 n7 n7)) 1)) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n21) (* n5 n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n7 n7 n7) 0) (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n5 n7 n7 n7))) 1) (>= (+ (* n5 n5 n5 n5 n21) (* n5 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n21) (* n5 n5 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n5 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n5 n5 n5 n5 n21) (* n5 n5 n5 n9 n21)) (= (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n5 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9)))) (or (= (* n5 n5 n5 n5 n21) (* n5 n5 n7 n9 n21)) (= (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n5 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n21) (* n5 n5 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n5 n21) (* n5 n5 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n21) (* (- 1) (* n5 n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n21) (* n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n21) (* n5 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* n5 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n5 n5 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n5 n5 n5 n21) (* n5 n5 n9 n21)) (= (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9)))) (or (= (* n5 n5 n5 n21) (* n7 n7 n9 n21)) (= (* n5 n5 n5 n21) (* (- 1) (* n7 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n21) (* n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n5 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n5 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n21) 0) (not (>= (+ (* n5 n5 n5 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9)))) (or (= (* n5 n5 n5 n21) (* n5 n7 n9 n21)) (= (* n5 n5 n5 n21) (* (- 1) (* n5 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n5 n5 n5) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n5 n5 n5) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n5 n5) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n5 n5) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n1 n5 n5 n5) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n5 n5 n5) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n12)) 0)) (>= (+ n5 n12) 1)) (ite (>= n5 0) (not (>= (+ n5 n12) 0)) (>= (+ n5 (* (- 1) n12)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n5 n5 n5) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n1 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n1 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n1 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n1 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n1 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n1 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n5 n5) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n1 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n1 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n1 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n21) 0) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n5) (* n3 n5 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n5) 0) (not (>= (+ (* n1 n5 n5 n5) (* n3 n5 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n5) (* (- 1) (* n3 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n21 n36) 0) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n21 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n21 n36) 0) (not (>= (+ (* n1 n21 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n21 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n21 n36) 0) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n21 n36) (* n1 n36 n36)) 1)) (ite (>= (* n1 n21 n36) 0) (not (>= (+ (* n1 n21 n36) (* n1 n36 n36)) 0)) (>= (+ (* n1 n21 n36) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n1 n3) (= n1 (* (- 1) n3))) (or (= (* n1 n21 n36) (* n3 n21 n36)) (= (* n1 n21 n36) (* (- 1) (* n3 n21 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21 n36) 0) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* (- 1) (* n1 n21 n36))) 0)) (>= (+ (* n1 n7 n36) (* n1 n21 n36)) 1)) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* n1 n21 n36)) 0)) (>= (+ (* n1 n7 n36) (* (- 1) (* n1 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21 n36) 0) (ite (>= (* n3 n5 n36) 0) (>= (+ (* n1 n21 n36) (* (- 1) (* n3 n5 n36))) 1) (>= (+ (* n1 n21 n36) (* n3 n5 n36)) 1)) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n1 n21 n36) (* n3 n5 n36)) 0)) (not (>= (+ (* n1 n21 n36) (* (- 1) (* n3 n5 n36))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n21 n21) 0) (not (>= (+ (* n5 n5 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n21 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n21 n21) 0) (not (>= (+ (* n5 n5 n21 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n21 n21) 0) (not (>= (+ (* n5 n5 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n21 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n21 n21) 0) (not (>= (+ (* n5 n5 n21 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n7 n21 n21) 0) (not (>= (+ (* n5 n7 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n21 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n21 n21) 0) (not (>= (+ (* n5 n7 n21 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n7 n21 n21) 0) (not (>= (+ (* n5 n7 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n7 n21 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n7 n21 n21) 0) (not (>= (+ (* n5 n7 n21 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n7 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n5 n7 n36) 0) (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n3 n5 n7 n36))) 1) (>= (+ (* n1 n7 n21 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n3 n5 n7 n36) 0) (not (>= (+ (* n1 n7 n21 n36) (* n3 n5 n7 n36)) 0)) (not (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n3 n5 n7 n36))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n5 n7 n36) 0) (not (>= (+ (* n3 n5 n7 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n7 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n7 n36) 0) (not (>= (+ (* n3 n5 n7 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n7 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n5 n7 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n5 n7 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n3 n7 n21) (* n3 n5 n7 n36)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n3 n5 n7 n36)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n3 n7 n12) (* n3 n5 n7 n36)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* n3 n5 n7 n36)) 0)) (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n5 n21) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n36)) 0)) (>= (+ n1 n36) 1)) (ite (>= n1 0) (not (>= (+ n1 n36) 0)) (>= (+ n1 (* (- 1) n36)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n5 n7) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n9 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n3 n5 n21) (* n3 n5 n7 n36)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n3 n5 n7 n36)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n3 n5 n12) (* n3 n5 n7 n36)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* n3 n5 n7 n36)) 0)) (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n5 n12) (* n3 n5 n7 n36)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n3 n5 n7 n36)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n7 n12) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n5 n7 n12) 0) (not (>= (+ (* n1 n5 n7 n12) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n5 n7 n12) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n5 n7 n12) 0) (not (>= (+ (* n1 n5 n7 n12) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n5 n7 n12) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n7 n7) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n5 n7 n7) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n5 n5 n7) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n7 n9 n36) 0) (not (>= (+ (* n7 n9 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n7 n9 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n7 n9 n36) 0) (not (>= (+ (* n7 n9 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n7 n9 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n9 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n9 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n3 n5 n5) (* n3 n5 n7 n36)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n5 n7 n36)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n5 n5 n21) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n3 n7 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n3 n7 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n7 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n7 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n5 n9 n36) 0) (not (>= (+ (* n5 n9 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n5 n9 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n5 n9 n36) 0) (not (>= (+ (* n5 n9 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n5 n9 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n1 n5 n12) (* n3 n5 n7 n36)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n3 n5 n7 n36)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n3 n5 n36) (* n3 n5 n7 n36)) 1)) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* n3 n5 n7 n36)) 0)) (>= (+ (* n3 n5 n36) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n36) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 0)) (>= (+ (* n3 n5 n7 n21) (* n3 n5 n7 n36)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n3 n5 n7 n36)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n3 n5 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n5 n7 n7 n21) 0) (>= (+ (* n1 n7 n7 n21 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1) (>= (+ (* n1 n7 n7 n21 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21 n21) (* n3 n5 n7 n7 n21)) 0)) (not (>= (+ (* n1 n7 n7 n21 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n3 n5 n7 n7 n21) (* n3 n7 n7 n7 n21)) (= (* n3 n5 n7 n7 n21) (* (- 1) (* n3 n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n5 n7 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n7 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n3 n5 n5 n7 n21) (* n3 n5 n7 n7 n21)) (= (* n3 n5 n5 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n7 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n9 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n9 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n9 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n9 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n9 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n9 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n5 n7 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n5 n7 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n5 n7 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n5 n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n5) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n9 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n7 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n7 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n7 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n9 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n21) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n7 n21) (* n3 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n3 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n3 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n7 n7 n36) 0) (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n3 n7 n7 n36))) 1) (>= (+ (* n1 n7 n21 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n3 n7 n7 n36) 0) (not (>= (+ (* n1 n7 n21 n36) (* n3 n7 n7 n36)) 0)) (not (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n3 n7 n7 n36))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n5 n7 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n5 n7 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n36)) 0)) (>= (+ n3 n36) 1)) (ite (>= n3 0) (not (>= (+ n3 n36) 0)) (>= (+ n3 (* (- 1) n36)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n3 n7 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n3 n7 n12) (* n1 n7 n21 n36)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* n1 n7 n21 n36)) 0)) (>= (+ (* n3 n7 n12) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n5 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n5 n7) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n9 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n9 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n3 n5 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n21 n36) 0) (not (>= (+ (* n3 n21 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n3 n21 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n3 n21 n36) 0) (not (>= (+ (* n3 n21 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n3 n21 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n3 n5 n12) (* n1 n7 n21 n36)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* n1 n7 n21 n36)) 0)) (>= (+ (* n3 n5 n12) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n21 n21) 0) (not (>= (+ (* n3 n21 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n3 n21 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n3 n21 n21) 0) (not (>= (+ (* n3 n21 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n3 n21 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n12 n21) 0) (not (>= (+ (* n3 n12 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n3 n12 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n3 n12 n21) 0) (not (>= (+ (* n3 n12 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n3 n12 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n5 n12) (* n1 n7 n21 n36)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n1 n7 n21 n36)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n7 n12) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n5 n7 n12) 0) (not (>= (+ (* n1 n5 n7 n12) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n5 n7 n12) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n5 n7 n12) 0) (not (>= (+ (* n1 n5 n7 n12) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n5 n7 n12) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n7 n7) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n5 n7 n7) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n5 n5 n7) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n7 n9 n36) 0) (not (>= (+ (* n7 n9 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n7 n9 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n7 n9 n36) 0) (not (>= (+ (* n7 n9 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n7 n9 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n9 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n9 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n21 n21) 0) (not (>= (+ (* n1 n21 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n21 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n21 n21) 0) (not (>= (+ (* n1 n21 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n21 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n5 n21 n21) 0) (not (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n5 n21 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n5 n21 n21) 0) (not (>= (+ (* n1 n5 n21 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n7 n21 n36) 0) (not (>= (+ (* n7 n21 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n7 n21 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n7 n21 n36) 0) (not (>= (+ (* n7 n21 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n7 n21 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n21 n36) 0) (not (>= (+ (* n21 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n21 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n21 n36) 0) (not (>= (+ (* n21 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n21 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n12 n21) 0) (not (>= (+ (* n1 n12 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n12 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n12 n21) 0) (not (>= (+ (* n1 n12 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n12 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n3 n5 n5) (* n1 n7 n21 n36)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n1 n7 n21 n36)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n5 n5 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n3 n7 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n3 n7 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n7 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n7 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n5 n9 n36) 0) (not (>= (+ (* n5 n9 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n5 n9 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n5 n9 n36) 0) (not (>= (+ (* n5 n9 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n5 n9 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n5 n5 n36) 0) (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n3 n5 n5 n36))) 1) (>= (+ (* n1 n7 n21 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n3 n5 n5 n36) 0) (not (>= (+ (* n1 n7 n21 n36) (* n3 n5 n5 n36)) 0)) (not (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n3 n5 n5 n36))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n7 n21 n21) 0) (not (>= (+ (* n1 n7 n21 n21) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n7 n21 n21) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n7 n21 n21) 0) (not (>= (+ (* n1 n7 n21 n21) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n7 n21 n21) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n5 n21 n36) 0) (not (>= (+ (* n5 n21 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n5 n21 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n5 n21 n36) 0) (not (>= (+ (* n5 n21 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n5 n21 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n1 n5 n12) (* n1 n7 n21 n36)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n1 n7 n21 n36)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* (- 1) (* n1 n7 n21 n36))) 0)) (>= (+ (* n3 n5 n36) (* n1 n7 n21 n36)) 1)) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* n1 n7 n21 n36)) 0)) (>= (+ (* n3 n5 n36) (* (- 1) (* n1 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n36) 0) (ite (>= (* n3 n5 n7 n21) 0) (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n3 n5 n7 n21))) 1) (>= (+ (* n1 n7 n21 n36) (* n3 n5 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n1 n7 n21 n36) (* n3 n5 n7 n21)) 0)) (not (>= (+ (* n1 n7 n21 n36) (* (- 1) (* n3 n5 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n7 n7 n7 n21) 0) (>= (+ (* n1 n7 n7 n21 n21) (* (- 1) (* n3 n7 n7 n7 n21))) 1) (>= (+ (* n1 n7 n7 n21 n21) (* n3 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n7 n7 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21 n21) (* n3 n7 n7 n7 n21)) 0)) (not (>= (+ (* n1 n7 n7 n21 n21) (* (- 1) (* n3 n7 n7 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5 n7 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n7 n7 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n7 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n7 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n7 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n5 n5 n7 n21) 0) (>= (+ (* n1 n7 n7 n21 n21) (* (- 1) (* n3 n5 n5 n7 n21))) 1) (>= (+ (* n1 n7 n7 n21 n21) (* n3 n5 n5 n7 n21)) 1)) (ite (>= (* n3 n5 n5 n7 n21) 0) (not (>= (+ (* n1 n7 n7 n21 n21) (* n3 n5 n5 n7 n21)) 0)) (not (>= (+ (* n1 n7 n7 n21 n21) (* (- 1) (* n3 n5 n5 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n3 n7 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n3 n5 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n21 n21) 0) (not (>= (+ (* n3 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n3 n21 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n3 n21 n21) 0) (not (>= (+ (* n3 n21 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n3 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n7 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n3 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n7 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n3 n5) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n9 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n9 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n9 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n7 n7 n9 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n7 n9 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n7 n9 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n21 n21) 0) (not (>= (+ (* n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n21 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n21 n21) 0) (not (>= (+ (* n21 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n7 n7 n21 n21) 0) (not (>= (+ (* n1 n7 n7 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n7 n7 n21 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n7 n7 n21 n21) 0) (not (>= (+ (* n1 n7 n7 n21 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n7 n7 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n21 n21) 0) (not (>= (+ (* n1 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n21 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n21 n21) 0) (not (>= (+ (* n1 n21 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5 n21 n21) 0) (not (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n21 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n21 n21) 0) (not (>= (+ (* n1 n5 n21 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n7 n7 n21 n21) 0) (not (>= (+ (* n7 n7 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n7 n7 n21 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n7 n7 n21 n21) 0) (not (>= (+ (* n7 n7 n21 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n7 n7 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n3 n5 n5) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n5 n5 n5 n21) 0) (>= (+ (* n1 n7 n7 n21 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1) (>= (+ (* n1 n7 n7 n21 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5 n5 n5 n21) 0) (not (>= (+ (* n1 n7 n7 n21 n21) (* n3 n5 n5 n5 n21)) 0)) (not (>= (+ (* n1 n7 n7 n21 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n5 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n5 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n5 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n5 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n7 n9 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n9 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n1 n7 n21 n21) 0) (not (>= (+ (* n1 n7 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n1 n7 n21 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n1 n7 n21 n21) 0) (not (>= (+ (* n1 n7 n21 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n1 n7 n21 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n7 n21 n21) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 0)) (>= (+ (* n3 n5 n7 n21) (* n1 n7 n7 n21 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n1 n7 n7 n21 n21)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n1 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n7 n7 n36) 0) (not (>= (+ (* n3 n7 n7 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n7 n7 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n7 n7 n36) 0) (not (>= (+ (* n3 n7 n7 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n7 n7 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n5 n7 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n5 n7 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n3 n7 n21) (* n3 n7 n7 n36)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n3 n7 n7 n36)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n3 n7 n12) (* n3 n7 n7 n36)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* n3 n7 n7 n36)) 0)) (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n21) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n7) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n9 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n21) (* n3 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n3 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n12) (* n3 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* n3 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n5 n12) (* n3 n7 n7 n36)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n3 n7 n7 n36)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n7 n12) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n5 n7 n12) 0) (not (>= (+ (* n1 n5 n7 n12) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n7 n12) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n7 n12) 0) (not (>= (+ (* n1 n5 n7 n12) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n7 n12) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n36)) 0)) (>= (+ n1 n36) 1)) (ite (>= n1 0) (not (>= (+ n1 n36) 0)) (>= (+ n1 (* (- 1) n36)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n7 n7) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n7 n7) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n5 n7) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n7 n9 n36) 0) (not (>= (+ (* n7 n9 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n7 n9 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n7 n9 n36) 0) (not (>= (+ (* n7 n9 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n7 n9 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n9 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n9 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n5) (* n3 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n5 n21) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n3 n7 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n3 n7 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n7 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n7 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n5 n9 n36) 0) (not (>= (+ (* n5 n9 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n5 n9 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n5 n9 n36) 0) (not (>= (+ (* n5 n9 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n5 n9 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n12) (* n3 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n3 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n36) (* n3 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* n3 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n36) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n36) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n7 n21) (* n3 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n3 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n3 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n7 n7 n7 n21) 0) (not (>= (+ (* n3 n7 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n7 n7 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n7 n7 n7 n21) 0) (not (>= (+ (* n3 n7 n7 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n7 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n5 n7 n7 n21) (* n3 n7 n7 n7 n21)) (= (* n1 n5 n7 n7 n21) (* (- 1) (* n3 n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n12) 0) (ite (>= (* n3 n7 n7 n7 n21) 0) (>= (+ (* n3 n5 n5 n7 n12) (* (- 1) (* n3 n7 n7 n7 n21))) 1) (>= (+ (* n3 n5 n5 n7 n12) (* n3 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n7 n7 n7 n21) 0) (not (>= (+ (* n3 n5 n5 n7 n12) (* n3 n7 n7 n7 n21)) 0)) (not (>= (+ (* n3 n5 n5 n7 n12) (* (- 1) (* n3 n7 n7 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n3 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* n3 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* n3 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n3 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n5 n9 n21) 0) (ite (>= (* n3 n7 n7 n7 n21) 0) (not (>= (+ (* n3 n7 n7 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 0)) (>= (+ (* n3 n7 n7 n7 n21) (* n5 n5 n5 n9 n21)) 1)) (ite (>= (* n3 n7 n7 n7 n21) 0) (not (>= (+ (* n3 n7 n7 n7 n21) (* n5 n5 n5 n9 n21)) 0)) (>= (+ (* n3 n7 n7 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n7 n7 n7 n21) 0) (not (>= (+ (* n3 n7 n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n7 n7 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n7 n7 n7 n21) 0) (not (>= (+ (* n3 n7 n7 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n7 n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n3 n5 n5 n5 n21) (* n3 n7 n7 n7 n21)) (= (* n3 n5 n5 n5 n21) (* (- 1) (* n3 n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n5 n5 n5 n21) (* n3 n7 n7 n7 n21)) (= (* n1 n5 n5 n5 n21) (* (- 1) (* n3 n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n7 n7 n7 n21) 0) (not (>= (+ (* n3 n7 n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n7 n7 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n7 n7 n7 n21) 0) (not (>= (+ (* n3 n7 n7 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n7 n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n3 n7 n21) 0) (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n7 n21))) 1) (>= (+ (* n1 n36 n36) (* n3 n7 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n1 n36 n36) (* n3 n7 n21)) 0)) (not (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n3 n7 n12) 0) (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n7 n12))) 1) (>= (+ (* n1 n36 n36) (* n3 n7 n12)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n1 n36 n36) (* n3 n7 n12)) 0)) (not (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n7 n12))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n5 n21) (* n1 n36 n36)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n1 n36 n36)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n5 n7) (* n1 n36 n36)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n1 n36 n36)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n36)) 0)) (>= (+ n9 n36) 1)) (ite (>= n9 0) (not (>= (+ n9 n36) 0)) (>= (+ n9 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n9 n36) (* n1 n36 n36)) 1)) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* n1 n36 n36)) 0)) (>= (+ (* n1 n9 n36) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n3 n5 n21) 0) (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n5 n21))) 1) (>= (+ (* n1 n36 n36) (* n3 n5 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n1 n36 n36) (* n3 n5 n21)) 0)) (not (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n5 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n3 n21 n36) 0) (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n21 n36))) 1) (>= (+ (* n1 n36 n36) (* n3 n21 n36)) 1)) (ite (>= (* n3 n21 n36) 0) (not (>= (+ (* n1 n36 n36) (* n3 n21 n36)) 0)) (not (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n21 n36))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n3 n5 n12) 0) (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n5 n12))) 1) (>= (+ (* n1 n36 n36) (* n3 n5 n12)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n1 n36 n36) (* n3 n5 n12)) 0)) (not (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n5 n12))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n3 n21 n21) 0) (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n21 n21))) 1) (>= (+ (* n1 n36 n36) (* n3 n21 n21)) 1)) (ite (>= (* n3 n21 n21) 0) (not (>= (+ (* n1 n36 n36) (* n3 n21 n21)) 0)) (not (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n21 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n3 n12 n21) 0) (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n12 n21))) 1) (>= (+ (* n1 n36 n36) (* n3 n12 n21)) 1)) (ite (>= (* n3 n12 n21) 0) (not (>= (+ (* n1 n36 n36) (* n3 n12 n21)) 0)) (not (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n12 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n5 n12) (* n1 n36 n36)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n1 n36 n36)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n7 n12) (* n1 n36 n36)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n1 n36 n36)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n7 n7) (* n1 n36 n36)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n1 n36 n36)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n36)) 0)) (>= (+ n9 n36) 1)) (ite (>= n9 0) (not (>= (+ n9 n36) 0)) (>= (+ n9 (* (- 1) n36)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n9 n36) (* n1 n36 n36)) 1)) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* n1 n36 n36)) 0)) (>= (+ (* n9 n36) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n21 n21) 0) (not (>= (+ (* n1 n21 n21) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n21 n21) (* n1 n36 n36)) 1)) (ite (>= (* n1 n21 n21) 0) (not (>= (+ (* n1 n21 n21) (* n1 n36 n36)) 0)) (>= (+ (* n1 n21 n21) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n21 n36) 0) (not (>= (+ (* n21 n36) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n21 n36) (* n1 n36 n36)) 1)) (ite (>= (* n21 n36) 0) (not (>= (+ (* n21 n36) (* n1 n36 n36)) 0)) (>= (+ (* n21 n36) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n12 n21) 0) (not (>= (+ (* n1 n12 n21) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n12 n21) (* n1 n36 n36)) 1)) (ite (>= (* n1 n12 n21) 0) (not (>= (+ (* n1 n12 n21) (* n1 n36 n36)) 0)) (>= (+ (* n1 n12 n21) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n3 n5 n5) 0) (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n5 n5))) 1) (>= (+ (* n1 n36 n36) (* n3 n5 n5)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n1 n36 n36) (* n3 n5 n5)) 0)) (not (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n5 n5))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n3 n7 n36) 0) (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n7 n36))) 1) (>= (+ (* n1 n36 n36) (* n3 n7 n36)) 1)) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n1 n36 n36) (* n3 n7 n36)) 0)) (not (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n7 n36))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n7 n36) (* n1 n36 n36)) 1)) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* n1 n36 n36)) 0)) (>= (+ (* n1 n7 n36) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n1 n36 n36))) 0)) (>= (+ (* n1 n5 n12) (* n1 n36 n36)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n1 n36 n36)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n1 n36 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n1 0))) (ite (>= (* n1 n36 n36) 0) (ite (>= (* n3 n5 n36) 0) (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n5 n36))) 1) (>= (+ (* n1 n36 n36) (* n3 n5 n36)) 1)) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n1 n36 n36) (* n3 n5 n36)) 0)) (not (>= (+ (* n1 n36 n36) (* (- 1) (* n3 n5 n36))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21 n36) 0) (ite (>= (* n5 n7 n7 n36) 0) (not (>= (+ (* n5 n7 n7 n36) (* (- 1) (* n7 n7 n21 n36))) 0)) (>= (+ (* n5 n7 n7 n36) (* n7 n7 n21 n36)) 1)) (ite (>= (* n5 n7 n7 n36) 0) (not (>= (+ (* n5 n7 n7 n36) (* n7 n7 n21 n36)) 0)) (>= (+ (* n5 n7 n7 n36) (* (- 1) (* n7 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n21 n36) 0) (ite (>= (* n5 n5 n7 n36) 0) (not (>= (+ (* n5 n5 n7 n36) (* (- 1) (* n7 n7 n21 n36))) 0)) (>= (+ (* n5 n5 n7 n36) (* n7 n7 n21 n36)) 1)) (ite (>= (* n5 n5 n7 n36) 0) (not (>= (+ (* n5 n5 n7 n36) (* n7 n7 n21 n36)) 0)) (>= (+ (* n5 n5 n7 n36) (* (- 1) (* n7 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n7 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* n7 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* n7 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n7 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21 n21) 0) (ite (>= (* n5 n7 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n7 n21) (* (- 1) (* n7 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n7 n7 n21) (* n7 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n7 n21) (* n7 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n7 n7 n21) (* (- 1) (* n7 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21 n21) 0) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7 n7) (* (- 1) (* n7 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n7 n7 n7) (* n7 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7 n7) (* n7 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n7 n7 n7) (* (- 1) (* n7 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n7 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* n7 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* n7 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n7 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n5 n5 n21 n21) (* n7 n7 n7 n21 n21)) (= (* n5 n5 n5 n21 n21) (* (- 1) (* n7 n7 n7 n21 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n7 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n7 n21) (* (- 1) (* n7 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n7 n21) (* n7 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n7 n21) (* n7 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n7 n21) (* (- 1) (* n7 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21 n36) 0) (ite (>= (* n5 n7 n7 n36) 0) (not (>= (+ (* n5 n7 n7 n36) (* (- 1) (* n5 n7 n21 n36))) 0)) (>= (+ (* n5 n7 n7 n36) (* n5 n7 n21 n36)) 1)) (ite (>= (* n5 n7 n7 n36) 0) (not (>= (+ (* n5 n7 n7 n36) (* n5 n7 n21 n36)) 0)) (>= (+ (* n5 n7 n7 n36) (* (- 1) (* n5 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n21 n36) 0) (ite (>= (* n5 n5 n7 n36) 0) (not (>= (+ (* n5 n5 n7 n36) (* (- 1) (* n5 n7 n21 n36))) 0)) (>= (+ (* n5 n5 n7 n36) (* n5 n7 n21 n36)) 1)) (ite (>= (* n5 n5 n7 n36) 0) (not (>= (+ (* n5 n5 n7 n36) (* n5 n7 n21 n36)) 0)) (>= (+ (* n5 n5 n7 n36) (* (- 1) (* n5 n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* n5 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* n5 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21 n21) 0) (ite (>= (* n5 n7 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n7 n21) (* (- 1) (* n5 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n7 n7 n21) (* n5 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n7 n7 n21) 0) (not (>= (+ (* n5 n7 n7 n7 n21) (* n5 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n7 n7 n21) (* (- 1) (* n5 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21 n21) 0) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7 n7) (* (- 1) (* n5 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n7 n7 n7 n7) (* n5 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7 n7) (* n5 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n7 n7 n7 n7) (* (- 1) (* n5 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n5 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* n5 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* n5 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n5 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n5 n5 n21 n21) (* n5 n7 n7 n21 n21)) (= (* n5 n5 n5 n21 n21) (* (- 1) (* n5 n7 n7 n21 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n21 n21) 0) (ite (>= (* n5 n5 n7 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n7 n21) (* (- 1) (* n5 n7 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n7 n21) (* n5 n7 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n7 n21) (* n5 n7 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n7 n21) (* (- 1) (* n5 n7 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n7 n7 n36) (* n7 n7 n7 n36)) (= (* n5 n7 n7 n36) (* (- 1) (* n7 n7 n7 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n7 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n7 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n7 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n7 n12) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n7 n12) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n9 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n9 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n12) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n12) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n12) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n7 n12) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n5 n7 n12) 0) (not (>= (+ (* n1 n5 n7 n12) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n7 n12) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n7 n12) 0) (not (>= (+ (* n1 n5 n7 n12) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n7 n12) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n36)) 0)) (>= (+ n1 n36) 1)) (ite (>= n1 0) (not (>= (+ n1 n36) 0)) (>= (+ n1 (* (- 1) n36)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n7 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n7 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n5 n7) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n7 n9 n36) 0) (not (>= (+ (* n7 n9 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n7 n9 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n7 n9 n36) 0) (not (>= (+ (* n7 n9 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n7 n9 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n9 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n9 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n5) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n5 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n7 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n7 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n7 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n7 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9)))) (or (= (* n5 n5 n9 n36) (* n7 n7 n7 n36)) (= (* n5 n5 n9 n36) (* (- 1) (* n7 n7 n7 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n5 n9 n36) 0) (not (>= (+ (* n5 n9 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n5 n9 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n5 n9 n36) 0) (not (>= (+ (* n5 n9 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n5 n9 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n5 n5 n36) 0) (not (>= (+ (* n3 n5 n5 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n5 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n5 n36) 0) (not (>= (+ (* n3 n5 n5 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n5 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n1 n5 n12) (* n7 n7 n7 n36)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n7 n7 n7 n36)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n5 n7 n36) (* n7 n7 n7 n36)) (= (* n5 n5 n7 n36) (* (- 1) (* n7 n7 n7 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n36) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n36) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (not (= n36 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n36) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 0)) (>= (+ (* n3 n5 n7 n21) (* n7 n7 n7 n36)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n7 n7 n7 n36)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n7 n7 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n5 n7 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n7 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n7 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n7 n7 n7 n21) (* n7 n7 n7 n7 n21)) (= (* n5 n7 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n5 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n5 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n5 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n5) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9)))) (or (= (* n5 n5 n5 n9 n21) (* n7 n7 n7 n7 n21)) (= (* n5 n5 n5 n9 n21) (* (- 1) (* n7 n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n9 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n9 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n9 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n9 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n7 n9 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n7 n9 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n7 n7 n7 n7 n21) 0) (>= (+ (* n5 n5 n5 n21 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1) (>= (+ (* n5 n5 n5 n21 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n7 n7 n21) 0) (not (>= (+ (* n5 n5 n5 n21 n21) (* n7 n7 n7 n7 n21)) 0)) (not (>= (+ (* n5 n5 n5 n21 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n5) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n5 n5 n5 n21) 0) (not (>= (+ (* n3 n5 n5 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n5 n5 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n5 n5 n21) 0) (not (>= (+ (* n3 n5 n5 n5 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n5 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n5 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n5 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n5 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n9 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n9 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n5 n7 n7 n21) (* n7 n7 n7 n7 n21)) (= (* n5 n5 n7 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n7 n7 n7 n21) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n7 n21) (* n7 n7 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n7 n7 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n7 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9)))) (or (= (* n5 n5 n9 n36) (* n5 n7 n7 n36)) (= (* n5 n5 n9 n36) (* (- 1) (* n5 n7 n7 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21 n36) 0) (ite (>= (* n5 n7 n7 n36) 0) (>= (+ (* n5 n5 n21 n36) (* (- 1) (* n5 n7 n7 n36))) 1) (>= (+ (* n5 n5 n21 n36) (* n5 n7 n7 n36)) 1)) (ite (>= (* n5 n7 n7 n36) 0) (not (>= (+ (* n5 n5 n21 n36) (* n5 n7 n7 n36)) 0)) (not (>= (+ (* n5 n5 n21 n36) (* (- 1) (* n5 n7 n7 n36))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n5 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n5 n7) (* n5 n5 n7)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n5 n5 n7)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (>= n12 2) (not (>= n12 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n5 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n5 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n5 n7) (* n5 n9 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n5 n9 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n5 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n5 n7) (* n7 n9 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n7 n9 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0))) (ite (>= (* n21 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n21 n21))) 0)) (>= (+ (* n5 n7) (* n21 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n21 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n5 n7) (* n1 n7 n9 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n1 n7 n9 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n5 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n5 n7) 0) (not (>= (+ (* n5 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n5 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n5 n5 n7) 0) (not (>= (+ (* n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n5 n5 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n5 n7) 0) (not (>= (+ (* n5 n5 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n5 n5 n7 n7) (* n3 n5 n7 n7 n7)) (= (* n1 n5 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n1 n5 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n7 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n3 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n1 n7 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n1 n5 n7 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n3 n5) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n1 n5 n5 n7) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n7 n7) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 0)) (>= (+ (* n3 n5 n5) (* n3 n5 n7 n7 n7)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n5 n7 n7 n7)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n7 n7 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* n5 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* n5 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n5 n9 n21) 0) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n5 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n5 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21 n21) 0) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n5 n5 n7) 0) (not (>= (+ (* n5 n5 n5 n5 n7) (* n5 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n5 n5 n7) (* (- 1) (* n5 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n5 n5 n7) 0) (not (>= (+ (* n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n5 n5 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n5 n5 n7) 0) (not (>= (+ (* n5 n5 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n1 n5 n5 n5 n7) (* n1 n5 n5 n7 n7)) (= (* n1 n5 n5 n5 n7) (* (- 1) (* n1 n5 n5 n7 n7)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n5 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n7 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n7 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n5 n7 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n5) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n1 n5 n5 n7) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n7) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 0)) (>= (+ (* n3 n5 n5) (* n1 n5 n5 n5 n7)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n1 n5 n5 n5 n7)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n5 n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n5 n7 n7 n21) (* n3 n5 n5 n7 n21)) (= (* n1 n5 n7 n7 n21) (* (- 1) (* n3 n5 n5 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n7 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n9 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n9 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n9 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n7 n9 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n7 n9 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n7 n9 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5 n7 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n7 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n7 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n7 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n5) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n1 n7 n9 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n7 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n7 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n7 n7 n21) 0) (not (>= (+ (* n1 n5 n7 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n9 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n5 n7 n7 n21) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 0)) (>= (+ (* n3 n5 n7 n21) (* n1 n5 n7 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n1 n5 n7 n7 n21)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n1 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n7 n21) 0) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7 n7) (* (- 1) (* n5 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n7 n7 n7 n7) (* n5 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n7 n7 n7 n7) (* n5 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n7 n7 n7 n7) (* (- 1) (* n5 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n7 n7 n7 n21) 0) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n5 n7 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* n5 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* n5 n7 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n5 n7 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9)))) (or (= (* n5 n5 n5 n9 n21) (* n5 n7 n7 n7 n21)) (= (* n5 n5 n5 n9 n21) (* (- 1) (* n5 n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n7 n7 n7 n21) 0) (>= (+ (* n5 n5 n5 n21 n21) (* (- 1) (* n5 n7 n7 n7 n21))) 1) (>= (+ (* n5 n5 n5 n21 n21) (* n5 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7 n7 n21) 0) (not (>= (+ (* n5 n5 n5 n21 n21) (* n5 n7 n7 n7 n21)) 0)) (not (>= (+ (* n5 n5 n5 n21 n21) (* (- 1) (* n5 n7 n7 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9)))) (or (= (* n5 n5 n7 n9 n21) (* n5 n7 n7 n7 n21)) (= (* n5 n5 n7 n9 n21) (* (- 1) (* n5 n7 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21 n21) 0) (ite (>= (* n5 n7 n7 n7 n21) 0) (>= (+ (* n5 n5 n7 n21 n21) (* (- 1) (* n5 n7 n7 n7 n21))) 1) (>= (+ (* n5 n5 n7 n21 n21) (* n5 n7 n7 n7 n21)) 1)) (ite (>= (* n5 n7 n7 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n21 n21) (* n5 n7 n7 n7 n21)) 0)) (not (>= (+ (* n5 n5 n7 n21 n21) (* (- 1) (* n5 n7 n7 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n5 n9 n21) 0) (ite (>= (* n5 n7 n7 n7 n7) 0) (>= (+ (* n5 n5 n5 n9 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 1) (>= (+ (* n5 n5 n5 n9 n21) (* n5 n7 n7 n7 n7)) 1)) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n9 n21) (* n5 n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n5 n9 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n7 n7 n7 n7) 0) (>= (+ (* n5 n5 n5 n21 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 1) (>= (+ (* n5 n5 n5 n21 n21) (* n5 n7 n7 n7 n7)) 1)) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n21 n21) (* n5 n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n5 n21 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n7 n7 n7 n7) 0) (>= (+ (* n5 n5 n7 n9 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 1) (>= (+ (* n5 n5 n7 n9 n21) (* n5 n7 n7 n7 n7)) 1)) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n9 n21) (* n5 n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n7 n9 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21 n21) 0) (ite (>= (* n5 n7 n7 n7 n7) 0) (>= (+ (* n5 n5 n7 n21 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 1) (>= (+ (* n5 n5 n7 n21 n21) (* n5 n7 n7 n7 n7)) 1)) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n21 n21) (* n5 n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n7 n21 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n7 n21) 0) (ite (>= (* n5 n7 n7 n7 n7) 0) (>= (+ (* n5 n5 n7 n7 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 1) (>= (+ (* n5 n5 n7 n7 n21) (* n5 n7 n7 n7 n7)) 1)) (ite (>= (* n5 n7 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n21) (* n5 n7 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n7 n7 n21) (* (- 1) (* n5 n7 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n5 n9 n21) 0) (ite (>= (* n5 n5 n7 n7 n7) 0) (>= (+ (* n5 n5 n5 n9 n21) (* (- 1) (* n5 n5 n7 n7 n7))) 1) (>= (+ (* n5 n5 n5 n9 n21) (* n5 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n9 n21) (* n5 n5 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n5 n9 n21) (* (- 1) (* n5 n5 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n7 n7 n7) 0) (>= (+ (* n5 n5 n5 n21 n21) (* (- 1) (* n5 n5 n7 n7 n7))) 1) (>= (+ (* n5 n5 n5 n21 n21) (* n5 n5 n7 n7 n7)) 1)) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n5 n21 n21) (* n5 n5 n7 n7 n7)) 0)) (not (>= (+ (* n5 n5 n5 n21 n21) (* (- 1) (* n5 n5 n7 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21 n21) 0) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n5 n5 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* n5 n5 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* n5 n5 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n5 n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n7 n21) 0) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n5 n5 n7 n7 n21))) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* n5 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n7 n7 n7) 0) (not (>= (+ (* n5 n5 n7 n7 n7) (* n5 n5 n7 n7 n21)) 0)) (>= (+ (* n5 n5 n7 n7 n7) (* (- 1) (* n5 n5 n7 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= (* n5 n7 n36) (* n7 n9 n36)) (= (* n5 n7 n36) (* (- 1) (* n7 n9 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n7 0))) (ite (>= (* n7 n21 n36) 0) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* (- 1) (* n7 n21 n36))) 0)) (>= (+ (* n5 n7 n36) (* n7 n21 n36)) 1)) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* n7 n21 n36)) 0)) (>= (+ (* n5 n7 n36) (* (- 1) (* n7 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n36) 0) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* (- 1) (* n5 n5 n9 n36))) 0)) (>= (+ (* n5 n7 n36) (* n5 n5 n9 n36)) 1)) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* n5 n5 n9 n36)) 0)) (>= (+ (* n5 n7 n36) (* (- 1) (* n5 n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n5 n7 n36) (* n5 n9 n36)) (= (* n5 n7 n36) (* (- 1) (* n5 n9 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n5 n7 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n5 n7 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n21 n36) 0) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* (- 1) (* n5 n21 n36))) 0)) (>= (+ (* n5 n7 n36) (* n5 n21 n36)) 1)) (ite (>= (* n5 n7 n36) 0) (not (>= (+ (* n5 n7 n36) (* n5 n21 n36)) 0)) (>= (+ (* n5 n7 n36) (* (- 1) (* n5 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n1 n5 n7) (* n5 n5 n7)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n5 n5 n7)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n7 n7) (* n5 n5 n7)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n5 n5 n7)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n3 n7) (* n5 n5 n7)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n5 n5 n7)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n1 n7 n7) (* n5 n5 n7)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n5 n5 n7)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n3 n5) (* n5 n5 n7)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n5 n5 n7)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n5 n7))) 0)) (>= (+ (* n3 n5 n5) (* n5 n5 n7)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n5 n5 n7)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n5 n7))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n12)) 0)) (>= (+ n7 n12) 1)) (ite (>= n7 0) (not (>= (+ n7 n12) 0)) (>= (+ n7 (* (- 1) n12)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n12) 0) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n7 n12))) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* n3 n5 n5 n7 n12)) 1)) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* n3 n5 n5 n7 n12)) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n12) 0) (ite (>= (* n3 n5 n5 n7 n21) 0) (>= (+ (* n3 n5 n5 n7 n12) (* (- 1) (* n3 n5 n5 n7 n21))) 1) (>= (+ (* n3 n5 n5 n7 n12) (* n3 n5 n5 n7 n21)) 1)) (ite (>= (* n3 n5 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n5 n7 n12) (* n3 n5 n5 n7 n21)) 0)) (not (>= (+ (* n3 n5 n5 n7 n12) (* (- 1) (* n3 n5 n5 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n3 n7 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n3 n7 n12) (* n3 n5 n7 n12)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* n3 n5 n7 n12)) 0)) (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n5 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n12)) 0)) (>= (+ n1 n12) 1)) (ite (>= n1 0) (not (>= (+ n1 n12) 0)) (>= (+ n1 (* (- 1) n12)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n5 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n3 n5 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n3 n5 n12) (* n3 n5 n7 n12)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* n3 n5 n7 n12)) 0)) (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n5 n12) (* n3 n5 n7 n12)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n3 n5 n7 n12)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n12) 0) (not (>= (+ (* n1 n12) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n12) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n12) 0) (not (>= (+ (* n1 n12) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n12) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n7 n12) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n1 n3) (= n1 (* (- 1) n3))) (or (= (* n1 n5 n7 n12) (* n3 n5 n7 n12)) (= (* n1 n5 n7 n12) (* (- 1) (* n3 n5 n7 n12)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n12)) 0)) (>= (+ n7 n12) 1)) (ite (>= n7 0) (not (>= (+ n7 n12) 0)) (>= (+ n7 (* (- 1) n12)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n7 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (>= n12 2) (not (>= n12 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n3 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n12)) 0)) (>= (+ n7 n12) 1)) (ite (>= n7 0) (not (>= (+ n7 n12) 0)) (>= (+ n7 (* (- 1) n12)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n7 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n12)) 0)) (>= (+ n7 n12) 1)) (ite (>= n7 0) (not (>= (+ n7 n12) 0)) (>= (+ n7 (* (- 1) n12)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n5 n7 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (>= n12 2) (not (>= n12 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n3 n5) (* n3 n5 n7 n12)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n3 n5 n7 n12)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n12)) 0)) (>= (+ n5 n12) 1)) (ite (>= n5 0) (not (>= (+ n5 n12) 0)) (>= (+ n5 (* (- 1) n12)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n5 n5 n7) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n12)) 0)) (>= (+ n5 n12) 1)) (ite (>= n5 0) (not (>= (+ n5 n12) 0)) (>= (+ n5 (* (- 1) n12)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n3 n5 n5) (* n3 n5 n7 n12)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n5 n7 n12)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n5 n5 n21) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n5 n7 n12))) 0)) (>= (+ (* n1 n5 n12) (* n3 n5 n7 n12)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n3 n5 n7 n12)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n5 n7 n12))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n12 0) (ite (>= n21 0) (>= (+ n12 (* (- 1) n21)) 1) (>= (+ n12 n21) 1)) (ite (>= n21 0) (not (>= (+ n12 n21) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)))) (not (= n12 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n12) 0) (ite (>= (* n3 n5 n7 n21) 0) (>= (+ (* n3 n5 n7 n12) (* (- 1) (* n3 n5 n7 n21))) 1) (>= (+ (* n3 n5 n7 n12) (* n3 n5 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n12) (* n3 n5 n7 n21)) 0)) (not (>= (+ (* n3 n5 n7 n12) (* (- 1) (* n3 n5 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n7 n21) 0) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* n3 n5 n5 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* n3 n5 n5 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n5 n9 n21) 0) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* n5 n5 n5 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* n5 n5 n5 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n5 n7 n7) 0) (>= (+ (* n1 n5 n5 n5 n21) (* (- 1) (* n1 n5 n5 n7 n7))) 1) (>= (+ (* n1 n5 n5 n5 n21) (* n1 n5 n5 n7 n7)) 1)) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n5 n21) (* n1 n5 n5 n7 n7)) 0)) (not (>= (+ (* n1 n5 n5 n5 n21) (* (- 1) (* n1 n5 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n5 n9 n21) 0) (ite (>= (* n3 n5 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 0)) (>= (+ (* n3 n5 n5 n7 n21) (* n5 n5 n5 n9 n21)) 1)) (ite (>= (* n3 n5 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n5 n7 n21) (* n5 n5 n5 n9 n21)) 0)) (>= (+ (* n3 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n5 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n5 n5 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n5 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n5 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n5 n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n3 n5 n5 n5 n21) (* n3 n5 n5 n7 n21)) (= (* n3 n5 n5 n5 n21) (* (- 1) (* n3 n5 n5 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n5 n5 n5 n21) (* n3 n5 n5 n7 n21)) (= (* n1 n5 n5 n5 n21) (* (- 1) (* n3 n5 n5 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n5 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n5 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n7 n21))) 0)) (>= (+ (* n1 n5 n7) (* n3 n7 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n7 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n3 n7 n21) 0) (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n7 n21))) 1) (>= (+ (* n1 n9 n36) (* n3 n7 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n1 n9 n36) (* n3 n7 n21)) 0)) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n3 n7 n21) (* n3 n21 n36)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n3 n21 n36)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n21 n21))) 0)) (>= (+ (* n3 n7 n21) (* n3 n21 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n3 n21 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n7 n21))) 0)) (>= (+ (* n1 n7 n7) (* n3 n7 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n7 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n3 n7 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n3 n7 n21) (* n5 n9 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n5 n9 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n3 n7 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n3 n7 n21) (* n7 n9 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n7 n9 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21 n21) 0) (ite (>= (* n3 n7 n21) 0) (>= (+ (* n1 n21 n21) (* (- 1) (* n3 n7 n21))) 1) (>= (+ (* n1 n21 n21) (* n3 n7 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n1 n21 n21) (* n3 n7 n21)) 0)) (not (>= (+ (* n1 n21 n21) (* (- 1) (* n3 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n7 n21))) 0)) (>= (+ (* n3 n5 n5) (* n3 n7 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n7 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n7 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n3 n7 n21) (* n3 n7 n36)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n3 n7 n36)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n7 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n3 n7 n21) (* n1 n7 n9 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n1 n7 n9 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n3 n7 n21) (* n5 n9 n36)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n5 n9 n36)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n3 n7 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n3 n7 n21) (* n3 n5 n5 n36)) 1)) (ite (>= (* n3 n7 n21) 0) (not (>= (+ (* n3 n7 n21) (* n3 n5 n5 n36)) 0)) (>= (+ (* n3 n7 n21) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n3 n7 n12) 0) (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n7 n12))) 1) (>= (+ (* n1 n9 n36) (* n3 n7 n12)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n1 n9 n36) (* n3 n7 n12)) 0)) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n7 n12))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n3 n7 n12) (* n3 n21 n36)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* n3 n21 n36)) 0)) (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n12 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n12 n21) 0) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n12 n21))) 0)) (>= (+ (* n3 n7 n12) (* n3 n12 n21)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* n3 n12 n21)) 0)) (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n12 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n1 n3) (= n1 (* (- 1) n3))) (or (= (* n1 n7 n12) (* n3 n7 n12)) (= (* n1 n7 n12) (* (- 1) (* n3 n7 n12)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n12 0)) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n12 n21) 0) (ite (>= (* n3 n7 n12) 0) (>= (+ (* n1 n12 n21) (* (- 1) (* n3 n7 n12))) 1) (>= (+ (* n1 n12 n21) (* n3 n7 n12)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n1 n12 n21) (* n3 n7 n12)) 0)) (not (>= (+ (* n1 n12 n21) (* (- 1) (* n3 n7 n12))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n3 n7 n12) (* n3 n7 n36)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* n3 n7 n36)) 0)) (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n3 n7 n12) (* n5 n9 n36)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* n5 n9 n36)) 0)) (>= (+ (* n3 n7 n12) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n3 n7 n12) (* n3 n5 n5 n36)) 1)) (ite (>= (* n3 n7 n12) 0) (not (>= (+ (* n3 n7 n12) (* n3 n5 n5 n36)) 0)) (>= (+ (* n3 n7 n12) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n5 n21))) 0)) (>= (+ (* n1 n5 n7) (* n1 n5 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n1 n5 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n9 n36))) 0)) (>= (+ (* n1 n5 n21) (* n1 n9 n36)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n1 n9 n36)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n1 n5 n21) (* n3 n21 n36)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n3 n21 n36)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n21 n21))) 0)) (>= (+ (* n1 n5 n21) (* n3 n21 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n3 n21 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21) 0) (ite (>= (* n1 n7 n7) 0) (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n7 n7))) 1) (>= (+ (* n1 n5 n21) (* n1 n7 n7)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n5 n21) (* n1 n7 n7)) 0)) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n5 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n1 n5 n21) (* n5 n9 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n5 n9 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n1 n5 n21) (* n7 n9 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n7 n9 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n21 n21))) 0)) (>= (+ (* n1 n5 n21) (* n1 n21 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n1 n21 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21) 0) (ite (>= (* n3 n5 n5) 0) (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n5))) 1) (>= (+ (* n1 n5 n21) (* n3 n5 n5)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n1 n5 n21) (* n3 n5 n5)) 0)) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n5))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n1 n5 n21) (* n3 n7 n36)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n3 n7 n36)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n21) (* n1 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n1 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n1 n5 n21) (* n5 n9 n36)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n5 n9 n36)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n21) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n21) 0) (not (>= (+ (* n1 n5 n21) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n21) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n9 n36))) 0)) (>= (+ (* n1 n5 n7) (* n1 n9 n36)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n1 n9 n36)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n21))) 0)) (>= (+ (* n1 n5 n7) (* n3 n5 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n5 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n1 n5 n7) (* n3 n21 n36)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n21 n36)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n21 n21))) 0)) (>= (+ (* n1 n5 n7) (* n3 n21 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n21 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n5 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n1 n5 n7) (* n5 n9 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n5 n9 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n1 n5 n7) (* n7 n9 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n7 n9 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n21 n21))) 0)) (>= (+ (* n1 n5 n7) (* n1 n21 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n1 n21 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n1 n5 n7) (* n3 n7 n36)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n7 n36)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n7) (* n1 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n1 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n1 n5 n7) (* n5 n9 n36)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n5 n9 n36)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n7) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n7) 0) (not (>= (+ (* n1 n5 n7) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n7) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n3 n5 n21) 0) (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n5 n21))) 1) (>= (+ (* n1 n9 n36) (* n3 n5 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n1 n9 n36) (* n3 n5 n21)) 0)) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n5 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n1 n9 n36) (* n3 n21 n36)) 1)) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* n3 n21 n36)) 0)) (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n3 n5 n12) 0) (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n5 n12))) 1) (>= (+ (* n1 n9 n36) (* n3 n5 n12)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n1 n9 n36) (* n3 n5 n12)) 0)) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n5 n12))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n1 n9 n36))) 0)) (>= (+ (* n5 n12) (* n1 n9 n36)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n1 n9 n36)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n1 n9 n36))) 0)) (>= (+ (* n1 n7 n12) (* n1 n9 n36)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n1 n9 n36)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n9 n36))) 0)) (>= (+ (* n1 n7 n7) (* n1 n9 n36)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n1 n9 n36)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* (- 1) (* n1 n9 n36))) 0)) (>= (+ (* n9 n36) (* n1 n9 n36)) 1)) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* n1 n9 n36)) 0)) (>= (+ (* n9 n36) (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n3 n5 n5) 0) (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n5 n5))) 1) (>= (+ (* n1 n9 n36) (* n3 n5 n5)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n1 n9 n36) (* n3 n5 n5)) 0)) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n5 n5))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n1 n7 n36) (* n1 n9 n36)) (= (* n1 n7 n36) (* (- 1) (* n1 n9 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n1 n9 n36) (* n5 n9 n36)) 1)) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* n5 n9 n36)) 0)) (>= (+ (* n1 n9 n36) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n9 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n9 n36) 0) (not (>= (+ (* n1 n9 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n9 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n36 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n9 n36) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n1 n9 n36))) 0)) (>= (+ (* n1 n5 n12) (* n1 n9 n36)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n1 n9 n36)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n1 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n9 n36) (* n3 n5 n36)) (= (* n1 n9 n36) (* (- 1) (* n3 n5 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n3 n5 n21) (* n3 n21 n36)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n3 n21 n36)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n21 n21))) 0)) (>= (+ (* n3 n5 n21) (* n3 n21 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n3 n21 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n21))) 0)) (>= (+ (* n1 n7 n7) (* n3 n5 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n5 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n3 n5 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n3 n5 n21) (* n5 n9 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n5 n9 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n3 n5 n21) (* n7 n9 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n7 n9 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n5 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21 n21) 0) (ite (>= (* n3 n5 n21) 0) (>= (+ (* n1 n21 n21) (* (- 1) (* n3 n5 n21))) 1) (>= (+ (* n1 n21 n21) (* n3 n5 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n1 n21 n21) (* n3 n5 n21)) 0)) (not (>= (+ (* n1 n21 n21) (* (- 1) (* n3 n5 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n21))) 0)) (>= (+ (* n3 n5 n5) (* n3 n5 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n5 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n3 n5 n21) (* n3 n7 n36)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n3 n7 n36)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n21) (* n1 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n1 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n3 n5 n21) (* n5 n9 n36)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n5 n9 n36)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n3 n5 n21) (* n3 n5 n5 n36)) 1)) (ite (>= (* n3 n5 n21) 0) (not (>= (+ (* n3 n5 n21) (* n3 n5 n5 n36)) 0)) (>= (+ (* n3 n5 n21) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n3 n5 n12) (* n3 n21 n36)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* n3 n21 n36)) 0)) (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n3 n21 n21) 0) (not (>= (+ (* n3 n21 n21) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n3 n21 n21) (* n3 n21 n36)) 1)) (ite (>= (* n3 n21 n21) 0) (not (>= (+ (* n3 n21 n21) (* n3 n21 n36)) 0)) (>= (+ (* n3 n21 n21) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n3 n12 n21) 0) (not (>= (+ (* n3 n12 n21) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n3 n12 n21) (* n3 n21 n36)) 1)) (ite (>= (* n3 n12 n21) 0) (not (>= (+ (* n3 n12 n21) (* n3 n21 n36)) 0)) (>= (+ (* n3 n12 n21) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n5 n12) (* n3 n21 n36)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n3 n21 n36)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n1 n7 n12) (* n3 n21 n36)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n3 n21 n36)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n1 n7 n7) (* n3 n21 n36)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n21 n36)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n9 n36) (* n3 n21 n36)) 1)) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* n3 n21 n36)) 0)) (>= (+ (* n9 n36) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n1 n21 n21) 0) (not (>= (+ (* n1 n21 n21) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n1 n21 n21) (* n3 n21 n36)) 1)) (ite (>= (* n1 n21 n21) 0) (not (>= (+ (* n1 n21 n21) (* n3 n21 n36)) 0)) (>= (+ (* n1 n21 n21) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n21 n36) 0) (not (>= (+ (* n21 n36) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n21 n36) (* n3 n21 n36)) 1)) (ite (>= (* n21 n36) 0) (not (>= (+ (* n21 n36) (* n3 n21 n36)) 0)) (>= (+ (* n21 n36) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n1 n12 n21) 0) (not (>= (+ (* n1 n12 n21) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n1 n12 n21) (* n3 n21 n36)) 1)) (ite (>= (* n1 n12 n21) 0) (not (>= (+ (* n1 n12 n21) (* n3 n21 n36)) 0)) (>= (+ (* n1 n12 n21) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n3 n5 n5) (* n3 n21 n36)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n21 n36)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n3 n7 n36) (* n3 n21 n36)) 1)) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* n3 n21 n36)) 0)) (>= (+ (* n3 n7 n36) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n1 n7 n36) (* n3 n21 n36)) 1)) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* n3 n21 n36)) 0)) (>= (+ (* n1 n7 n36) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n1 n5 n12) (* n3 n21 n36)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n3 n21 n36)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n36) 0) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* (- 1) (* n3 n21 n36))) 0)) (>= (+ (* n3 n5 n36) (* n3 n21 n36)) 1)) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* n3 n21 n36)) 0)) (>= (+ (* n3 n5 n36) (* (- 1) (* n3 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n12 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n12 n21) 0) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n12 n21))) 0)) (>= (+ (* n3 n5 n12) (* n3 n12 n21)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* n3 n12 n21)) 0)) (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n12 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n7 n12) (* n3 n5 n12)) (= (* n1 n7 n12) (* (- 1) (* n3 n5 n12)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n12 0)) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n12 n21) 0) (ite (>= (* n3 n5 n12) 0) (>= (+ (* n1 n12 n21) (* (- 1) (* n3 n5 n12))) 1) (>= (+ (* n1 n12 n21) (* n3 n5 n12)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n1 n12 n21) (* n3 n5 n12)) 0)) (not (>= (+ (* n1 n12 n21) (* (- 1) (* n3 n5 n12))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n3 n5 n12) (* n3 n7 n36)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* n3 n7 n36)) 0)) (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n3 n5 n12) (* n5 n9 n36)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* n5 n9 n36)) 0)) (>= (+ (* n3 n5 n12) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n3 n5 n12) (* n3 n5 n5 n36)) 1)) (ite (>= (* n3 n5 n12) 0) (not (>= (+ (* n3 n5 n12) (* n3 n5 n5 n36)) 0)) (>= (+ (* n3 n5 n12) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n21 n21))) 0)) (>= (+ (* n1 n7 n7) (* n3 n21 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n21 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n21 n21) 0) (not (>= (+ (* n3 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n21 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n21 n21) 0) (not (>= (+ (* n3 n21 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n1 n3) (= n1 (* (- 1) n3))) (or (= (* n1 n21 n21) (* n3 n21 n21)) (= (* n1 n21 n21) (* (- 1) (* n3 n21 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n21 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n21 n21))) 0)) (>= (+ (* n3 n5 n5) (* n3 n21 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n21 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n12 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n12 n21) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n12 n21))) 0)) (>= (+ (* n1 n7 n12) (* n3 n12 n21)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n3 n12 n21)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n12 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n12 0)) (not (= n21 0)) (not (= n3 0))) (ite (>= (* n3 n12 n21) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n12 n21))) 0)) (>= (+ (* n1 n5 n12) (* n3 n12 n21)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n3 n12 n21)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n12 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n36 0)) (not (= n9 0))) (ite (>= (* n9 n36) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n9 n36))) 0)) (>= (+ (* n5 n12) (* n9 n36)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n9 n36)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n12 0)) (not (= n21 0))) (ite (>= (* n12 n21) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n12 n21))) 0)) (>= (+ (* n5 n12) (* n12 n21)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n12 n21)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n12 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n5 n12) (* n3 n7 n36)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n3 n7 n36)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n5 n12) (* n5 n9 n36)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n5 n9 n36)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n5 n12) (* n3 n5 n5 n36)) 1)) (ite (>= (* n5 n12) 0) (not (>= (+ (* n5 n12) (* n3 n5 n5 n36)) 0)) (>= (+ (* n5 n12) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n12 0)) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n12 n21) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n1 n12 n21))) 0)) (>= (+ (* n1 n7 n12) (* n1 n12 n21)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n1 n12 n21)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n1 n12 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n1 n7 n12) (* n3 n7 n36)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n3 n7 n36)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n1 n7 n12) (* n5 n9 n36)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n5 n9 n36)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n7 n12) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n7 n12) 0) (not (>= (+ (* n1 n7 n12) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n7 n12) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n1 n5 n12) (* n1 n7 n12)) (= (* n1 n5 n12) (* (- 1) (* n1 n7 n12)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n36) 0) (ite (>= (* n1 n5 n7 n12) 0) (not (>= (+ (* n1 n5 n7 n12) (* (- 1) (* n5 n5 n9 n36))) 0)) (>= (+ (* n1 n5 n7 n12) (* n5 n5 n9 n36)) 1)) (ite (>= (* n1 n5 n7 n12) 0) (not (>= (+ (* n1 n5 n7 n12) (* n5 n5 n9 n36)) 0)) (>= (+ (* n1 n5 n7 n12) (* (- 1) (* n5 n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n5 n7 n12) 0) (not (>= (+ (* n1 n5 n7 n12) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n7 n12) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n7 n12) 0) (not (>= (+ (* n1 n5 n7 n12) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n7 n12) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n7 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n7 n7) (* n5 n9 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n5 n9 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n7 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n7 n7) (* n7 n9 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n7 n9 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0))) (ite (>= (* n21 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n21 n21))) 0)) (>= (+ (* n7 n7) (* n21 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n21 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n7 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n7 n7) (* n1 n7 n9 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n1 n7 n9 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n7 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n7 n7) 0) (not (>= (+ (* n7 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n7 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n3 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n3 n7) (* n5 n9 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n5 n9 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n3 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n3 n7) (* n7 n9 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n7 n9 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n3 n7) (* n1 n7 n9 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n1 n7 n9 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n3 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n3 n7) 0) (not (>= (+ (* n3 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n3 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n7 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n1 n7 n7) (* n5 n9 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n5 n9 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n1 n7 n7) (* n7 n9 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n7 n9 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n7 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n21 n21))) 0)) (>= (+ (* n1 n7 n7) (* n1 n21 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n1 n21 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n7 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n1 n7 n7) (* n3 n7 n36)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n7 n36)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n7 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n7) (* n1 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n1 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n1 n7 n7) (* n5 n9 n36)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n5 n9 n36)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n7 n7) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n7 n7) 0) (not (>= (+ (* n1 n7 n7) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n7 n7) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n1 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n1 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n5 n7 n7))) 1) (>= (+ (* n1 n5 n5 n21) (* n1 n5 n7 n7)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n5 n21) (* n1 n5 n7 n7)) 0)) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n5 n7 n7))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n7 n9) (= n7 (* (- 1) n9))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n1 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n1 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n7 n7) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n1 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n1 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n1 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n21) 0) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n7 n21))) 0)) (>= (+ (* n1 n5 n7 n7) (* n3 n5 n7 n21)) 1)) (ite (>= (* n1 n5 n7 n7) 0) (not (>= (+ (* n1 n5 n7 n7) (* n3 n5 n7 n21)) 0)) (>= (+ (* n1 n5 n7 n7) (* (- 1) (* n3 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n3 n5) (* n5 n5 n9 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n5 n5 n9 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n3 n5) (* n5 n9 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n5 n9 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n3 n5) (* n7 n7 n9 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n7 n7 n9 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n3 n5) (* n7 n9 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n7 n9 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n5) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n3 n5) (* n1 n7 n9 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n1 n7 n9 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5) (* n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5) 0) (not (>= (+ (* n3 n5) (* n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n1 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n1 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n1 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n1 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n1 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n1 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n36)) 0)) (>= (+ n7 n36) 1)) (ite (>= n7 0) (not (>= (+ n7 n36) 0)) (>= (+ n7 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n5 n7) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n1 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n1 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n1 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n5 n7 n21) 0) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n7 n21))) 0)) (>= (+ (* n1 n5 n5 n7) (* n3 n5 n7 n21)) 1)) (ite (>= (* n1 n5 n5 n7) 0) (not (>= (+ (* n1 n5 n5 n7) (* n3 n5 n7 n21)) 0)) (>= (+ (* n1 n5 n5 n7) (* (- 1) (* n3 n5 n7 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n5 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n5 n9 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n5 n9 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n5 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n5 n5 n9 n21) (* n5 n5 n7 n9 n21)) (= (* n5 n5 n5 n9 n21) (* (- 1) (* n5 n5 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n7 n9) (= n7 (* (- 1) n9)))) (or (= (* n5 n5 n5 n9 n21) (* n5 n5 n7 n7 n21)) (= (* n5 n5 n5 n9 n21) (* (- 1) (* n5 n5 n7 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n5 n9 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n5 n9 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n7 n9 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n7 n9 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n5 n9 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n3 n5 n5) (* n5 n5 n9 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n5 n5 n9 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n9 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n5 n9 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n1 n7 n9 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n5 n9 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n9 n21) 0) (not (>= (+ (* n5 n5 n9 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n5 n9 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n5 n9 n21) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 0)) (>= (+ (* n3 n5 n7 n21) (* n5 n5 n9 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n5 n5 n9 n21)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n5 n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n5 n9 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n5 n9 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n9 0) (not (>= (+ n9 (* (- 1) n21)) 0)) (>= (+ n9 n21) 1)) (ite (>= n9 0) (not (>= (+ n9 n21) 0)) (>= (+ n9 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n9 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n9 n21))) 0)) (>= (+ (* n3 n5 n5) (* n5 n9 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n5 n9 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n9 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n9 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n9 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n9 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n5 n9 n21) (* n1 n7 n9 n21)) 1)) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* n1 n7 n9 n21)) 0)) (>= (+ (* n5 n9 n21) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n9 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n9 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n5 n9 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n5 n9 n21) 0) (not (>= (+ (* n5 n9 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n5 n9 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n36) 0) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* (- 1) (* n7 n9 n36))) 0)) (>= (+ (* n1 n7 n36) (* n7 n9 n36)) 1)) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* n7 n9 n36)) 0)) (>= (+ (* n1 n7 n36) (* (- 1) (* n7 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n9 n36) (* n7 n9 n36)) (= (* n5 n9 n36) (* (- 1) (* n7 n9 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n7 n9 n36) 0) (not (>= (+ (* n7 n9 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n7 n9 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n7 n9 n36) 0) (not (>= (+ (* n7 n9 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n7 n9 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n36) 0) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* (- 1) (* n7 n9 n36))) 0)) (>= (+ (* n3 n5 n36) (* n7 n9 n36)) 1)) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* n7 n9 n36)) 0)) (>= (+ (* n3 n5 n36) (* (- 1) (* n7 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n7 n9) (= n7 (* (- 1) n9))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n9 n36) (* n3 n7 n36)) 1)) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* n3 n7 n36)) 0)) (>= (+ (* n9 n36) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n9 n36) (* n5 n9 n36)) 1)) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* n5 n9 n36)) 0)) (>= (+ (* n9 n36) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n9 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n9 n36) 0) (not (>= (+ (* n9 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n9 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n7 n9 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n7 n9 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n7 n7 n9 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n5) (* n7 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n7 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n7 n9 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n7 n9 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n9 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n7 n7 n9 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n7 n7 n9 n21) 0) (not (>= (+ (* n7 n7 n9 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n7 n7 n9 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n7 n9 n21) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n7 n21) (* n7 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n7 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n7 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n7 n9 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n7 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n7 n9 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n7 n9 n21))) 0)) (>= (+ (* n3 n5 n5) (* n7 n9 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n7 n9 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n9 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n9 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n7 n9 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n7 n9 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n7 n9 n21) (* n1 n7 n9 n21)) 1)) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* n1 n7 n9 n21)) 0)) (>= (+ (* n7 n9 n21) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n7 n9 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n7 n9 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n7 n9 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n7 n9 n21) 0) (not (>= (+ (* n7 n9 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n7 n9 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n21 n21) 0) (not (>= (+ (* n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n21 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n21 n21) 0) (not (>= (+ (* n21 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n21 n21) 0) (not (>= (+ (* n1 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n21 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n21 n21) 0) (not (>= (+ (* n1 n21 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5 n21 n21) 0) (not (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n21 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n21 n21) 0) (not (>= (+ (* n1 n5 n21 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n7 n7 n21 n21) 0) (not (>= (+ (* n7 n7 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n7 n7 n21 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n7 n7 n21 n21) 0) (not (>= (+ (* n7 n7 n21 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n7 n7 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n5 n5) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n5 n5 n5 n21) 0) (not (>= (+ (* n3 n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n5 n5 n5 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n5 n5 n5 n21) 0) (not (>= (+ (* n3 n5 n5 n5 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n21)) 0)) (>= (+ n1 n21) 1)) (ite (>= n1 0) (not (>= (+ n1 n21) 0)) (>= (+ n1 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n5 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n5 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n5 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n5 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n7 n9 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n7 n9 n21) 0) (>= (+ (* n5 n5 n5 n21 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1) (>= (+ (* n5 n5 n5 n21 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n5 n7 n9 n21) 0) (not (>= (+ (* n5 n5 n5 n21 n21) (* n5 n5 n7 n9 n21)) 0)) (not (>= (+ (* n5 n5 n5 n21 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n5 n7 n9 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n1 n7 n21 n21) 0) (not (>= (+ (* n1 n7 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n1 n7 n21 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n1 n7 n21 n21) 0) (not (>= (+ (* n1 n7 n21 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n1 n7 n21 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n5 n5 n5 n21 n21) (* n5 n5 n7 n21 n21)) (= (* n5 n5 n5 n21 n21) (* (- 1) (* n5 n5 n7 n21 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n5 n5 n7 n7 n21) 0) (>= (+ (* n5 n5 n5 n21 n21) (* (- 1) (* n5 n5 n7 n7 n21))) 1) (>= (+ (* n5 n5 n5 n21 n21) (* n5 n5 n7 n7 n21)) 1)) (ite (>= (* n5 n5 n7 n7 n21) 0) (not (>= (+ (* n5 n5 n5 n21 n21) (* n5 n5 n7 n7 n21)) 0)) (not (>= (+ (* n5 n5 n5 n21 n21) (* (- 1) (* n5 n5 n7 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n5 n21 n21) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 0)) (>= (+ (* n3 n5 n7 n21) (* n5 n5 n5 n21 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n5 n5 n5 n21 n21)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n5 n5 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n21 n21) 0) (ite (>= (* n3 n5 n5) 0) (>= (+ (* n1 n21 n21) (* (- 1) (* n3 n5 n5))) 1) (>= (+ (* n1 n21 n21) (* n3 n5 n5)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n1 n21 n21) (* n3 n5 n5)) 0)) (not (>= (+ (* n1 n21 n21) (* (- 1) (* n3 n5 n5))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21 n21) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n5 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n21) (* n1 n5 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n1 n5 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n5 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n21 n21) 0) (ite (>= (* n3 n5 n7 n21) 0) (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n3 n5 n7 n21))) 1) (>= (+ (* n1 n5 n21 n21) (* n3 n5 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n1 n5 n21 n21) (* n3 n5 n7 n21)) 0)) (not (>= (+ (* n1 n5 n21 n21) (* (- 1) (* n3 n5 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (not (= n12 0)) (not (= n21 0)) (not (= n1 0))) (ite (>= (* n1 n12 n21) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n1 n12 n21))) 0)) (>= (+ (* n1 n5 n12) (* n1 n12 n21)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n1 n12 n21)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n1 n12 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (>= n21 2) (not (>= n21 (- 1)))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5 n5) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n3 n5 n5) (* n3 n7 n36)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n7 n36)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5 n5) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n7 0)) (not (= n9 0)) (not (= n1 0))) (ite (>= (* n1 n7 n9 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n5) (* n1 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n1 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n1 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n36)) 0)) (>= (+ n5 n36) 1)) (ite (>= n5 0) (not (>= (+ n5 n36) 0)) (>= (+ n5 (* (- 1) n36)) 1))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n3 n5 n5) (* n5 n9 n36)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n5 n9 n36)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n21)) 0)) (>= (+ n3 n21) 1)) (ite (>= n3 0) (not (>= (+ n3 n21) 0)) (>= (+ n3 (* (- 1) n21)) 1))) (ite (>= n7 0) (>= n7 2) (not (>= n7 (- 1)))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n5) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (ite (>= n7 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n7)) 0)) (>= (+ n3 n7) 1)) (ite (>= n3 0) (not (>= (+ n3 n7) 0)) (>= (+ n3 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n5) (* n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (>= n36 2) (not (>= n36 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n3 n5 n5) (* n3 n5 n5 n36)) 1)) (ite (>= (* n3 n5 n5) 0) (not (>= (+ (* n3 n5 n5) (* n3 n5 n5 n36)) 0)) (>= (+ (* n3 n5 n5) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n5 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n5 n5 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9)))) (or (= (* n1 n5 n5 n21) (* n1 n7 n9 n21)) (= (* n1 n5 n5 n21) (* (- 1) (* n1 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n7 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n7)) 0)) (>= (+ n1 n7) 1)) (ite (>= n1 0) (not (>= (+ n1 n7) 0)) (>= (+ n1 (* (- 1) n7)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n5 n21) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n21) 0) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n7 n21 n21))) 0)) (>= (+ (* n1 n5 n5 n21) (* n1 n7 n21 n21)) 1)) (ite (>= (* n1 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n21) (* n1 n7 n21 n21)) 0)) (>= (+ (* n1 n5 n5 n21) (* (- 1) (* n1 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n7 n9 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n5 n5 n21) 0) (not (>= (+ (* n3 n5 n5 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n5 n5 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n5 n5 n21) 0) (not (>= (+ (* n3 n5 n5 n5 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n5 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n7 n9 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n5 n21) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5 n7 n21) (* n3 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n3 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n3 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n1 n3) (= n1 (* (- 1) n3))) (or (= (* n1 n7 n36) (* n3 n7 n36)) (= (* n1 n7 n36) (* (- 1) (* n3 n7 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n3 n7 n36) (* n5 n9 n36)) 1)) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* n5 n9 n36)) 0)) (>= (+ (* n3 n7 n36) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n3 n7 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n3 n7 n36) 0) (not (>= (+ (* n3 n7 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n3 n7 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n36 0)) (not (= n7 0)) (not (= n3 0))) (ite (>= (* n3 n7 n36) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n7 n36))) 0)) (>= (+ (* n1 n5 n12) (* n3 n7 n36)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n3 n7 n36)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n7 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= (* n3 n5 n36) (* n3 n7 n36)) (= (* n3 n5 n36) (* (- 1) (* n3 n7 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n1 n7 n9 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n5 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n5 n5 n5 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n5 n5 n5 n21) 0) (not (>= (+ (* n1 n5 n5 n5 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n5 n5 n5 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n5 n7 n9 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n1 0) (>= n1 2) (not (>= n1 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n1 0))) (ite (>= (* n1 n5 n5 n5 n21) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 0)) (>= (+ (* n3 n5 n7 n21) (* n1 n5 n5 n5 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n1 n5 n5 n5 n21)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n1 n5 n5 n5 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n1 n7 n36) (* n5 n9 n36)) 1)) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* n5 n9 n36)) 0)) (>= (+ (* n1 n7 n36) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n7) (= n5 (* (- 1) n7))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n7 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n7 n36) 0) (not (>= (+ (* n1 n7 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n7 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n9 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n1 n7 n9 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n1 n7 n9 n21) 0) (not (>= (+ (* n1 n7 n9 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n1 n7 n9 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (or (= n1 n3) (= n1 (* (- 1) n3)))) (or (= (* n1 n7 n9 n21) (* n3 n5 n7 n21)) (= (* n1 n7 n9 n21) (* (- 1) (* n3 n5 n7 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n5 n5 n7 n36) (* n5 n5 n9 n36)) (= (* n5 n5 n7 n36) (* (- 1) (* n5 n5 n9 n36)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (or (= n5 n9) (= n5 (* (- 1) n9))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n5 n9 n36) 0) (not (>= (+ (* n5 n9 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n5 n9 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n5 n9 n36) 0) (not (>= (+ (* n5 n9 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n5 n9 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n9 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n9)) 0)) (>= (+ n1 n9) 1)) (ite (>= n1 0) (not (>= (+ n1 n9) 0)) (>= (+ n1 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n1 n5 n12) (* n5 n9 n36)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n5 n9 n36)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n36 0)) (not (= n5 0)) (not (= n9 0))) (ite (>= (* n5 n9 n36) 0) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* (- 1) (* n5 n9 n36))) 0)) (>= (+ (* n3 n5 n36) (* n5 n9 n36)) 1)) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* n5 n9 n36)) 0)) (>= (+ (* n3 n5 n36) (* (- 1) (* n5 n9 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n5 n7 n9 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n5 n7 n9 n21) 0) (not (>= (+ (* n5 n7 n9 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n5 n7 n9 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (or (= n7 n9) (= n7 (* (- 1) n9))) (or (= (* n5 n5 n7 n7 n21) (* n5 n5 n7 n9 n21)) (= (* n5 n5 n7 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n5)) 0)) (>= (+ n3 n5) 1)) (ite (>= n3 0) (not (>= (+ n3 n5) 0)) (>= (+ n3 (* (- 1) n5)) 1))) (ite (>= n9 0) (>= n9 2) (not (>= n9 (- 1)))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n7 n21) (* n5 n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n5 n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n5 n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n9 0) (ite (>= n3 0) (not (>= (+ n3 (* (- 1) n9)) 0)) (>= (+ n3 n9) 1)) (ite (>= n3 0) (not (>= (+ n3 n9) 0)) (>= (+ n3 (* (- 1) n9)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0)) (not (= n9 0))) (ite (>= (* n5 n7 n9 n21) 0) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 0)) (>= (+ (* n3 n5 n7 n21) (* n5 n7 n9 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n7 n21) (* n5 n7 n9 n21)) 0)) (>= (+ (* n3 n5 n7 n21) (* (- 1) (* n5 n7 n9 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n12 0) (not (>= (+ n12 (* (- 1) n36)) 0)) (>= (+ n12 n36) 1)) (ite (>= n12 0) (not (>= (+ n12 n36) 0)) (>= (+ n12 (* (- 1) n36)) 1))) (ite (>= n5 0) (ite (>= n1 0) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= (+ n1 n5) 1)) (ite (>= n1 0) (not (>= (+ n1 n5) 0)) (>= (+ n1 (* (- 1) n5)) 1))) (ite (>= n3 0) (>= n3 2) (not (>= n3 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n1 n5 n12) (* n3 n5 n5 n36)) 1)) (ite (>= (* n1 n5 n12) 0) (not (>= (+ (* n1 n5 n12) (* n3 n5 n5 n36)) 0)) (>= (+ (* n1 n5 n12) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n5 0) (>= n5 2) (not (>= n5 (- 1)))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* (- 1) (* n3 n5 n5 n36))) 0)) (>= (+ (* n3 n5 n36) (* n3 n5 n5 n36)) 1)) (ite (>= (* n3 n5 n36) 0) (not (>= (+ (* n3 n5 n36) (* n3 n5 n5 n36)) 0)) (>= (+ (* n3 n5 n36) (* (- 1) (* n3 n5 n5 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n36 0) (ite (>= n21 0) (not (>= (+ n21 (* (- 1) n36)) 0)) (>= (+ n21 n36) 1)) (ite (>= n21 0) (not (>= (+ n21 n36) 0)) (>= (+ n21 (* (- 1) n36)) 1))) (or (= n5 n7) (= n5 (* (- 1) n7))) (not (= n36 0)) (not (= n5 0)) (not (= n3 0))) (ite (>= (* n3 n5 n5 n36) 0) (ite (>= (* n3 n5 n7 n21) 0) (>= (+ (* n3 n5 n5 n36) (* (- 1) (* n3 n5 n7 n21))) 1) (>= (+ (* n3 n5 n5 n36) (* n3 n5 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n3 n5 n5 n36) (* n3 n5 n7 n21)) 0)) (not (>= (+ (* n3 n5 n5 n36) (* (- 1) (* n3 n5 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n5 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 n21) 1)) (ite (>= n5 0) (not (>= (+ n5 n21) 0)) (>= (+ n5 (* (- 1) n21)) 1))) (or (= n1 n3) (= n1 (* (- 1) n3))) (not (= n21 0)) (not (= n7 0)) (not (= n1 0))) (ite (>= (* n1 n7 n21 n21) 0) (ite (>= (* n3 n5 n7 n21) 0) (>= (+ (* n1 n7 n21 n21) (* (- 1) (* n3 n5 n7 n21))) 1) (>= (+ (* n1 n7 n21 n21) (* n3 n5 n7 n21)) 1)) (ite (>= (* n3 n5 n7 n21) 0) (not (>= (+ (* n1 n7 n21 n21) (* n3 n5 n7 n21)) 0)) (not (>= (+ (* n1 n7 n21 n21) (* (- 1) (* n3 n5 n7 n21))) 0)))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n36 0)) (not (= n21 0)) (not (= n5 0))) (ite (>= (* n5 n5 n21 n36) 0) (ite (>= (* n5 n5 n7 n36) 0) (not (>= (+ (* n5 n5 n7 n36) (* (- 1) (* n5 n5 n21 n36))) 0)) (>= (+ (* n5 n5 n7 n36) (* n5 n5 n21 n36)) 1)) (ite (>= (* n5 n5 n7 n36) 0) (not (>= (+ (* n5 n5 n7 n36) (* n5 n5 n21 n36)) 0)) (>= (+ (* n5 n5 n7 n36) (* (- 1) (* n5 n5 n21 n36))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (=> (and (ite (>= n21 0) (ite (>= n7 0) (not (>= (+ n7 (* (- 1) n21)) 0)) (>= (+ n7 n21) 1)) (ite (>= n7 0) (not (>= (+ n7 n21) 0)) (>= (+ n7 (* (- 1) n21)) 1))) (not (= n21 0)) (not (= n5 0)) (not (= n7 0))) (ite (>= (* n5 n5 n7 n21 n21) 0) (ite (>= (* n5 n5 n7 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n7 n21) (* (- 1) (* n5 n5 n7 n21 n21))) 0)) (>= (+ (* n5 n5 n7 n7 n21) (* n5 n5 n7 n21 n21)) 1)) (ite (>= (* n5 n5 n7 n7 n21) 0) (not (>= (+ (* n5 n5 n7 n7 n21) (* n5 n5 n7 n21 n21)) 0)) (>= (+ (* n5 n5 n7 n7 n21) (* (- 1) (* n5 n5 n7 n21 n21))) 1))))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n7) (* (- 1) (* n7 n21))) 0)) (= (* n5 n7) (* n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n5 n7) (* n7 n21)) (>= (* n5 n7) (* n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n7 n7 n7) 1) (>= (* n7 n7 n7) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n7) (* (- 1) (* n3 n21))) 0) (not (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= n7 n9) (>= n7 n9))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n9 (* (- 1) n21)) 0) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (>= n1 1) (not (>= (+ n1 (* (- 1) n5)) 1)) (= (* n5 n21) (* n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n21) (* n7 n21)) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (>= (+ n24 (* (- 1) n36)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n36) (* n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n5 n21) (* n7 n21)) (>= (* n5 n21) (* n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n1 (* (- 1) n5)) 0)) (>= n1 0) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n24 (* (- 1) n36)) 0) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= (* n5 n21) (* (- 1) (* n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n21) (- 1)) (= (* n5 n21) (* (- 1) (* n7 n21))) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1)) (>= n7 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n21) (- 1)) (= (* n1 n7 n21) (* n3 n7 n21)) (= (* n5 n21) (* (- 1) (* n7 n21))) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1)) (>= (+ n7 (* (- 1) (* n1 n7 n21)) (* n3 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n21) (- 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n21) (* (- 1) (* n7 n21))) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1)) (>= (+ n7 (* (- 1) (* n5 n7 n36)) (* n7 n7 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n21) (- 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (= (* n5 n21) (* (- 1) (* n7 n21))) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1)) (>= (+ n5 (* (- 1) (* n5 n5 n5 n21)) (* n5 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n21) (- 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n21) (* (- 1) (* n7 n21))) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1)) (>= (+ n7 (* (- 1) (* n5 n7 n7 n21)) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n21) (- 1)) (not (>= (+ (* n5 n7) (* (- 1) (* n7 n21))) 0)) (not (>= (+ (* n5 n21) (* n7 n21)) 1)) (>= (* n5 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n21) 0) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1)) (= (* n5 n21) (* (- 1) (* n7 n21))) (>= (+ n7 (* n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n21) (- 1)) (not (>= (+ (* n5 n21) (* n7 n21)) 1)) (>= (* n7 n21) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n21) (- 1)) (= (* n5 n21) (* (- 1) (* n7 n21))) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1)) (>= n5 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n9) 0)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n12 (* (- 1) n21)) 0) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (>= n5 1) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1)) (not (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (>= (+ n24 (* (- 1) n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n9) 0)) (= (* n5 n21) (* n7 n21)) (>= n5 1) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1)) (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1) (>= (+ n9 (* (- 1) n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n7 n7 n21) 1) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (* n5 n7 n21) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (>= (* n7 n7 n21) 0) (>= (+ (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n7 n7 n21) 0) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (>= (* n5 n5 n21) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n15 (* (- 1) n18)) 1)) (>= (+ n15 (* (- 1) n27)) 0) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ (* n3 n12) (* (- 1) (* n3 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n9 (* (- 1) n21)) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n21) (* n7 n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n9 (* (- 1) n21)) 0) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n21) (* n7 n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0)) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (>= (+ n24 (* (- 1) n36)) 0) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n7 n21) (* n7 n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0)) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (>= (+ n24 (* (- 1) n36)) 0) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (= (* n5 n36) (* n7 n36)) (>= (+ n12 (* (- 1) n21)) 0) (= (* n5 n5 n21) (* n7 n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0) (= (* n5 n21) (* n7 n21)) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n5 0) (not (>= (* n5 n9) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n21) (* n7 n21)) 1)) (>= n5 1) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n7) (* (- 1) (* n7 n21))) 1)) (>= (* n5 n21) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n1 n9) 0)) (>= (+ n15 (* (- 1) n30)) 0) (= n15 (+ n30 (* n1 n9) (* (- 1) (* n1 n36)) (* n1 n7 n21))) (>= (+ (* n1 n36) (* (- 1) (* n1 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 0) (not (>= (+ (* n5 n7 n21) (* n7 n7 n21)) 1)) (>= (* n7 n7 n21) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= n5 1) (not (>= (* n5 n9) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0) (not (>= (+ n5 (* (- 1) (* n5 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n9) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0) (>= (+ (* n5 n9) (* n5 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n9) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0) (>= (* n5 n21) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n7 n21) 0) (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1) (not (>= (+ (* n5 n21) (* n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n5 n21) 0) (>= (* n5 n21) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n21 0)) (>= (+ (* n5 n36) (* (- 1) (* n5 n7 n21))) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n12 (* (- 1) n21)) 1)) (= n21 0) (>= n12 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n7 n21) 0) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n7 n21) 0) (= (* n5 n21) 0) (= (* n7 n7 n21) 0) (= (* n5 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= n21 1)) (>= n9 0) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n7 n7 n7 n21) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= n21 0) (= (* n7 n7 n7 n21) 0) (= (* n5 n5 n7 n21) 0) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n7 n21) 0) (= (* n5 n21) 0) (= (* n7 n7 n21) 0) (not (>= (* n5 n7 n21) 1)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n21) 0) (= (* n7 n21) 0) (= (* n5 n5 n7 n21) 0) (= (* n7 n7 n7 n21) 0) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ n24 (* (- 1) n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n7 n21) 0) (= (* n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n5 n36) (* (- 1) (* n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n7 n7 n21) 0) (= (* n5 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* (- 1) (* n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) 0) (= (* n5 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n5 n36) (* (- 1) (* n5 n5 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) 0) (= (* n5 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* (- 1) (* n5 n5 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n1 n5 n7 n21) 0) (= (* n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* (- 1) (* n1 n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n5 n36) (* n7 n36)) (= (* n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n5 n36) (* n7 n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (* n7 n36) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n1 n5 n7 n21) 0) (= (* n7 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n5 n36) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n1 n5 n7 n21) 0) (= (* n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* n1 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n7 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (* n5 n36) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n1 n5 n7 n21) 0) (= (* n7 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n5 n36) (* (- 1) (* n1 n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n1 n7 n21) 0) (= (* n7 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n5 n36) (* (- 1) (* n1 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n1 n7 n21) 0) (= (* n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* (- 1) (* n1 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n1 n7 n21) 0) (= (* n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* n1 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n1 n7 n21) 0) (= (* n7 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n5 n36) (* n1 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n7 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n5 n36) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n7 n7 n21) 0) (= (* n5 n5 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n7 n7 n7 n21) 0) (= (* n7 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n5 n36) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n7 n7 n7 n21) 0) (= (* n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* n7 n7 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n5 n5 n5 n7 n21) 0) (= (* n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* (- 1) (* n5 n5 n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n5 n5 n5 n7 n21) 0) (= (* n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* n5 n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n7 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= (* n7 n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n5 n36) (* (- 1) (* n7 n7 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n7 n7 n21) 0) (= (* n7 n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n5 n5 n7 n21) 0) (= (* n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* (- 1) (* n5 n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n5 n5 n7 n21) 0) (= (* n7 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n5 n36) (* (- 1) (* n5 n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n5 n7 n21) 0) (= (* n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n21) 0) (= (* n7 n7 n21) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n7 n21) 0) (= (* n7 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n5 n36) (* n5 n5 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n7 n21) 0) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ n12 (* (- 1) n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 1)) (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n5 (* n5 n21)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= n21 2)) (>= (+ n24 (* (- 1) n36)) 0) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (= n5 n7)) (not (>= (+ n7 (* (- 1) (* n7 n21))) 1)) (>= (+ n21 (* (- 1) (* n5 n5 n5 n21)) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n5 (* n5 n21)) (>= (+ n24 (* (- 1) n36)) 0) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= n21 2)) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (= n5 n7)) (not (>= (+ n7 (* (- 1) (* n7 n21))) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n3 n12) 0)) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (not (>= (+ n3 (* (- 1) (* n3 n21))) 1)) (not (>= (+ n15 (* (- 1) n18)) 1)) (>= n3 0) (>= (+ n15 (* (- 1) n27)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n15 (* (- 1) n18)) 1)) (not (>= (* n3 n12) 0)) (>= (+ n15 (* (- 1) n18) (* n3 n12)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n3 (* (- 1) (* n3 n21))) 1)) (not (>= (* n3 n12) 0)) (>= n3 0) (>= (+ (* n3 n12) (* (- 1) (* n3 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n3 1)) (>= n3 0) (not (= n3 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 1)) (>= n5 1) (not (>= (+ n7 (* (- 1) (* n1 n7))) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (* n3 n7 n7) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n9) 0)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (>= (+ n24 (* (- 1) n36)) 0) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (>= n5 1) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n7 (* n7 n21)) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (not (>= n9 2))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n9) 0)) (>= (+ n24 (* (- 1) n36)) 0) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= n21 2)) (>= n5 1) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n7 (* n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (>= (+ (* n5 n36) (* (- 1) (* n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n7 n21) (* n7 n7 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ n24 (* (- 1) n39)) 1)) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0) (= n5 (* n5 n21)) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= n7 (* n7 n21)) (>= (+ n5 (* (- 1) n7)) 0) (= (* n5 n36) (* n7 n36)) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n21) (* n7 n7 n21)) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= n21 2)) (not (>= (+ n12 (* (- 1) n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* n5 n36) (* (- 1) (* n7 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n7 n21) (* n7 n7 n21)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= n21 2)) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= (+ n12 (* (- 1) n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* n5 n36) (* (- 1) (* n7 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n21 (* (- 1) (* n5 n5 n5 n21)) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n7 n21) (* n7 n7 n21)) (not (>= n21 2)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= (+ n12 (* (- 1) n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* n5 n36) (* (- 1) (* n7 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ n21 (* (- 1) (* n5 n7 n7 n21)) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n7 n21) (* n7 n7 n21)) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= n21 2)) (not (>= (+ n12 (* (- 1) n21)) 0)) (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* n5 n36) (* (- 1) (* n7 n36))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n7 n21) (* n7 n7 n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 2)) (>= n12 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n5 1) (not (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= n21 2)) (not (>= (+ n12 (* (- 1) n21)) 0)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= n7 (* n7 n21)) (= n5 (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= n5 1) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= n21 2)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= (+ n12 (* (- 1) n21)) 0)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= n7 (* n7 n21)) (= n5 (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= n5 1) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ n21 (* (- 1) (* n5 n5 n5 n21)) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (not (>= n21 2)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= (+ n12 (* (- 1) n21)) 0)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= n7 (* n7 n21)) (= n5 (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= n5 1) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ n21 (* (- 1) (* n5 n7 n7 n21)) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= n21 2)) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= n7 (* n7 n21)) (= n5 (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ n7 (* (- 1) (* n5 n7 n7 n21)) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) (* n7 n12)) (* n7 n21)) 1)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= n21 2)) (not (>= (+ n12 (* (- 1) n21)) 0)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= n7 (* n7 n21)) (= n5 (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= n5 1) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n7 n21) (* n7 n7 n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) (* n7 n21))) 1)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (>= (+ n7 (* (- 1) n36)) 0) (not (= n7 n36))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= n5 n21) (>= n5 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n5 (* (- 1) n21)) 0) (not (= n5 n21)) (not (>= n1 2)) (>= n21 1) (>= (+ n1 (* (- 1) n5)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n5 n7 n21) (* n7 n7 n21)) (>= (* n5 n7 n21) (* n7 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n7 n21) (* n7 n7 n21)) 1)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= n21 2)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (not (>= (+ n12 (* (- 1) n21)) 0)) (>= (+ (* n7 n36) (* n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) n36)) 0)) (not (>= n21 2)) (not (>= (+ n12 (* (- 1) n21)) 0)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= n7 (* n7 n21)) (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) n36)) 0)) (not (>= n21 2)) (not (>= (+ n24 (* (- 1) n39)) 1)) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (not (>= (+ n12 (* (- 1) n21)) 0)) (= n5 (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ n24 (* (- 1) n36)) 0) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) n36)) 0)) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= n21 2)) (= (* n5 n7 n21) (* n7 n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (= n7 (* n7 n21)) (>= (+ (* n5 n36) (* (- 1) (* n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n36) (* (- 1) (* n7 n36))) 1)) (not (>= (+ n12 (* (- 1) n21)) 0)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (= n9 0) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7 n21) (* n7 n7 n21)) (>= (+ n36 (* (- 1) (* n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n36) (* (- 1) (* n7 n36))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n5 (* n5 n21)) (>= (+ n5 (* (- 1) n7)) 0) (= n7 (* n7 n21)) (>= n21 1) (= n9 0) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7 n21) (* n7 n7 n21)) (not (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n1 (* (- 1) n5)) 1)) (>= n1 2) (not (>= (+ n7 (* (- 1) (* n1 n7))) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 1)) (not (>= (* n3 n7 n7) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n3 n7 n7) 0)) (>= n1 0) (not (>= (+ n1 (* (- 1) (* n3 n7 n7))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n3 n7 n7) 0)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 1)) (>= (+ (* n1 n5 n5) (* n3 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n3 n7 n7) 0)) (= n3 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 1)) (not (>= (+ n3 (* (- 1) (* n1 n5 n5))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n3 n7 n7) 0)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n7 n7))) 1)) (>= (* n1 n5 n5) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n3 0) (>= n3 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= n5 1) (not (>= n1 1)) (>= (+ n1 (* (- 1) n5)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n1 n5 n7 n21) 0) (= (* n1 n21) 0) (>= (+ n15 (* (- 1) n18)) 0) (= n15 (+ n33 (* n1 n9) (* (- 1) (* n1 n21)) (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21)))) (not (>= (* n1 n9) 1)) (= (* n1 n5 n36) 0) (>= (+ n18 (* (- 1) n33)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n15 (* (- 1) n18)) 1)) (= (* n3 n12) 0) (>= (+ n15 (* (- 1) n18) (* n3 n12)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n15 (* (- 1) n18)) 1)) (= (* n3 n12) 0) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (>= (+ n15 (* (- 1) n27)) 0) (>= (* n3 n21) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n5 n5 n21) 1) (>= (* n5 n5 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n7 n7 n7 n21) 1) (>= (* n7 n7 n7 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n5 n5) (* (- 1) (* n5 n5 n21))) 1) (= n1 0) (>= (+ n1 (* (- 1) n12)) 0) (= n7 (* n7 n21)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (= (* n5 n7 n21) (* n7 n7 n21)) (not (>= (+ (* 2 n36) (* (- 1) (* n5 n36))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n21 0) (>= (+ n5 (* (- 1) n21)) 0) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n1 n5 n5) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n1 n5 n5) 0) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (>= n21 0) (>= (+ n5 (* (- 1) n21)) 0) (not (>= (+ n7 (* (- 1) (* n1 n7))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= (+ n7 (* (- 1) (* n7 n21))) 1)) (not (= n7 n36)) (>= (+ n7 (* (- 1) n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) n36)) 0)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= n1 0) (>= (+ n1 (* (- 1) n12)) 0) (= n7 (* n7 n21)) (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) n36)) 0)) (= (* n5 n7 n21) (* n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= n1 0) (>= (+ n1 (* (- 1) n12)) 0) (= n7 (* n7 n21)) (>= (+ (* n5 n36) (* (- 1) (* n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) n36)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (not (>= (+ (* 2 (* n5 n5 n7 n21)) (* (- 1) (* n5 n5 n5 n7 n21))) 1)) (>= n21 1) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n36) (* n7 n36)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= n5 (* n5 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (= (* n1 n9) 0) (>= (+ n9 (* (- 1) (* n1 n9))) 1) (= (* n5 n7 n21) (* n7 n7 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ n5 (* (- 1) n21)) 1) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n5 n5 n7 n21))) 0)) (not (>= (+ (* 2 n36) (* (- 1) (* n5 n36))) 1)) (= n7 (* n7 n21)) (not (>= n1 1)) (>= (+ n1 (* (- 1) n12)) 0) (= (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n7 (* (- 1) n36)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= n5 (* n5 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (= (* n1 n9) 0) (>= (+ n9 (* (- 1) (* n1 n9))) 1) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* 2 n36) (* (- 1) (* n5 n36))) 1)) (>= (+ n5 (* (- 1) n21)) 1) (not (>= n1 1)) (>= (+ n1 (* (- 1) n12)) 0) (= (* n5 n5 n5 n36) (* n5 n5 n5 n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= n21 1) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n5 n7 n21))) 0)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n7 n36) (>= (+ n1 (* (- 1) n12)) 0) (not (>= n1 1)) (>= (+ n5 (* (- 1) n21)) 0) (>= (+ n24 (* (- 1) n36)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n5 n36) (* n5 n5 n5 n7 n21)) 1)) (>= (* n5 n5 n5 n36) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n5 n5 n7 n21) 0) (not (>= (+ (* n5 n5 n5 n36) (* n5 n5 n5 n7 n21)) 1)) (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n21)) 0)) (= n7 (* n7 n21)) (>= (+ n5 (* (- 1) n7)) 0) (not (>= n21 2)) (>= (* n7 n21) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n21)) 0)) (not (>= n21 2)) (>= n5 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n21)) 0)) (= (* n1 n5 n36) 0) (= (* n1 n5 n7 n21) 0) (not (>= n21 2)) (>= (+ n5 (* (- 1) (* n1 n5 n36)) (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n21)) 0)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (not (>= n21 2)) (>= (+ n5 (* (- 1) (* n5 n5 n5 n21)) (* n5 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n21)) 0)) (= (* n5 n7 n36) (* n7 n7 n36)) (>= (+ n5 (* (- 1) n7)) 0) (not (>= n21 2)) (>= (+ n7 (* (- 1) (* n5 n7 n36)) (* n7 n7 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n21)) 0)) (not (>= n1 1)) (not (>= n21 2)) (>= (+ n1 n5) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n21)) 0)) (not (>= n1 1)) (>= (+ n5 (* (- 1) n7)) 0) (not (>= n21 2)) (>= (+ n1 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n21)) 0)) (>= (+ n5 (* (- 1) n7)) 0) (not (>= n21 2)) (>= n7 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= n1 0) (not (>= (+ n5 (* (- 1) n21)) 0)) (not (>= n21 2)) (not (>= (+ n1 (* (- 1) n5)) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n21)) 0)) (= (* n1 n21) 0) (= n5 (* n5 n21)) (not (>= n21 2)) (>= (+ (* n1 n21) (* n5 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n21)) 0)) (= (* n1 n36) 0) (= n5 (* n5 n21)) (not (>= n21 2)) (>= (+ (* n1 n36) (* n5 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n21)) 0)) (= (* n3 n12) 0) (= n5 (* n5 n21)) (not (>= n21 2)) (>= (+ (* n3 n12) (* n5 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n21)) 0)) (= n5 (* n5 n21)) (not (>= n21 2)) (>= (* n5 n21) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21))) 1)) (not (>= (+ n24 (* (- 1) n39)) 1)) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (* n5 n7 n21) 1) (not (>= (+ n12 (* (- 1) n21)) 0)) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n5 n7 n21))) 0)) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n9 (* (- 1) n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21))) 1)) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (>= (* n5 n7 n21) 1) (>= n5 0) (not (>= (+ n5 (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n5 n7 n21))) 0)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (* n5 n9) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n9) 0)) (not (>= (+ n5 (* (- 1) (* n5 n21))) 0)) (>= n5 (- 1)) (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (not (>= (+ n12 (* (- 1) n21)) 0)) (>= (+ n9 (* (- 1) n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= (+ n7 (* (- 1) (* n7 n21))) 0)) (>= n5 1) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n7 (* (- 1) n36))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= n1 1)) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n5 n7 n21))) 0)) (>= (+ n36 (* (- 1) (* n7 n21))) 0) (>= (+ n24 (* (- 1) n36)) 0) (not (>= (+ n7 (* (- 1) (* n7 n21))) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= n5 0) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (>= (+ n1 (* (- 1) n12)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n1 (* (- 1) n3)) 1) (>= n3 0) (not (>= n3 1)) (>= n1 0) (not (>= n1 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n1 n5 n5) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (>= (+ (* n1 n5 n5) (* n3 n5 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n1 n5 n5) 0) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 1) (>= (* n3 n5 n7) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n1 n5 n7 n21) 0) (not (>= (* n1 n5 n36) 1)) (>= (+ (* n1 n5 n36) (* (- 1) (* n1 n5 n7 n21))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* 2 (* n7 n21)) (* (- 1) (* n1 n7 n21))) 1)) (= (* n5 n21) (* n7 n21)) (not (>= (+ (* 2 n5) (* (- 1) (* n5 n21))) 1)) (>= n5 1) (not (>= (* n1 n7 n21) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (>= n5 2) (>= (+ n5 (* (- 1) n7)) 0) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n5 n7 n21))) 0)) (>= (+ n24 (* (- 1) n36)) 0) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (not (>= (+ (* 2 n5) (* (- 1) (* n5 n21))) 1)) (>= (+ n7 (* (- 1) n12)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n1 n21) (* n3 n21)) (>= (* n1 n21) (* n3 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 0) (not (= (* n1 n21) (* n3 n21))) (= (* n1 n21) 0) (= (* n1 n21) (* (- 1) (* n3 n21)))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n1 n21) (* (- 1) (* n3 n21))) 0) (not (= (* n1 n21) (* n3 n21))) (not (>= (* n1 n21) 1)) (>= (* n3 n21) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n7) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n5 n7))) 0)) (= (* n1 n7) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n5 n7) 1)) (>= n5 2) (not (>= (+ (* 2 n5) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (= (* n5 n7) (* n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ n36 (* (- 1) (* n7 n21))) 0) (not (>= n1 2)) (>= n5 2) (not (>= (+ (* 2 n5) (* (- 1) (* n5 n21))) 1)) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= (+ (* n5 n9) (* n5 n21)) 1)) (not (>= (+ (* n5 n7 n21) (* (- 1) (* n7 n7 n21))) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n36) (* n7 n36)) (>= (+ n24 (* (- 1) n36)) 0) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (not (>= (+ (* n5 n5 n36) (* (- 1) (* n5 n5 n7 n21))) 0)) (= n12 (+ n39 (* (- 1) (* n7 n7 n36)) (* n7 n7 n7 n21))) (not (>= (+ n24 (* (- 1) n39)) 1)) (>= (+ n1 (* (- 1) n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n1 n7) 0)) (= (* n1 n7) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n3 n7 n7) 0) (>= (* n3 n7 n7) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n12 0) (>= n12 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n1 n21) (* n3 n21)) (= (* n3 n12) 0) (= n18 (+ n27 (* n3 n12) (* (- 1) (* n3 n21)))) (= (* n1 n21) 0) (not (>= (+ n15 (* (- 1) n18)) 1)) (>= (+ n15 (* (- 1) n27)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n15 (+ n30 (* n1 n9) (* (- 1) (* n1 n36)) (* n1 n7 n21))) (not (>= (* n1 n7 n21) 1)) (= (* n1 n9) 0) (= (* n1 n36) 0) (>= (+ n15 (* (- 1) n30)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n7 0) (>= n7 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n7 n7 n7) 1)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 1)) (>= (* n5 n5 n5) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (* n7 n7 n7) 0)) (not (>= (+ (* n5 n5 n5) (* (- 1) (* n7 n7 n7))) 1)) (>= (+ (* n5 n5 n5) (* n7 n7 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (not (or (<= (* n3 n12) 0) (>= (* n3 n12) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n5 n21) 0) (not (>= (+ (* n5 n5 n21) (* n5 n7 n21)) 1)) (>= (* n5 n7 n21) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 1) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ n7 (* (- 1) (* n1 n7))) 1)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= n5 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n5 (* n1 n5)) (>= (* n5 n7 n21) (- 1)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (= n7 (* n1 n7)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (* n1 n5) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (not (>= (+ n5 (* (- 1) (* n1 n5))) 1)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (= n7 (* n1 n7)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ (* 7 n5) (* (- 1) (* n1 n5))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (= n5 (* n1 n5)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (= n7 (* n1 n7)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ n5 (* n1 n5)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (= n7 (* n1 n7)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= n7 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 0) (not (>= n1 2)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (= n7 (* n1 n7)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ n1 n5) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (= n7 (* n1 n7)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (+ n5 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (= (* n1 n5 n5) (* n1 n5 n7)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (= n7 (* n1 n7)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ n5 (* (- 1) (* n1 n5 n5)) (* n1 n5 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (= (* n5 n5 n5 n21) (* n5 n5 n7 n21)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (= n7 (* n1 n7)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ n5 (* (- 1) n7)) 1)) (>= (+ n5 (* (- 1) (* n5 n5 n5 n21)) (* n5 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 0) (= n7 (* n1 n7)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (>= (+ n5 (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (= n7 (* n1 n7)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n7 (* n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (= n7 (* n1 n7)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (+ (* 7 n7) (* (- 1) (* n1 n7))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (not (>= (+ n7 (* (- 1) (* n1 n7))) 1)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (+ n7 (* n1 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (* n1 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (= n7 (* n1 n7)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (+ n7 (* (- 1) (* n5 n7 n7 n21)) (* n7 n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 0) (not (>= n1 2)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (= n7 (* n1 n7)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (+ n1 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (= n7 (* n1 n7)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (+ n7 (* (- 1) (* n5 n7 n36)) (* n7 n7 n36)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 0) (= n7 (* n1 n7)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (>= (+ n7 (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) (* n1 n7))) 1)) (= n5 (* n1 n5)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (+ (* n1 n5) (* n1 n5 n5)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (>= (* n1 n5 n7 n21) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (>= (+ (* n1 n5 n5) (* (- 1) (* n3 n5 n7))) 0) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (* n3 n5 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (= (* n1 n5 n5) (* n1 n5 n7)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (* n1 n5 n7) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (>= n1 1) (not (>= (+ n1 (* (- 1) n3)) 1)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ n3 (* (- 1) (* n1 n5 n5))) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ (* n1 n5 n5) (* n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (>= (+ (* n1 n5 n5) (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (= (* n1 n5 n5) 0)) (>= (* n1 n5 n5) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (+ (* n1 n7) (* n1 n5 n5)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ n7 (* (- 1) (* n1 n7))) 1)) (= n5 (* n1 n5)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (>= (+ (* n1 n5) (* n1 n7)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 0) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ (* n1 n7) (* n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 0) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (>= (+ (* n1 n7) (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 0) (= n5 (* n1 n5)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n7 (* n1 n7)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ (* n1 n5) (* n7 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 0) (= n5 (* n1 n5)) (= n7 (* n1 n7)) (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= (+ (* n1 n7) (* (- 1) (* n1 n5 n5))) 1)) (not (>= (+ (* n1 n5 n5) (* (- 1) (* n1 n5 n7 n21))) 0)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (>= (+ (* n1 n5) (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) (- 1)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (* n7 n7 n21) 2)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 0) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (= (* n5 n5 n21) (* (- 1) (* n7 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ (* n7 n7 n21) (* n1 n5 n7 n21)) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 1) (= (* n1 n5 n7 n21) (* n1 n7 n7 n21)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (>= (* n1 n7 n7 n21) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n5 n7 n21) 1) (= (* n1 n5 n5 n21) (* n1 n5 n7 n21)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n7 n7 n21) (* n1 n5 n7 n21)) (>= (* n1 n5 n5 n21) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (>= (+ n24 (* (- 1) n36)) 0) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= (* n5 n5 n21) (* n7 n7 n21)) (>= (+ n12 (* (- 1) n21)) 0) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n7 n7 n21) (* n1 n5 n7 n21)) 1)) (>= (* n7 n7 n21) 0) (>= (* n1 n5 n7 n21) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n7 n7 n21) (* n1 n5 n7 n21)) 1)) (= (* n1 n5 n7 n21) (* n1 n7 n7 n21)) (>= (* n7 n7 n21) 1) (>= (* n1 n7 n7 n21) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n7 n7 n21) (* n1 n5 n7 n21)) 1)) (= (* n1 n5 n5 n21) (* n1 n5 n7 n21)) (>= (* n7 n7 n21) 1) (>= (* n1 n5 n5 n21) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n7)) 1)) (not (>= n21 2)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (>= (* n7 n7 n21) 1) (= n5 (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= n7 (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (>= (+ n24 (* (- 1) n36)) 0) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0)) (= n5 (* n5 n21)) (not (>= (+ n5 (* (- 1) n7)) 1)) (= n7 (* n7 n21)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= n21 2)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (>= (* n7 n7 n21) 0) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (>= (+ n36 (* (- 1) (* n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (>= (+ n24 (* (- 1) n36)) 0) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= n21 2)) (>= (* n7 n7 n21) 1) (= n5 (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n21))) 1)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (>= n12 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (>= (* n7 n7 n21) 0) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (* n5 n7 n21) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (* n7 n7 n21) 1) (>= (+ (* n5 n5 n21) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (>= (* n7 n7 n21) 0) (>= (* n5 n5 n21) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n7)) 1)) (= n12 (+ n36 (* (- 1) (* n7 n21)) (* n7 n36) (* (- 1) (* n7 n7 n21)))) (= n9 (+ n24 (* (- 1) (* n5 n5 n21)) (* n5 n5 n5 n36) (* (- 1) (* n5 n5 n5 n7 n21)))) (>= (+ n24 (* (- 1) n36)) 0) (= (* n5 n9) (+ (* n5 n21) (* n5 n5 n21) (* (- 1) (* n5 n5 n36)) (* (- 1) (* n5 n5 n5 n36)) (* n5 n5 n7 n21) (* n5 n5 n5 n7 n21))) (not (>= (+ (* n5 n9) (* (- 1) (* n5 n21))) 0)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (>= (* n7 n7 n21) 1) (= n5 (* n5 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (not (>= (+ n7 (* (- 1) (* n7 n21))) 1)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (>= (+ n12 (* (- 1) n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ n5 (* (- 1) n7)) 1)) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (not (>= n21 2)) (>= (* n7 n7 n21) 1) (= n5 (* n5 n21)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1) (= (* n5 n5 n21) (* n5 n7 n21)) (= (* n5 n36) (* n7 n36)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (= n7 (* n7 n21)) (not (>= (+ (* n5 n5 n21) (* n7 n7 n21)) 1)) (>= n9 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (* n7 n21) 0) (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1) (not (>= (+ (* n5 n21) (* n7 n21)) 1))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n5 n21) (* n5 n7 n21)) (>= (+ n9 (* (- 1) n21)) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n36) (* n7 n36)) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (= (* n5 n5 n21) (* n7 n7 n21))))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (not (>= (+ (* n5 n36) (* n7 n36)) 1)) (= (* n5 n5 n21) (* n7 n7 n21)) (= (* n5 n5 n21) (* n5 n7 n21)) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (>= (* n7 n7 n21) 0) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (>= (+ (* n5 n36) (* (- 1) (* n5 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (>= (+ (* n5 n36) (* n7 n36)) 1)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (>= (* n7 n7 n21) 0) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1) (= (* n5 n5 n7 n21) (* n5 n7 n7 n21)) (= (* n5 n7 n7 n21) (* n7 n7 n7 n21)) (= (* n5 n5 n36) (* n5 n7 n36)) (= (* n5 n7 n36) (* n7 n7 n36)) (>= (* n5 n36) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n7 (* n1 n7)) (>= (+ n7 (* (- 1) (* n1 n7))) 1)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (>= n1 1) (not (>= (+ n1 (* (- 1) (* n3 n7 n7))) 1)) (= (* n3 n7 n7) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (= (* n5 n36) (* n7 n36))) (>= (+ (* n5 n36) (* (- 1) (* n7 n36))) 0) (= n21 0) (= (* n5 n36) (* (- 1) (* n7 n36))) (= (* n5 n7 n21) 0) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (not (= (* n5 n36) (* n7 n36))) (>= (+ (* n5 n36) (* (- 1) (* n7 n36))) 0) (not (>= (+ (* n5 n36) (* n7 n36)) 1)) (= (* n7 n7 n21) 0) (>= (+ (* n7 n36) (* (- 1) (* n7 n7 n21))) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= (* n7 n7 n7 n21) 0) (= n21 0) (= (* n5 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= (* n7 n7 n21) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (>= (+ (* n5 n21) (* (- 1) (* n5 n5 n36)) (* n5 n5 n7 n21)) 0) (not (>= (* n5 n5 n7 n21) 1)) (>= (+ n21 (* (- 1) (* n5 n36)) (* n5 n7 n21)) 0)))
(check-sat)
(pop 1)
(set-info :notes "theory lemma: expect valid")
(push 1)
(assert (and (= n21 0) (= (* n7 n7 n7 n21) 0) (= n9 (+ n21 (* n5 n21) (* (- 1) (* n5 n36)) (* (- 1) (* n5 n5 n36)) (* n5 n7 n21) (* n5 n5 n7 n21))) (= (* n5 n7 n21) 0) (= (* n5 n36) (* n7 n36)) (= (* n7 n7 n21) 0) (= (* n5 n7 n36) (* n7 n7 n36)) (= (* n5 n5 n36) (* n5 n7 n36)) (>= (+ (* n7 n12) (* (- 1) (* n7 n21))) 1) (= (* n7 n12) (+ (* n7 n36) (* (- 1) (* n7 n7 n21)) (* n7 n7 n36) (* (- 1) (* n7 n7 n7 n21)))) (not (>= (+ (* n5 n21) (* (- 1) (* n7 n21))) 1)) (not (>= (* n5 n5 n7 n21) 1)) (>= n9 0)))
(check-sat)
(pop 1)
(check-sat)
unsat
(get-model)
(error "Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.")
